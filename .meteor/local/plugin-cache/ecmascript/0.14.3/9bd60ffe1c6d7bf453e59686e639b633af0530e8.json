{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/game-lobbies/game-lobbies.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/empirica:core/api/game-lobbies/game-lobbies.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/game-lobbies/game-lobbies.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/game-lobbies/game-lobbies.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/game-lobbies/game-lobbies.js"}},"code":"module.export({\n  GameLobbies: () => GameLobbies\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet statusSchema;\nmodule.link(\"../batches/status-schema\", {\n  statusSchema(v) {\n    statusSchema = v;\n  }\n\n}, 1);\nlet Batches;\nmodule.link(\"../batches/batches\", {\n  Batches(v) {\n    Batches = v;\n  }\n\n}, 2);\nlet BelongsTo, HasManyByRef, TimestampSchema;\nmodule.link(\"../default-schemas\", {\n  BelongsTo(v) {\n    BelongsTo = v;\n  },\n\n  HasManyByRef(v) {\n    HasManyByRef = v;\n  },\n\n  TimestampSchema(v) {\n    TimestampSchema = v;\n  }\n\n}, 3);\nlet DebugModeSchema, UserDataSchema;\nmodule.link(\"../default-schemas.js\", {\n  DebugModeSchema(v) {\n    DebugModeSchema = v;\n  },\n\n  UserDataSchema(v) {\n    UserDataSchema = v;\n  }\n\n}, 4);\nlet Players;\nmodule.link(\"../players/players\", {\n  Players(v) {\n    Players = v;\n  }\n\n}, 5);\nlet Treatments;\nmodule.link(\"../treatments/treatments\", {\n  Treatments(v) {\n    Treatments = v;\n  }\n\n}, 6);\nconst GameLobbies = new Mongo.Collection(\"game_lobbies\");\nGameLobbies.helpers({\n  players() {\n    return Players.find({\n      _id: {\n        $in: this.playerIds\n      }\n    }).fetch();\n  },\n\n  batch() {\n    return Batches.findOne({\n      _id: this.batchId\n    });\n  },\n\n  treatment() {\n    return Treatments.findOne({\n      _id: this.treatmentId\n    });\n  }\n\n});\nGameLobbies.schema = new SimpleSchema({\n  // index allows for an ordering of lobbies so we know which one\n  // to choose from next\n  index: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    label: \"Position\"\n  },\n  // availableCount tells us how many slots are available in this lobby\n  // (== treatment.playerCount)\n  availableCount: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    label: \"Available Slots Count\"\n  },\n  timeoutStartedAt: {\n    label: \"Time the first player arrived in the lobby\",\n    type: Date,\n    optional: true\n  },\n  timedOutAt: {\n    label: \"Time when the lobby timed out and was cancelled\",\n    type: Date,\n    optional: true,\n    index: 1\n  },\n  endReason: {\n    label: \"Ended Reason\",\n    type: String,\n    optional: true,\n    regEx: /[a-zA-Z0-9_]+/\n  },\n  // Queued players are players that have been associated with the lobby\n  // but are not confirmed for the game yet. playerIds is used for confirmed\n  // players\n  // There might be more queued player than availableCount as we\n  // allow overbooking to make games start faster.\n  queuedPlayerIds: {\n    type: Array,\n    defaultValue: [],\n    label: \"Queued Players\",\n    index: true\n  },\n  \"queuedPlayerIds.$\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    label: \"Queued Player\"\n  }\n});\n\nif (Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) {\n  GameLobbies.schema.extend(DebugModeSchema);\n}\n\nGameLobbies.schema.extend(UserDataSchema);\nGameLobbies.schema.extend(TimestampSchema); // playerIds tells us how many players are ready to start (finished intro)\n// Once playerIds.length == availableCount, the game starts. Player that are\n// queued but haven't made it past the intro in time will be led to the outro\n// directly.\n\nGameLobbies.schema.extend(HasManyByRef(\"Players\"));\nGameLobbies.schema.extend(BelongsTo(\"Games\", false));\nGameLobbies.schema.extend(BelongsTo(\"Treatments\"));\nGameLobbies.schema.extend(BelongsTo(\"Batches\"));\nGameLobbies.schema.extend(BelongsTo(\"LobbyConfigs\")); // We are denormalizing the parent batch status in order to make clean queries\n\nGameLobbies.schema.extend(statusSchema);\nGameLobbies.attachSchema(GameLobbies.schema);","map":{"version":3,"sources":["packages/empirica:core/api/game-lobbies/game-lobbies.js"],"names":["module","export","GameLobbies","SimpleSchema","link","default","v","statusSchema","Batches","BelongsTo","HasManyByRef","TimestampSchema","DebugModeSchema","UserDataSchema","Players","Treatments","Mongo","Collection","helpers","players","find","_id","$in","playerIds","fetch","batch","findOne","batchId","treatment","treatmentId","schema","index","type","Integer","min","label","availableCount","timeoutStartedAt","Date","optional","timedOutAt","endReason","String","regEx","queuedPlayerIds","Array","defaultValue","RegEx","Id","Meteor","isDevelopment","settings","public","debug_gameDebugMode","extend","attachSchema"],"mappings":"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","sourcesContent":["// game-lobbies.js\nimport SimpleSchema from \"simpl-schema\";\n\nimport { statusSchema } from \"../batches/status-schema\";\nimport { Batches } from \"../batches/batches\";\nimport { BelongsTo, HasManyByRef, TimestampSchema } from \"../default-schemas\";\nimport { DebugModeSchema, UserDataSchema } from \"../default-schemas.js\";\nimport { Players } from \"../players/players\";\nimport { Treatments } from \"../treatments/treatments\";\n\nexport const GameLobbies = new Mongo.Collection(\"game_lobbies\");\n\nGameLobbies.helpers({\n  players() {\n    return Players.find({ _id: { $in: this.playerIds } }).fetch();\n  },\n  batch() {\n    return Batches.findOne({ _id: this.batchId });\n  },\n  treatment() {\n    return Treatments.findOne({ _id: this.treatmentId });\n  }\n});\n\nGameLobbies.schema = new SimpleSchema({\n  // index allows for an ordering of lobbies so we know which one\n  // to choose from next\n  index: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    label: \"Position\"\n  },\n\n  // availableCount tells us how many slots are available in this lobby\n  // (== treatment.playerCount)\n  availableCount: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    label: \"Available Slots Count\"\n  },\n\n  timeoutStartedAt: {\n    label: \"Time the first player arrived in the lobby\",\n    type: Date,\n    optional: true\n  },\n\n  timedOutAt: {\n    label: \"Time when the lobby timed out and was cancelled\",\n    type: Date,\n    optional: true,\n    index: 1\n  },\n\n  endReason: {\n    label: \"Ended Reason\",\n    type: String,\n    optional: true,\n    regEx: /[a-zA-Z0-9_]+/\n  },\n\n  // Queued players are players that have been associated with the lobby\n  // but are not confirmed for the game yet. playerIds is used for confirmed\n  // players\n  // There might be more queued player than availableCount as we\n  // allow overbooking to make games start faster.\n  queuedPlayerIds: {\n    type: Array,\n    defaultValue: [],\n    label: `Queued Players`,\n    index: true\n  },\n  \"queuedPlayerIds.$\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    label: `Queued Player`\n  }\n});\n\nif (Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) {\n  GameLobbies.schema.extend(DebugModeSchema);\n}\n\nGameLobbies.schema.extend(UserDataSchema);\nGameLobbies.schema.extend(TimestampSchema);\n// playerIds tells us how many players are ready to start (finished intro)\n// Once playerIds.length == availableCount, the game starts. Player that are\n// queued but haven't made it past the intro in time will be led to the outro\n// directly.\nGameLobbies.schema.extend(HasManyByRef(\"Players\"));\nGameLobbies.schema.extend(BelongsTo(\"Games\", false));\nGameLobbies.schema.extend(BelongsTo(\"Treatments\"));\nGameLobbies.schema.extend(BelongsTo(\"Batches\"));\nGameLobbies.schema.extend(BelongsTo(\"LobbyConfigs\"));\n// We are denormalizing the parent batch status in order to make clean queries\nGameLobbies.schema.extend(statusSchema);\nGameLobbies.attachSchema(GameLobbies.schema);\n"]},"sourceType":"module","hash":"9bd60ffe1c6d7bf453e59686e639b633af0530e8"}
