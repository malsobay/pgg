{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/client/intro/Quiz.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/intro/Quiz.jsx","filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/client/intro/Quiz.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","root":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/client/intro/Quiz.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/intro/Quiz.jsx"}},"code":"module.export({\n  default: () => Quiz\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Centered;\nmodule.link(\"meteor/empirica:core\", {\n  Centered(v) {\n    Centered = v;\n  }\n\n}, 1);\n\nclass Quiz extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      players: \"\",\n      punishment: \"\",\n      payoff: \"\",\n      kept: \"\"\n    };\n\n    this.handleChange = event => {\n      const el = event.currentTarget;\n      this.setState({\n        [el.name]: el.value.trim().toLowerCase()\n      });\n    };\n\n    this.handleSubmit = (players, punishmentRate) => event => {\n      event.preventDefault();\n\n      if (this.state.players !== String(players - 1) || this.state.punishment !== String(2 * punishmentRate) && punishmentRate > 0 || this.state.payoff != \"10\" || this.state.kept != \"6\") {\n        alert(\"You have an incorrect answer; please read the instructions and try again.\");\n      } else {\n        this.props.onNext();\n      }\n    };\n  }\n\n  render() {\n    const {\n      hasPrev,\n      hasNext,\n      onNext,\n      onPrev,\n      game\n    } = this.props;\n    const {\n      players,\n      punishment,\n      payoff,\n      kept\n    } = this.state;\n    const playerCount = game.treatment.playerCount;\n    const punishmentRate = game.treatment.punishment;\n    return /*#__PURE__*/React.createElement(Centered, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz\"\n    }, /*#__PURE__*/React.createElement(\"h1\", null, \" Quiz \"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit(playerCount, punishmentRate)\n    }, /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sum\"\n    }, \" \", \"In this game there will be a total of \", playerCount, \" players. How many players are there other than yourself?\", \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      dir: \"auto\",\n      id: \"sum\",\n      name: \"players\",\n      placeholder: \"e.g. 1\",\n      value: players,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true\n    })), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"horse\"\n    }, \" \", \"Imagine that in a given round, you have a starting fund of 10 coins. If you contribute 4 coins, how much of your starting funds do you keep?\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      dir: \"auto\",\n      id: \"kept\",\n      name: \"kept\",\n      placeholder: \"e.g. 10\",\n      value: kept,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true\n    })), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"horse\"\n    }, \"Imagine that in a given round, the money multiplier is 2 and players contributed the following amounts:\", /*#__PURE__*/React.createElement(\"div\", null, \" Player 1: 10 Coins \"), \" \", /*#__PURE__*/React.createElement(\"div\", null, \" Player 2: 4 Coins \"), /*#__PURE__*/React.createElement(\"div\", null, \" Player 3: 1 Coins \"), \"What is the round payoff? (round payoff = sum of contributions x multiplier / the number of players)\", \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      dir: \"auto\",\n      id: \"payoff\",\n      name: \"payoff\",\n      placeholder: \"e.g. 20\",\n      value: payoff,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true\n    })), punishmentRate > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"horse\"\n    }, \"Each coin you spend to punish someone deducts\", \" \", punishmentRate, \" coins from them. If you spend 2 coins to punish someone, how many coins will be deducted from them?\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      dir: \"auto\",\n      id: \"punishment\",\n      name: \"punishment\",\n      placeholder: \"e.g. 2\",\n      value: punishment,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      required: true\n    }))), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: onPrev,\n      disabled: !hasPrev\n    }, \"Back to instructions\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\"\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["client/intro/Quiz.jsx"],"names":["module","export","default","Quiz","React","link","v","Centered","Component","state","players","punishment","payoff","kept","handleChange","event","el","currentTarget","setState","name","value","trim","toLowerCase","handleSubmit","punishmentRate","preventDefault","String","alert","props","onNext","render","hasPrev","hasNext","onPrev","game","playerCount","treatment"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Centered } from \"meteor/empirica:core\";\n\nexport default class Quiz extends React.Component {\n  state = { players: \"\", punishment: \"\", payoff: \"\", kept: \"\" };\n\n  handleChange = (event) => {\n    const el = event.currentTarget;\n    this.setState({ [el.name]: el.value.trim().toLowerCase() });\n  };\n\n  handleSubmit = (players, punishmentRate) => (event) => {\n    event.preventDefault();\n\n    if (\n      this.state.players !== String(players - 1) ||\n      (this.state.punishment !== String(2 * punishmentRate) && punishmentRate > 0) ||\n      this.state.payoff != \"10\" ||\n      this.state.kept != \"6\"\n    ) {\n      alert(\"You have an incorrect answer; please read the instructions and try again.\");\n    } else {\n      this.props.onNext();\n    }\n  };\n\n  render() {\n    const { hasPrev, hasNext, onNext, onPrev, game } = this.props;\n    const { players, punishment, payoff, kept } = this.state;\n    const playerCount = game.treatment.playerCount;\n    const punishmentRate = game.treatment.punishment;\n    return (\n      <Centered>\n        <div className=\"quiz\">\n          <h1> Quiz </h1>\n          <form onSubmit={this.handleSubmit(playerCount, punishmentRate)}>\n            <p>\n              <label htmlFor=\"sum\">\n                {\" \"}\n                In this game there will be a total of {playerCount} players. How\n                many players are there other than yourself?{\" \"}\n              </label>\n              <input\n                type=\"text\"\n                dir=\"auto\"\n                id=\"sum\"\n                name=\"players\"\n                placeholder=\"e.g. 1\"\n                value={players}\n                onChange={this.handleChange}\n                autoComplete=\"off\"\n                required\n              />\n            </p>\n            <p>\n              <label htmlFor=\"horse\">\n                {\" \"}\n                Imagine that in a given round, you have a starting fund of 10\n                coins. If you contribute 4 coins, how much of your starting funds do\n                you keep?\n              </label>\n              <input\n                type=\"text\"\n                dir=\"auto\"\n                id=\"kept\"\n                name=\"kept\"\n                placeholder=\"e.g. 10\"\n                value={kept}\n                onChange={this.handleChange}\n                autoComplete=\"off\"\n                required\n              />\n            </p>\n            <p>\n              <label htmlFor=\"horse\">\n                Imagine that in a given round, the money multiplier is 2 and\n                players contributed the following amounts:\n                <div> Player 1: 10 Coins </div> <div> Player 2: 4 Coins </div>\n                <div> Player 3: 1 Coins </div>\n                What is the round payoff? (round payoff = sum of contributions x\n                multiplier / the number of players){\" \"}\n              </label>\n              <input\n                type=\"text\"\n                dir=\"auto\"\n                id=\"payoff\"\n                name=\"payoff\"\n                placeholder=\"e.g. 20\"\n                value={payoff}\n                onChange={this.handleChange}\n                autoComplete=\"off\"\n                required\n              />\n            </p>\n\n            {punishmentRate > 0 && \n              <>\n              <p>\n                <label htmlFor=\"horse\">\n                  Each coin you spend to punish someone deducts{\" \"}\n                  {punishmentRate} coins from them. If you spend 2 coins to punish\n                  someone, how many coins will be deducted from them?\n                </label>\n                <input\n                  type=\"text\"\n                  dir=\"auto\"\n                  id=\"punishment\"\n                  name=\"punishment\"\n                  placeholder=\"e.g. 2\"\n                  value={punishment}\n                  onChange={this.handleChange}\n                  autoComplete=\"off\"\n                  required\n                />\n              </p>\n            </>}\n\n\n            <p>\n              <button type=\"button\" onClick={onPrev} disabled={!hasPrev}>\n                Back to instructions\n              </button>\n              <button type=\"submit\">Submit</button>\n            </p>\n          </form>\n        </div>\n      </Centered>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"b8142ea9fb2a6a37c310aee1a0287c7591334df7"}
