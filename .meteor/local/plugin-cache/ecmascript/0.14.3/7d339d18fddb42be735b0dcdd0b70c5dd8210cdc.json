{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminFactor.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminFactor.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminFactor.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminFactor.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminFactor.jsx"}},"code":"module.export({\n  default: () => AdminFactor\n});\nlet EditableText, Button;\nmodule.link(\"@blueprintjs/core\", {\n  EditableText(v) {\n    EditableText = v;\n  },\n\n  Button(v) {\n    Button = v;\n  }\n\n}, 0);\nlet IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames(v) {\n    IconNames = v;\n  }\n\n}, 1);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 2);\nlet AlertToaster;\nmodule.link(\"../Toasters.jsx\", {\n  AlertToaster(v) {\n    AlertToaster = v;\n  }\n\n}, 3);\nlet updateFactor;\nmodule.link(\"../../../api/factors/methods.js\", {\n  updateFactor(v) {\n    updateFactor = v;\n  }\n\n}, 4);\n\nclass AdminFactor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = name => {\n      this.setState({\n        name\n      });\n    };\n\n    this.handleNameConfirm = () => {\n      const {\n        _id\n      } = this.props.factor;\n      const {\n        name\n      } = this.state;\n\n      if (!name || name.trim() === \"\") {\n        this.setState({\n          name: this.initialName\n        });\n        return;\n      }\n\n      updateFactor.call({\n        _id,\n        name\n      }, err => {\n        if (err) {\n          AlertToaster.show({\n            message: String(err)\n          });\n          this.handleNameChange(this.initialName);\n          return;\n        }\n\n        this.initialName = name;\n      });\n    };\n\n    this.initialName = props.factor.name;\n    this.state = {\n      name: props.factor.name\n    };\n  }\n\n  componentWillUpdate(props) {\n    if (props.factor.name !== this.props.factor.name) {\n      this.initialName = props.factor.name;\n      this.setState({\n        name: props.factor.name\n      });\n    }\n  }\n\n  render() {\n    const {\n      factor,\n      archived\n    } = this.props;\n    const {\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: factor._id\n    }, /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(EditableText, {\n      onChange: this.handleNameChange,\n      onConfirm: this.handleNameConfirm,\n      value: name\n    })), /*#__PURE__*/React.createElement(\"td\", null, String(factor.value)), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Button, {\n      text: archived ? \"Unarchive \".concat(t.name) : \"\",\n      intent: archived ? Intent.SUCCESS : null,\n      icon: IconNames.BOX,\n      onClick: () => updateFactor.call({\n        _id: factor._id,\n        name,\n        archived: !archived\n      })\n    })));\n  }\n\n}","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminFactor.jsx"],"names":["module","export","default","AdminFactor","EditableText","Button","link","v","IconNames","React","AlertToaster","updateFactor","Component","constructor","props","handleNameChange","name","setState","handleNameConfirm","_id","factor","state","trim","initialName","call","err","show","message","String","componentWillUpdate","render","archived","value","t","Intent","SUCCESS","BOX"],"mappings":"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","sourcesContent":["import { EditableText, Button } from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport React from \"react\";\nimport { AlertToaster } from \"../Toasters.jsx\";\n\nimport { updateFactor } from \"../../../api/factors/methods.js\";\n\nexport default class AdminFactor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialName = props.factor.name;\n    this.state = {\n      name: props.factor.name\n    };\n  }\n\n  componentWillUpdate(props) {\n    if (props.factor.name !== this.props.factor.name) {\n      this.initialName = props.factor.name;\n      this.setState({ name: props.factor.name });\n    }\n  }\n\n  handleNameChange = name => {\n    this.setState({ name });\n  };\n\n  handleNameConfirm = () => {\n    const { _id } = this.props.factor;\n    const { name } = this.state;\n    if (!name || name.trim() === \"\") {\n      this.setState({ name: this.initialName });\n      return;\n    }\n    updateFactor.call({ _id, name }, err => {\n      if (err) {\n        AlertToaster.show({ message: String(err) });\n        this.handleNameChange(this.initialName);\n        return;\n      }\n      this.initialName = name;\n    });\n  };\n\n  render() {\n    const { factor, archived } = this.props;\n    const { name } = this.state;\n    return (\n      <tr key={factor._id}>\n        <td>\n          <EditableText\n            onChange={this.handleNameChange}\n            onConfirm={this.handleNameConfirm}\n            value={name}\n          />\n        </td>\n        <td>{String(factor.value)}</td>\n        <td>\n          <Button\n            text={archived ? `Unarchive ${t.name}` : \"\"}\n            intent={archived ? Intent.SUCCESS : null}\n            icon={IconNames.BOX}\n            onClick={() =>\n              updateFactor.call({ _id: factor._id, name, archived: !archived })\n            }\n          />\n        </td>\n      </tr>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"7d339d18fddb42be735b0dcdd0b70c5dd8210cdc"}
