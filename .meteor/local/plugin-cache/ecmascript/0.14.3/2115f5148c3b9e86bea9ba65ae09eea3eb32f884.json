{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-stages/augment.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/empirica:core/api/player-stages/augment.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-stages/augment.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-stages/augment.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/player-stages/augment.js"}},"code":"module.export({\n  augmentGameLobby: () => augmentGameLobby,\n  augmentPlayerLobby: () => augmentPlayerLobby,\n  augmentPlayer: () => augmentPlayer,\n  augmentPlayerStageRound: () => augmentPlayerStageRound,\n  stubPlayerStageRound: () => stubPlayerStageRound,\n  augmentGameStageRound: () => augmentGameStageRound,\n  stubStageRound: () => stubStageRound\n});\nlet updateGameData, earlyExitGame;\nmodule.link(\"../games/methods.js\", {\n  updateGameData(v) {\n    updateGameData = v;\n  },\n\n  earlyExitGame(v) {\n    earlyExitGame = v;\n  }\n\n}, 0);\nlet updateGameLobbyData;\nmodule.link(\"../game-lobbies/methods\", {\n  updateGameLobbyData(v) {\n    updateGameLobbyData = v;\n  }\n\n}, 1);\nlet updatePlayerRoundData;\nmodule.link(\"../player-rounds/methods\", {\n  updatePlayerRoundData(v) {\n    updatePlayerRoundData = v;\n  }\n\n}, 2);\nlet PlayerRounds;\nmodule.link(\"../player-rounds/player-rounds\", {\n  PlayerRounds(v) {\n    PlayerRounds = v;\n  }\n\n}, 3);\nlet updatePlayerData, earlyExitPlayer, earlyExitPlayerLobby;\nmodule.link(\"../players/methods.js\", {\n  updatePlayerData(v) {\n    updatePlayerData = v;\n  },\n\n  earlyExitPlayer(v) {\n    earlyExitPlayer = v;\n  },\n\n  earlyExitPlayerLobby(v) {\n    earlyExitPlayerLobby = v;\n  }\n\n}, 4);\nlet playerLog;\nmodule.link(\"../player-logs/methods.js\", {\n  playerLog(v) {\n    playerLog = v;\n  }\n\n}, 5);\nlet updateRoundData;\nmodule.link(\"../rounds/methods.js\", {\n  updateRoundData(v) {\n    updateRoundData = v;\n  }\n\n}, 6);\nlet updateStageData;\nmodule.link(\"../stages/methods.js\", {\n  updateStageData(v) {\n    updateStageData = v;\n  }\n\n}, 7);\nlet submitPlayerStage, updatePlayerStageData;\nmodule.link(\"./methods\", {\n  submitPlayerStage(v) {\n    submitPlayerStage = v;\n  },\n\n  updatePlayerStageData(v) {\n    updatePlayerStageData = v;\n  }\n\n}, 8);\nlet PlayerStages;\nmodule.link(\"./player-stages\", {\n  PlayerStages(v) {\n    PlayerStages = v;\n  }\n\n}, 9);\n\nconst gameSet = function (gameId) {\n  let append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (key, value) => {\n    updateGameData.call({\n      gameId,\n      key,\n      value: JSON.stringify(value),\n      append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nconst gameLobbySet = function (gameLobbyId) {\n  let append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (key, value) => {\n    updateGameLobbyData.call({\n      gameLobbyId,\n      key,\n      value: JSON.stringify(value),\n      append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nconst playerSet = function (playerId) {\n  let append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (key, value) => {\n    updatePlayerData.call({\n      playerId,\n      key,\n      value: JSON.stringify(value),\n      append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nconst stageSet = function (playerStageId) {\n  let append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (key, value) => {\n    updatePlayerStageData.call({\n      playerStageId,\n      key,\n      value: JSON.stringify(value),\n      append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nconst stageSubmit = playerStageId => cb => {\n  submitPlayerStage.call({\n    playerStageId,\n    noCallback: Meteor.isServer\n  }, cb);\n};\n\nconst roundSet = function (playerRoundId) {\n  let append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return (key, value) => {\n    updatePlayerRoundData.call({\n      playerRoundId,\n      key,\n      value: JSON.stringify(value),\n      append,\n      noCallback: Meteor.isServer\n    });\n  };\n}; // Once the operation has succeeded (no throw), set the value\n// undefined is not supported, null is, replace undefineds by nulls.\n\n\nconst set = (obj, func) => (k, v) => {\n  const val = v === undefined ? null : v;\n  func(k, val);\n  obj[k] = val;\n};\n\nconst append = (obj, func) => (k, v) => {\n  const val = v === undefined ? null : v;\n  func(k, val);\n\n  if (!obj[k]) {\n    obj[k] = [];\n  }\n\n  obj[k].push(val);\n};\n\nconst nullFunc = () => {\n  throw \"You called .get(...) or .set(...) but there is no data for the player yet. Did the game run for this player?\";\n};\n\nconst augmentGameLobby = gameLobby => {\n  gameLobby.get = key => gameLobby.data[key];\n\n  gameLobby.set = set(gameLobby.data, gameLobbySet(gameLobby._id));\n  gameLobby.append = append(gameLobby.data, gameLobbySet(gameLobby._id, true));\n};\n\nconst augmentPlayerLobby = function (player) {\n  let round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let stage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let gameLobby = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const {\n    _id: playerId\n  } = player;\n\n  player.exit = reason => earlyExitPlayerLobby.call({\n    playerId,\n    exitReason: reason,\n    gameLobbyId: gameLobby._id\n  });\n\n  player.get = key => player.data[key];\n\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n\n  player.log = (name, data) => {\n    playerLog.call({\n      playerId,\n      name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameLobbyId: gameLobby._id\n    });\n  };\n};\n\nconst augmentPlayer = function (player) {\n  let stage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let round = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let game = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const {\n    _id: playerId\n  } = player;\n\n  player.exit = reason => earlyExitPlayer.call({\n    playerId,\n    exitReason: reason,\n    gameId: game._id\n  });\n\n  player.get = key => player.data[key];\n\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n\n  player.log = (name, data) => {\n    playerLog.call({\n      playerId,\n      name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameId: game._id\n    });\n  };\n};\n\nconst augmentPlayerStageRound = function (player) {\n  let stage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let round = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let game = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const {\n    _id: playerId\n  } = player;\n  augmentPlayer(player, stage, round, game);\n\n  if (stage) {\n    const playerStage = PlayerStages.findOne({\n      stageId: stage._id,\n      playerId\n    });\n\n    stage.get = key => playerStage.data[key];\n\n    stage.set = set(playerStage.data, stageSet(playerStage._id));\n    stage.append = append(playerStage.data, stageSet(playerStage._id, true));\n    stage.submit = stageSubmit(playerStage._id, err => {\n      if (!err) {\n        stage.submitted = true;\n      }\n    });\n    stage.submitted = Boolean(playerStage.submittedAt);\n    stage.submittedAt = playerStage.submittedAt;\n  }\n\n  if (round) {\n    const playerRound = PlayerRounds.findOne({\n      roundId: round._id,\n      playerId\n    });\n\n    round.get = key => playerRound.data[key];\n\n    round.set = set(playerRound.data, roundSet(playerRound._id));\n    round.append = append(playerRound.data, roundSet(playerRound._id, true));\n  }\n};\n\nconst stubPlayerStageRound = (player, stage, round) => {\n  player.get = nullFunc;\n  player.set = nullFunc;\n  player.append = nullFunc;\n\n  if (stage) {\n    stage.get = nullFunc;\n    stage.set = nullFunc;\n    stage.append = nullFunc;\n    stage.submit = nullFunc;\n    stage.submitted = false;\n  }\n\n  if (round) {\n    round.get = nullFunc;\n    round.set = nullFunc;\n    round.append = nullFunc;\n  }\n};\n\nconst augmentGameStageRound = (game, stage, round) => {\n  if (game) {\n    game.get = key => game.data[key];\n\n    game.set = set(game.data, gameSet(game._id));\n    game.append = append(game.data, gameSet(game._id, true));\n\n    game.end = endReason => earlyExitGame.call({\n      gameId: game._id,\n      endReason,\n      status: \"custom\"\n    });\n  }\n\n  if (stage) {\n    stage.get = key => {\n      return stage.data[key];\n    };\n\n    stage.set = set(stage.data, (key, value) => {\n      updateStageData.call({\n        stageId: stage._id,\n        key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    stage.append = append(stage.data, (key, value) => {\n      updateStageData.call({\n        stageId: stage._id,\n        key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n\n    stage.submit = () => {\n      throw \"You cannot submit the entire stage at the moment\";\n    };\n  }\n\n  if (round) {\n    round.get = key => {\n      return round.data[key];\n    };\n\n    round.set = set(round.data, (key, value) => {\n      updateRoundData.call({\n        roundId: round._id,\n        key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    round.append = append(round.data, (key, value) => {\n      updateRoundData.call({\n        roundId: round._id,\n        key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n  }\n};\n\nconst stubStageRound = (stage, round) => {\n  stage.get = nullFunc;\n  stage.set = nullFunc;\n  stage.append = nullFunc;\n  stage.submit = nullFunc;\n  round.get = nullFunc;\n  round.set = nullFunc;\n  round.append = nullFunc;\n};","map":{"version":3,"sources":["packages/empirica:core/api/player-stages/augment.js"],"names":["module","export","augmentGameLobby","augmentPlayerLobby","augmentPlayer","augmentPlayerStageRound","stubPlayerStageRound","augmentGameStageRound","stubStageRound","updateGameData","earlyExitGame","link","v","updateGameLobbyData","updatePlayerRoundData","PlayerRounds","updatePlayerData","earlyExitPlayer","earlyExitPlayerLobby","playerLog","updateRoundData","updateStageData","submitPlayerStage","updatePlayerStageData","PlayerStages","gameSet","gameId","append","key","value","call","JSON","stringify","noCallback","Meteor","isServer","gameLobbySet","gameLobbyId","playerSet","playerId","stageSet","playerStageId","stageSubmit","cb","roundSet","playerRoundId","set","obj","func","k","val","undefined","push","nullFunc","gameLobby","get","data","_id","player","round","stage","exit","reason","exitReason","log","name","jsonData","stageId","roundId","game","playerStage","findOne","submit","err","submitted","Boolean","submittedAt","playerRound","end","endReason","status"],"mappings":"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","sourcesContent":["// augment.js\nimport { updateGameData, earlyExitGame } from \"../games/methods.js\";\nimport { updateGameLobbyData } from \"../game-lobbies/methods\";\nimport { updatePlayerRoundData } from \"../player-rounds/methods\";\nimport { PlayerRounds } from \"../player-rounds/player-rounds\";\nimport {\n  updatePlayerData,\n  earlyExitPlayer,\n  earlyExitPlayerLobby\n} from \"../players/methods.js\";\nimport { playerLog } from \"../player-logs/methods.js\";\nimport { updateRoundData } from \"../rounds/methods.js\";\nimport { updateStageData } from \"../stages/methods.js\";\nimport { submitPlayerStage, updatePlayerStageData } from \"./methods\";\nimport { PlayerStages } from \"./player-stages\";\n\nconst gameSet = (gameId, append = false) => (key, value) => {\n  updateGameData.call({\n    gameId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\n\nconst gameLobbySet = (gameLobbyId, append = false) => (key, value) => {\n  updateGameLobbyData.call({\n    gameLobbyId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\n\nconst playerSet = (playerId, append = false) => (key, value) => {\n  updatePlayerData.call({\n    playerId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\nconst stageSet = (playerStageId, append = false) => (key, value) => {\n  updatePlayerStageData.call({\n    playerStageId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\nconst stageSubmit = playerStageId => cb => {\n  submitPlayerStage.call(\n    {\n      playerStageId,\n      noCallback: Meteor.isServer\n    },\n    cb\n  );\n};\nconst roundSet = (playerRoundId, append = false) => (key, value) => {\n  updatePlayerRoundData.call({\n    playerRoundId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\n\n// Once the operation has succeeded (no throw), set the value\n// undefined is not supported, null is, replace undefineds by nulls.\nconst set = (obj, func) => (k, v) => {\n  const val = v === undefined ? null : v;\n  func(k, val);\n  obj[k] = val;\n};\n\nconst append = (obj, func) => (k, v) => {\n  const val = v === undefined ? null : v;\n  func(k, val);\n  if (!obj[k]) {\n    obj[k] = [];\n  }\n  obj[k].push(val);\n};\n\nconst nullFunc = () => {\n  throw \"You called .get(...) or .set(...) but there is no data for the player yet. Did the game run for this player?\";\n};\n\nexport const augmentGameLobby = gameLobby => {\n  gameLobby.get = key => gameLobby.data[key];\n  gameLobby.set = set(gameLobby.data, gameLobbySet(gameLobby._id));\n  gameLobby.append = append(gameLobby.data, gameLobbySet(gameLobby._id, true));\n};\n\nexport const augmentPlayerLobby = (\n  player,\n  round = {},\n  stage = {},\n  gameLobby = {}\n) => {\n  const { _id: playerId } = player;\n\n  player.exit = reason =>\n    earlyExitPlayerLobby.call({\n      playerId,\n      exitReason: reason,\n      gameLobbyId: gameLobby._id\n    });\n  player.get = key => player.data[key];\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n  player.log = (name, data) => {\n    playerLog.call({\n      playerId,\n      name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameLobbyId: gameLobby._id\n    });\n  };\n};\n\nexport const augmentPlayer = (player, stage = {}, round = {}, game = {}) => {\n  const { _id: playerId } = player;\n\n  player.exit = reason =>\n    earlyExitPlayer.call({\n      playerId,\n      exitReason: reason,\n      gameId: game._id\n    });\n  player.get = key => player.data[key];\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n  player.log = (name, data) => {\n    playerLog.call({\n      playerId,\n      name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameId: game._id\n    });\n  };\n};\n\nexport const augmentPlayerStageRound = (\n  player,\n  stage = {},\n  round = {},\n  game = {}\n) => {\n  const { _id: playerId } = player;\n\n  augmentPlayer(player, stage, round, game);\n\n  if (stage) {\n    const playerStage = PlayerStages.findOne({\n      stageId: stage._id,\n      playerId\n    });\n    stage.get = key => playerStage.data[key];\n    stage.set = set(playerStage.data, stageSet(playerStage._id));\n    stage.append = append(playerStage.data, stageSet(playerStage._id, true));\n    stage.submit = stageSubmit(playerStage._id, err => {\n      if (!err) {\n        stage.submitted = true;\n      }\n    });\n    stage.submitted = Boolean(playerStage.submittedAt);\n    stage.submittedAt = playerStage.submittedAt;\n  }\n\n  if (round) {\n    const playerRound = PlayerRounds.findOne({\n      roundId: round._id,\n      playerId\n    });\n    round.get = key => playerRound.data[key];\n    round.set = set(playerRound.data, roundSet(playerRound._id));\n    round.append = append(playerRound.data, roundSet(playerRound._id, true));\n  }\n};\n\nexport const stubPlayerStageRound = (player, stage, round) => {\n  player.get = nullFunc;\n  player.set = nullFunc;\n  player.append = nullFunc;\n\n  if (stage) {\n    stage.get = nullFunc;\n    stage.set = nullFunc;\n    stage.append = nullFunc;\n    stage.submit = nullFunc;\n    stage.submitted = false;\n  }\n\n  if (round) {\n    round.get = nullFunc;\n    round.set = nullFunc;\n    round.append = nullFunc;\n  }\n};\n\nexport const augmentGameStageRound = (game, stage, round) => {\n  if (game) {\n    game.get = key => game.data[key];\n    game.set = set(game.data, gameSet(game._id));\n    game.append = append(game.data, gameSet(game._id, true));\n    game.end = endReason =>\n      earlyExitGame.call({\n        gameId: game._id,\n        endReason,\n        status: \"custom\"\n      });\n  }\n\n  if (stage) {\n    stage.get = key => {\n      return stage.data[key];\n    };\n    stage.set = set(stage.data, (key, value) => {\n      updateStageData.call({\n        stageId: stage._id,\n        key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    stage.append = append(stage.data, (key, value) => {\n      updateStageData.call({\n        stageId: stage._id,\n        key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n    stage.submit = () => {\n      throw \"You cannot submit the entire stage at the moment\";\n    };\n  }\n\n  if (round) {\n    round.get = key => {\n      return round.data[key];\n    };\n    round.set = set(round.data, (key, value) => {\n      updateRoundData.call({\n        roundId: round._id,\n        key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    round.append = append(round.data, (key, value) => {\n      updateRoundData.call({\n        roundId: round._id,\n        key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n  }\n};\n\nexport const stubStageRound = (stage, round) => {\n  stage.get = nullFunc;\n  stage.set = nullFunc;\n  stage.append = nullFunc;\n  stage.submit = nullFunc;\n  round.get = nullFunc;\n  round.set = nullFunc;\n  round.append = nullFunc;\n};\n"]},"sourceType":"module","hash":"2115f5148c3b9e86bea9ba65ae09eea3eb32f884"}
