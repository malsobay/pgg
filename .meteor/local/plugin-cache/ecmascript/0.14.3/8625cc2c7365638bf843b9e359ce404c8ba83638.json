{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/stages/finish.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/empirica:core/api/stages/finish.js","filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/stages/finish.js","passPerPreset":false,"envName":"production","cwd":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","root":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/stages/finish.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/stages/finish.js"}},"code":"module.export({\n  endOfStage: () => endOfStage\n});\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 0);\nlet config;\nmodule.link(\"../../server\", {\n  config(v) {\n    config = v;\n  }\n\n}, 1);\nlet Games;\nmodule.link(\"../games/games.js\", {\n  Games(v) {\n    Games = v;\n  }\n\n}, 2);\nlet augmentGameStageRound, augmentPlayerStageRound;\nmodule.link(\"../player-stages/augment.js\", {\n  augmentGameStageRound(v) {\n    augmentGameStageRound = v;\n  },\n\n  augmentPlayerStageRound(v) {\n    augmentPlayerStageRound = v;\n  }\n\n}, 3);\nlet augmentGameObject;\nmodule.link(\"../games/augment.js\", {\n  augmentGameObject(v) {\n    augmentGameObject = v;\n  }\n\n}, 4);\nlet Players;\nmodule.link(\"../players/players.js\", {\n  Players(v) {\n    Players = v;\n  }\n\n}, 5);\nlet Rounds;\nmodule.link(\"../rounds/rounds.js\", {\n  Rounds(v) {\n    Rounds = v;\n  }\n\n}, 6);\nlet Treatments;\nmodule.link(\"../treatments/treatments.js\", {\n  Treatments(v) {\n    Treatments = v;\n  }\n\n}, 7);\nlet Stages;\nmodule.link(\"./stages.js\", {\n  Stages(v) {\n    Stages = v;\n  }\n\n}, 8);\nlet GameLobbies;\nmodule.link(\"../game-lobbies/game-lobbies\", {\n  GameLobbies(v) {\n    GameLobbies = v;\n  }\n\n}, 9);\n// endOfStage should only ever run once per stageId. If one of the callback\n// (or the execution of endOfStage itself) takes too much time, a second\n// trigger could try to run endOfStage again (e.g. all players submitted +\n// cron). The lock ensures endOfStage can only run once.\nconst lock = {};\n\nconst endOfStage = stageId => {\n  if (lock[stageId]) {\n    return;\n  }\n\n  lock[stageId] = true;\n  const stage = Stages.findOne(stageId);\n  const {\n    index,\n    gameId,\n    roundId\n  } = stage;\n  const game = Games.findOne(gameId);\n  const round = Rounds.findOne(roundId);\n  const treatment = Treatments.findOne(game.treatmentId);\n  augmentGameObject({\n    game,\n    treatment,\n    round,\n    stage\n  });\n  augmentGameStageRound(game, stage, round);\n  const {\n    onStageEnd,\n    onRoundEnd,\n    onRoundStart,\n    onStageStart\n  } = config;\n\n  if (onStageEnd) {\n    onStageEnd(game, round, stage);\n  }\n\n  const nextStage = Stages.findOne({\n    gameId,\n    index: index + 1\n  });\n\n  if (onRoundEnd && !nextStage || stage.roundId !== nextStage.roundId) {\n    onRoundEnd(game, round);\n  }\n\n  if (nextStage && (onRoundStart || onStageStart)) {\n    const nextRound = Rounds.findOne(nextStage.roundId);\n    augmentGameStageRound(game, nextStage, nextRound);\n    game.players.forEach(player => {\n      player.round = _.extend({}, nextRound);\n      player.stage = _.extend({}, nextStage);\n      augmentPlayerStageRound(player, player.stage, player.round, game);\n    });\n\n    if (onRoundStart && stage.roundId !== nextStage.roundId) {\n      onRoundStart(game, nextRound);\n    }\n\n    if (onStageStart) {\n      onStageStart(game, nextRound, nextStage);\n    }\n  }\n\n  if (nextStage) {\n    // go to next stage\n    const currentStageId = nextStage._id;\n    Games.update(gameId, {\n      $set: {\n        currentStageId\n      }\n    });\n    const startTimeAt = moment().add(Stages.stagePaddingDuration);\n    Stages.update(currentStageId, {\n      $set: {\n        startTimeAt: startTimeAt.toDate()\n      }\n    });\n  } else {\n    const onGameEnd = config.onGameEnd;\n\n    if (onGameEnd) {\n      onGameEnd(game);\n    }\n\n    Players.update({\n      _id: {\n        $in: _.pluck(game.players, \"_id\"),\n        $exists: {\n          exitStatus: false\n        }\n      }\n    }, {\n      $set: {\n        exitStatus: \"finished\",\n        exitAt: new Date()\n      }\n    }, {\n      multi: true\n    });\n    Games.update(gameId, {\n      $set: {\n        finishedAt: new Date(),\n        status: \"finished\"\n      }\n    });\n    GameLobbies.update({\n      gameId\n    }, {\n      $set: {\n        status: \"finished\"\n      }\n    });\n  }\n\n  delete lock[stageId];\n};","map":{"version":3,"sources":["packages/empirica:core/api/stages/finish.js"],"names":["module","export","endOfStage","moment","link","default","v","config","Games","augmentGameStageRound","augmentPlayerStageRound","augmentGameObject","Players","Rounds","Treatments","Stages","GameLobbies","lock","stageId","stage","findOne","index","gameId","roundId","game","round","treatment","treatmentId","onStageEnd","onRoundEnd","onRoundStart","onStageStart","nextStage","nextRound","players","forEach","player","_","extend","currentStageId","_id","update","$set","startTimeAt","add","stagePaddingDuration","toDate","onGameEnd","$in","pluck","$exists","exitStatus","exitAt","Date","multi","finishedAt","status"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport { config } from \"../../server\";\nimport { Games } from \"../games/games.js\";\nimport {\n  augmentGameStageRound,\n  augmentPlayerStageRound\n} from \"../player-stages/augment.js\";\nimport { augmentGameObject } from \"../games/augment.js\";\nimport { Players } from \"../players/players.js\";\nimport { Rounds } from \"../rounds/rounds.js\";\nimport { Treatments } from \"../treatments/treatments.js\";\nimport { Stages } from \"./stages.js\";\nimport { GameLobbies } from \"../game-lobbies/game-lobbies\";\n\n// endOfStage should only ever run once per stageId. If one of the callback\n// (or the execution of endOfStage itself) takes too much time, a second\n// trigger could try to run endOfStage again (e.g. all players submitted +\n// cron). The lock ensures endOfStage can only run once.\nconst lock = {};\n\nexport const endOfStage = stageId => {\n  if (lock[stageId]) {\n    return;\n  }\n\n  lock[stageId] = true;\n\n  const stage = Stages.findOne(stageId);\n  const { index, gameId, roundId } = stage;\n  const game = Games.findOne(gameId);\n  const round = Rounds.findOne(roundId);\n  const treatment = Treatments.findOne(game.treatmentId);\n\n  augmentGameObject({ game, treatment, round, stage });\n\n  augmentGameStageRound(game, stage, round);\n\n  const { onStageEnd, onRoundEnd, onRoundStart, onStageStart } = config;\n  if (onStageEnd) {\n    onStageEnd(game, round, stage);\n  }\n\n  const nextStage = Stages.findOne({ gameId, index: index + 1 });\n\n  if ((onRoundEnd && !nextStage) || stage.roundId !== nextStage.roundId) {\n    onRoundEnd(game, round);\n  }\n\n  if (nextStage && (onRoundStart || onStageStart)) {\n    const nextRound = Rounds.findOne(nextStage.roundId);\n    augmentGameStageRound(game, nextStage, nextRound);\n    game.players.forEach(player => {\n      player.round = _.extend({}, nextRound);\n      player.stage = _.extend({}, nextStage);\n      augmentPlayerStageRound(player, player.stage, player.round, game);\n    });\n\n    if (onRoundStart && stage.roundId !== nextStage.roundId) {\n      onRoundStart(game, nextRound);\n    }\n\n    if (onStageStart) {\n      onStageStart(game, nextRound, nextStage);\n    }\n  }\n\n  if (nextStage) {\n    // go to next stage\n    const currentStageId = nextStage._id;\n    Games.update(gameId, {\n      $set: { currentStageId }\n    });\n    const startTimeAt = moment().add(Stages.stagePaddingDuration);\n    Stages.update(currentStageId, {\n      $set: {\n        startTimeAt: startTimeAt.toDate()\n      }\n    });\n  } else {\n    const onGameEnd = config.onGameEnd;\n    if (onGameEnd) {\n      onGameEnd(game);\n    }\n    Players.update(\n      {\n        _id: {\n          $in: _.pluck(game.players, \"_id\"),\n          $exists: { exitStatus: false }\n        }\n      },\n      {\n        $set: { exitStatus: \"finished\", exitAt: new Date() }\n      },\n      { multi: true }\n    );\n    Games.update(gameId, {\n      $set: { finishedAt: new Date(), status: \"finished\" }\n    });\n    GameLobbies.update(\n      { gameId },\n      {\n        $set: { status: \"finished\" }\n      }\n    );\n  }\n\n  delete lock[stageId];\n};\n"]},"sourceType":"module","hash":"8625cc2c7365638bf843b9e359ce404c8ba83638"}
