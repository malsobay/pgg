{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/startup/server/connections.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/empirica:core/startup/server/connections.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/startup/server/connections.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/startup/server/connections.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/startup/server/connections.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  connections: () => connections,\n  playerIdForConn: () => playerIdForConn,\n  savePlayerId: () => savePlayerId,\n  forgetPlayerId: () => forgetPlayerId\n});\nlet GameLobbies;\nmodule.link(\"../../api/game-lobbies/game-lobbies.js\", {\n  GameLobbies(v) {\n    GameLobbies = v;\n  }\n\n}, 0);\nlet Players;\nmodule.link(\"../../api/players/players.js\", {\n  Players(v) {\n    Players = v;\n  }\n\n}, 1);\nconst connections = {};\n\nconst playerInLobby = function (playerId) {\n  let key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"playerIds\";\n  const query = {\n    status: \"running\",\n    gameId: {\n      $exists: false\n    },\n    timedOutAt: {\n      $exists: false\n    },\n    [key]: playerId\n  };\n  return GameLobbies.findOne(query);\n};\n\nconst playerIdForConn = conn => {\n  return connections[conn.id];\n};\n\nconst savePlayerId = (conn, playerId) => {\n  connections[conn.id] = playerId;\n  const pii = Meteor.settings.collectPII ? {\n    ip: conn.clientAddress,\n    userAgent: conn.httpHeaders[\"user-agent\"]\n  } : {};\n  Players.update(playerId, {\n    $set: {\n      online: true,\n      lastLogin: _objectSpread({\n        at: new Date()\n      }, pii)\n    }\n  });\n  const player = Players.findOne(playerId);\n\n  if (!player.readyAt) {\n    return;\n  }\n\n  const lobby = playerInLobby(playerId, \"queuedPlayerIds\");\n\n  if (!lobby) {\n    return;\n  }\n\n  GameLobbies.update(lobby._id, {\n    $addToSet: {\n      playerIds: playerId\n    }\n  });\n};\n\nconst forgetPlayerId = conn => {\n  if (!connections[conn.id]) {\n    return;\n  }\n\n  const playerId = connections[conn.id];\n  Players.update(playerId, {\n    $set: {\n      online: false\n    },\n    $unset: {\n      idle: null\n    }\n  });\n  const lobby = playerInLobby(playerId);\n\n  if (!lobby) {\n    return;\n  }\n\n  GameLobbies.update(lobby._id, {\n    $pull: {\n      playerIds: playerId\n    }\n  });\n  delete connections[conn.id];\n};\n\nMeteor.onConnection(conn => {\n  conn.onClose(() => {\n    forgetPlayerId(conn);\n  });\n});","map":{"version":3,"sources":["packages/empirica:core/startup/server/connections.js"],"names":["_objectSpread","module","link","default","v","export","connections","playerIdForConn","savePlayerId","forgetPlayerId","GameLobbies","Players","playerInLobby","playerId","key","query","status","gameId","$exists","timedOutAt","findOne","conn","id","pii","Meteor","settings","collectPII","ip","clientAddress","userAgent","httpHeaders","update","$set","online","lastLogin","at","Date","player","readyAt","lobby","_id","$addToSet","playerIds","$unset","idle","$pull","onConnection","onClose"],"mappings":"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","sourcesContent":["import { GameLobbies } from \"../../api/game-lobbies/game-lobbies.js\";\nimport { Players } from \"../../api/players/players.js\";\n\nexport const connections = {};\n\nconst playerInLobby = (playerId, key = \"playerIds\") => {\n  const query = {\n    status: \"running\",\n    gameId: { $exists: false },\n    timedOutAt: { $exists: false },\n    [key]: playerId\n  };\n\n  return GameLobbies.findOne(query);\n};\n\nexport const playerIdForConn = conn => {\n  return connections[conn.id];\n};\n\nexport const savePlayerId = (conn, playerId) => {\n  connections[conn.id] = playerId;\n\n  const pii = Meteor.settings.collectPII\n    ? { ip: conn.clientAddress, userAgent: conn.httpHeaders[\"user-agent\"] }\n    : {};\n\n  Players.update(playerId, {\n    $set: {\n      online: true,\n      lastLogin: {\n        at: new Date(),\n        ...pii\n      }\n    }\n  });\n\n  const player = Players.findOne(playerId);\n  if (!player.readyAt) {\n    return;\n  }\n\n  const lobby = playerInLobby(playerId, \"queuedPlayerIds\");\n  if (!lobby) {\n    return;\n  }\n\n  GameLobbies.update(lobby._id, {\n    $addToSet: { playerIds: playerId }\n  });\n};\n\nexport const forgetPlayerId = conn => {\n  if (!connections[conn.id]) {\n    return;\n  }\n\n  const playerId = connections[conn.id];\n\n  Players.update(playerId, {\n    $set: { online: false },\n    $unset: {\n      idle: null\n    }\n  });\n\n  const lobby = playerInLobby(playerId);\n\n  if (!lobby) {\n    return;\n  }\n\n  GameLobbies.update(lobby._id, {\n    $pull: { playerIds: playerId }\n  });\n\n  delete connections[conn.id];\n};\n\nMeteor.onConnection(conn => {\n  conn.onClose(() => {\n    forgetPlayerId(conn);\n  });\n});\n"]},"sourceType":"module","hash":"345c697e92d31668217b0131dca6e9b18415ceb4"}
