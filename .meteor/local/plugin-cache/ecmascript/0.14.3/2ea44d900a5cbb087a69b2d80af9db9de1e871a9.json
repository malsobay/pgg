{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewFactorType.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewFactorType.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewFactorType.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewFactorType.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewFactorType.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return AdminNewFactorType;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Classes, Button, Dialog, FormGroup, HTMLSelect, Intent, NumericInput, Switch, TagInput, TextArea;\nmodule.link(\"@blueprintjs/core\", {\n  Classes: function (v) {\n    Classes = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  Dialog: function (v) {\n    Dialog = v;\n  },\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  HTMLSelect: function (v) {\n    HTMLSelect = v;\n  },\n  Intent: function (v) {\n    Intent = v;\n  },\n  NumericInput: function (v) {\n    NumericInput = v;\n  },\n  Switch: function (v) {\n    Switch = v;\n  },\n  TagInput: function (v) {\n    TagInput = v;\n  },\n  TextArea: function (v) {\n    TextArea = v;\n  }\n}, 1);\nvar IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames: function (v) {\n    IconNames = v;\n  }\n}, 2);\nvar FactorTypes;\nmodule.link(\"../../../api/factor-types/factor-types.js\", {\n  FactorTypes: function (v) {\n    FactorTypes = v;\n  }\n}, 3);\nvar createFactorType;\nmodule.link(\"../../../api/factor-types/methods.js\", {\n  createFactorType: function (v) {\n    createFactorType = v;\n  }\n}, 4);\nvar AlertToaster;\nmodule.link(\"../Toasters.jsx\", {\n  AlertToaster: function (v) {\n    AlertToaster = v;\n  }\n}, 5);\nvar HelpTooltip;\nmodule.link(\"../HelpTooltip.jsx\", {\n  \"default\": function (v) {\n    HelpTooltip = v;\n  }\n}, 6);\n\nvar AdminNewFactorType = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AdminNewFactorType, _React$Component);\n\n  var _super = _createSuper(AdminNewFactorType);\n\n  function AdminNewFactorType(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      type: \"String\",\n      name: \"\",\n      initialValues: [],\n      required: false\n    };\n\n    _this.handleNumberUpdate = function (name, value, valueAsString) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _this$setState[name] = valueAsString, _this$setState));\n    };\n\n    _this.handleChange = function (event) {\n      var _this$setState2;\n\n      var _event$currentTarget = event.currentTarget,\n          name = _event$currentTarget.name,\n          value = _event$currentTarget.value;\n\n      _this.setState((_this$setState2 = {}, _this$setState2[name] = value, _this$setState2));\n    };\n\n    _this.handleChangeCheckbox = function (event) {\n      var _this$setState3;\n\n      var _event$currentTarget2 = event.currentTarget,\n          name = _event$currentTarget2.name,\n          checked = _event$currentTarget2.checked;\n\n      _this.setState((_this$setState3 = {}, _this$setState3[name] = checked, _this$setState3));\n    };\n\n    _this.handleNewFactorType = function (event) {\n      event.preventDefault();\n\n      if (_this.stopsubmit) {\n        return;\n      }\n\n      var _this$state = _this.state,\n          name = _this$state.name,\n          description = _this$state.description,\n          type = _this$state.type,\n          min = _this$state.min,\n          max = _this$state.max,\n          initialValues = _this$state.initialValues,\n          required = _this$state.required;\n      var onClose = _this.props.onClose;\n      var params = {\n        name: name,\n        description: description,\n        type: type,\n        min: min,\n        max: max,\n        required: required\n      };\n      params.initialValues = initialValues.filter(function (v) {\n        return !Factors.valueValidation(params, v);\n      });\n\n      if (params.min !== undefined) {\n        params.min = parseFloat(params.min);\n      }\n\n      if (params.max !== undefined) {\n        params.max = parseFloat(params.max);\n      }\n\n      createFactorType.call(params, function (err) {\n        if (err) {\n          AlertToaster.show({\n            message: err.reason || err.message || err.toString()\n          });\n          return;\n        }\n\n        onClose();\n\n        _this.setState({\n          name: \"\",\n          description: \"\",\n          type: \"String\",\n          min: undefined,\n          max: undefined,\n          initialValues: [],\n          required: false\n        });\n      });\n    };\n\n    _this.firstInputRef = React.createRef();\n    return _this;\n  }\n\n  var _proto = AdminNewFactorType.prototype;\n\n  _proto.componentDidUpdate = function () {\n    function componentDidUpdate(prevProp) {\n      var _this2 = this;\n\n      if (this.props.isOpen && !prevProp.isOpen) {\n        setTimeout(function () {\n          var node = _this2.firstInputRef.current;\n\n          if (node) {\n            node.focus();\n          }\n        }, 100);\n      }\n    }\n\n    return componentDidUpdate;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          onClose = _this$props.onClose;\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          description = _this$state2.description,\n          type = _this$state2.type,\n          min = _this$state2.min,\n          max = _this$state2.max,\n          initialValues = _this$state2.initialValues,\n          required = _this$state2.required;\n      var extraInputs = [];\n\n      switch (type) {\n        case \"Number\":\n        case \"Integer\":\n          extraInputs.push( /*#__PURE__*/React.createElement(FormGroup, {\n            key: \"min\",\n            label: \"Min\",\n            labelFor: \"min\",\n            helperText: \"Minimum accepted value\"\n          }, /*#__PURE__*/React.createElement(NumericInput, {\n            value: min,\n            onValueChange: this.handleNumberUpdate.bind(this, \"min\")\n          })));\n          extraInputs.push( /*#__PURE__*/React.createElement(FormGroup, {\n            key: \"max\",\n            label: \"Max\",\n            labelFor: \"max\",\n            helperText: \"Maximum accepted value.\"\n          }, /*#__PURE__*/React.createElement(NumericInput, {\n            value: max,\n            onValueChange: this.handleNumberUpdate.bind(this, \"max\")\n          })));\n          break;\n\n        case \"String\":\n          extraInputs.push( /*#__PURE__*/React.createElement(FormGroup, {\n            key: \"min\",\n            label: \"Min\",\n            labelFor: \"min\",\n            helperText: \"Minimum number of characters.\"\n          }, /*#__PURE__*/React.createElement(NumericInput, {\n            min: 1,\n            max: 1000000000000,\n            value: min,\n            onValueChange: this.handleNumberUpdate.bind(this, \"min\")\n          })));\n          extraInputs.push( /*#__PURE__*/React.createElement(FormGroup, {\n            key: \"max\",\n            label: \"Max\",\n            labelFor: \"max\",\n            helperText: \"Maximum number of characters.\"\n          }, /*#__PURE__*/React.createElement(NumericInput, {\n            min: 1,\n            max: 1000000000000,\n            value: max,\n            onValueChange: this.handleNumberUpdate.bind(this, \"max\")\n          })));\n          break;\n\n        case \"Boolean\":\n          break;\n\n        default:\n          console.error(\"New factor unsupported type:\", type.stringType);\n          break;\n      }\n\n      return /*#__PURE__*/React.createElement(Dialog, {\n        icon: IconNames.PROPERTY,\n        isOpen: isOpen,\n        onClose: onClose,\n        title: \"New Factor\"\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"new-factor-type\" //\n        ,\n        onSubmit: this.handleNewFactorType\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: Classes.DIALOG_BODY\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Type\",\n        labelFor: \"type\",\n        labelInfo: /*#__PURE__*/React.createElement(HelpTooltip, {\n          content: /*#__PURE__*/React.createElement(\"div\", null, \"There are 4 types:\", /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"String:\"), \" either any string value, with. the possibility to set a min and max number of characters, or a fixed set of values (allowed values).\"), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Integer:\"), \" An integer value, with optional min and/or max values.\"), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Number:\"), \" A Number works like Integer and adds support for decimal numbers.\"), /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Boolean:\"), \" A Boolean will support only true or false values.\")))\n        })\n      }, /*#__PURE__*/React.createElement(HTMLSelect, {\n        name: \"type\",\n        id: \"type\",\n        onChange: this.handleChange,\n        value: type,\n        options: FactorTypes.types\n      })), /*#__PURE__*/React.createElement(Switch, {\n        label: \"Required\",\n        name: \"required\",\n        checked: required,\n        onChange: this.handleChangeCheckbox\n      }), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Name\",\n        labelFor: \"name\",\n        helperText: /*#__PURE__*/React.createElement(React.Fragment, null, \"Format: \", /*#__PURE__*/React.createElement(\"code\", null, \"camelCase\"), \". Only letters and numbers, with leading lowercase letters.\"),\n        labelInfo: \"(required)\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: Classes.INPUT,\n        dir: \"auto\",\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        autoComplete: \"off\",\n        value: name,\n        pattern: /^[a-zA-Z0-9_]+$/.source,\n        onChange: this.handleChange,\n        required: true,\n        ref: this.firstInputRef\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Description\",\n        labelFor: \"description\",\n        labelInfo: \"(required)\" // helperText={<>Format: <code>camelCase</code>. Only letters and numbers, with leading lowercase letters.<>}\n\n      }, /*#__PURE__*/React.createElement(TextArea, {\n        required: true,\n        fill: true,\n        id: \"description\",\n        name: \"description\",\n        onChange: this.handleChange,\n        value: description\n      })), extraInputs), /*#__PURE__*/React.createElement(\"div\", {\n        className: Classes.DIALOG_FOOTER\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: Classes.DIALOG_FOOTER_ACTIONS\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        text: \"Create Factor\",\n        intent: Intent.PRIMARY // onClick={this.handleNewFactorType}\n\n      })))));\n    }\n\n    return render;\n  }();\n\n  return AdminNewFactorType;\n}(React.Component);","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminNewFactorType.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","AdminNewFactorType","React","Classes","Button","Dialog","FormGroup","HTMLSelect","Intent","NumericInput","Switch","TagInput","TextArea","IconNames","FactorTypes","createFactorType","AlertToaster","HelpTooltip","props","state","type","name","initialValues","required","handleNumberUpdate","value","valueAsString","setState","handleChange","event","currentTarget","handleChangeCheckbox","checked","handleNewFactorType","preventDefault","stopsubmit","description","min","max","onClose","params","filter","Factors","valueValidation","undefined","parseFloat","call","err","show","message","reason","toString","firstInputRef","createRef","componentDidUpdate","prevProp","isOpen","setTimeout","node","current","focus","render","extraInputs","push","bind","console","error","stringType","PROPERTY","DIALOG_BODY","types","INPUT","source","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","PRIMARY","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Classes,\n  Button,\n  Dialog,\n  FormGroup,\n  HTMLSelect,\n  Intent,\n  NumericInput,\n  Switch,\n  TagInput,\n  TextArea\n} from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\nimport { FactorTypes } from \"../../../api/factor-types/factor-types.js\";\nimport { createFactorType } from \"../../../api/factor-types/methods.js\";\nimport { AlertToaster } from \"../Toasters.jsx\";\nimport HelpTooltip from \"../HelpTooltip.jsx\";\n\nexport default class AdminNewFactorType extends React.Component {\n  state = { type: \"String\", name: \"\", initialValues: [], required: false };\n  constructor(props) {\n    super(props);\n    this.firstInputRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProp) {\n    if (this.props.isOpen && !prevProp.isOpen) {\n      setTimeout(() => {\n        const node = this.firstInputRef.current;\n        if (node) {\n          node.focus();\n        }\n      }, 100);\n    }\n  }\n\n  handleNumberUpdate = (name, value, valueAsString) => {\n    this.setState({ [name]: valueAsString });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleChangeCheckbox = event => {\n    const { name, checked } = event.currentTarget;\n    this.setState({ [name]: checked });\n  };\n\n  handleNewFactorType = event => {\n    event.preventDefault();\n    if (this.stopsubmit) {\n      return;\n    }\n    let {\n      name,\n      description,\n      type,\n      min,\n      max,\n      initialValues,\n      required\n    } = this.state;\n    const { onClose } = this.props;\n\n    const params = {\n      name,\n      description,\n      type,\n      min,\n      max,\n      required\n    };\n\n    params.initialValues = initialValues.filter(\n      v => !Factors.valueValidation(params, v)\n    );\n\n    if (params.min !== undefined) {\n      params.min = parseFloat(params.min);\n    }\n\n    if (params.max !== undefined) {\n      params.max = parseFloat(params.max);\n    }\n\n    createFactorType.call(params, err => {\n      if (err) {\n        AlertToaster.show({\n          message: err.reason || err.message || err.toString()\n        });\n        return;\n      }\n      onClose();\n      this.setState({\n        name: \"\",\n        description: \"\",\n        type: \"String\",\n        min: undefined,\n        max: undefined,\n        initialValues: [],\n        required: false\n      });\n    });\n  };\n\n  render() {\n    const { isOpen, onClose } = this.props;\n    const {\n      name,\n      description,\n      type,\n      min,\n      max,\n      initialValues,\n      required\n    } = this.state;\n\n    const extraInputs = [];\n    switch (type) {\n      case \"Number\":\n      case \"Integer\":\n        extraInputs.push(\n          <FormGroup\n            key=\"min\"\n            label=\"Min\"\n            labelFor=\"min\"\n            helperText=\"Minimum accepted value\"\n          >\n            <NumericInput\n              value={min}\n              onValueChange={this.handleNumberUpdate.bind(this, \"min\")}\n            />\n          </FormGroup>\n        );\n\n        extraInputs.push(\n          <FormGroup\n            key=\"max\"\n            label=\"Max\"\n            labelFor=\"max\"\n            helperText=\"Maximum accepted value.\"\n          >\n            <NumericInput\n              value={max}\n              onValueChange={this.handleNumberUpdate.bind(this, \"max\")}\n            />\n          </FormGroup>\n        );\n        break;\n      case \"String\":\n        extraInputs.push(\n          <FormGroup\n            key=\"min\"\n            label=\"Min\"\n            labelFor=\"min\"\n            helperText=\"Minimum number of characters.\"\n          >\n            <NumericInput\n              min={1}\n              max={1000000000000}\n              value={min}\n              onValueChange={this.handleNumberUpdate.bind(this, \"min\")}\n            />\n          </FormGroup>\n        );\n\n        extraInputs.push(\n          <FormGroup\n            key=\"max\"\n            label=\"Max\"\n            labelFor=\"max\"\n            helperText=\"Maximum number of characters.\"\n          >\n            <NumericInput\n              min={1}\n              max={1000000000000}\n              value={max}\n              onValueChange={this.handleNumberUpdate.bind(this, \"max\")}\n            />\n          </FormGroup>\n        );\n\n        break;\n      case \"Boolean\":\n        break;\n      default:\n        console.error(\"New factor unsupported type:\", type.stringType);\n        break;\n    }\n\n    return (\n      <Dialog\n        icon={IconNames.PROPERTY}\n        isOpen={isOpen}\n        onClose={onClose}\n        title=\"New Factor\"\n      >\n        <form\n          className=\"new-factor-type\"\n          //\n          onSubmit={this.handleNewFactorType}\n        >\n          <div className={Classes.DIALOG_BODY}>\n            <FormGroup\n              label=\"Type\"\n              labelFor=\"type\"\n              labelInfo={\n                <HelpTooltip\n                  content={\n                    <div>\n                      There are 4 types:\n                      <ul>\n                        <li>\n                          <strong>String:</strong> either any string value,\n                          with. the possibility to set a min and max number of\n                          characters, or a fixed set of values (allowed values).\n                        </li>\n                        <li>\n                          <strong>Integer:</strong> An integer value, with\n                          optional min and/or max values.\n                        </li>\n                        <li>\n                          <strong>Number:</strong> A Number works like Integer\n                          and adds support for decimal numbers.\n                        </li>\n                        <li>\n                          <strong>Boolean:</strong> A Boolean will support only\n                          true or false values.\n                        </li>\n                      </ul>\n                    </div>\n                  }\n                />\n              }\n            >\n              <HTMLSelect\n                name=\"type\"\n                id=\"type\"\n                onChange={this.handleChange}\n                value={type}\n                options={FactorTypes.types}\n              />\n            </FormGroup>\n\n            <Switch\n              label=\"Required\"\n              name=\"required\"\n              checked={required}\n              onChange={this.handleChangeCheckbox}\n            />\n\n            <FormGroup\n              label=\"Name\"\n              labelFor=\"name\"\n              helperText={\n                <>\n                  Format: <code>camelCase</code>. Only letters and numbers, with\n                  leading lowercase letters.\n                </>\n              }\n              labelInfo=\"(required)\"\n            >\n              <input\n                className={Classes.INPUT}\n                dir=\"auto\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                autoComplete=\"off\"\n                value={name}\n                pattern={/^[a-zA-Z0-9_]+$/.source}\n                onChange={this.handleChange}\n                required\n                ref={this.firstInputRef}\n              />\n            </FormGroup>\n\n            <FormGroup\n              label=\"Description\"\n              labelFor=\"description\"\n              labelInfo=\"(required)\"\n              // helperText={<>Format: <code>camelCase</code>. Only letters and numbers, with leading lowercase letters.<>}\n            >\n              <TextArea\n                required\n                fill\n                id=\"description\"\n                name=\"description\"\n                onChange={this.handleChange}\n                value={description}\n              />\n            </FormGroup>\n\n            {extraInputs}\n\n            {/* {type === \"Boolean\" ? null : (\n              <FormGroup\n                key=\"initialValues\"\n                label=\"Initial Values\"\n                labelFor=\"initialValues\"\n                helperText=\"List of initial values to create with the new Factor.\"\n              >\n                <TagInput\n                  inputProps={{\n                    onFocus: () => {\n                      this.stopsubmit = true;\n                    },\n                    onBlur: () => {\n                      this.stopsubmit = false;\n                    }\n                  }}\n                  addOnBlur\n                  onChange={value => this.setState({ initialValues: value })}\n                  values={initialValues}\n                />\n              </FormGroup>\n            )} */}\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                type=\"submit\"\n                text=\"Create Factor\"\n                intent={Intent.PRIMARY}\n                // onClick={this.handleNewFactorType}\n              />\n            </div>\n          </div>\n        </form>\n      </Dialog>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"2ea44d900a5cbb087a69b2d80af9db9de1e871a9"}
