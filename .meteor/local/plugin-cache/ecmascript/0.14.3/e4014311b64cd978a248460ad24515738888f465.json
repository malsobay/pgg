{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/game-lobbies/hooks.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/empirica:core/api/game-lobbies/hooks.js","filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/game-lobbies/hooks.js","passPerPreset":false,"envName":"production","cwd":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","root":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/game-lobbies/hooks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/game-lobbies/hooks.js"}},"code":"let GameLobbies;\nmodule.link(\"../game-lobbies/game-lobbies\", {\n  GameLobbies(v) {\n    GameLobbies = v;\n  }\n\n}, 0);\nlet Games;\nmodule.link(\"../games/games\", {\n  Games(v) {\n    Games = v;\n  }\n\n}, 1);\nlet LobbyConfigs;\nmodule.link(\"../lobby-configs/lobby-configs.js\", {\n  LobbyConfigs(v) {\n    LobbyConfigs = v;\n  }\n\n}, 2);\nlet Players;\nmodule.link(\"../players/players.js\", {\n  Players(v) {\n    Players = v;\n  }\n\n}, 3);\nlet createGameFromLobby;\nmodule.link(\"../games/create\", {\n  createGameFromLobby(v) {\n    createGameFromLobby = v;\n  }\n\n}, 4);\nlet checkBatchFull, checkForBatchFinished;\nmodule.link(\"../games/hooks.js\", {\n  checkBatchFull(v) {\n    checkBatchFull = v;\n  },\n\n  checkForBatchFinished(v) {\n    checkForBatchFinished = v;\n  }\n\n}, 5);\n// Check if batch is full or the game finished if this lobby timed out\nGameLobbies.after.update(function (userId, _ref, fieldNames, modifier, options) {\n  let {\n    batchId\n  } = _ref;\n\n  if (!fieldNames.includes(\"timedOutAt\")) {\n    return;\n  }\n\n  checkBatchFull(batchId);\n  checkForBatchFinished(batchId);\n}); // Start the game if lobby full\n\nGameLobbies.after.update(function (userId, doc, fieldNames, modifier, options) {\n  if (!(fieldNames.includes(\"playerIds\") || fieldNames.includes(\"status\") && doc.status == \"running\")) {\n    return;\n  }\n\n  const gameLobby = this.transform();\n  const humanPlayers = [];\n\n  if (gameLobby.playerIds && gameLobby.playerIds.length > 0) {\n    const players = Players.find({\n      _id: {\n        $in: gameLobby.playerIds\n      }\n    }).fetch();\n    humanPlayers.push(...players.filter(p => !p.bot));\n  }\n\n  const readyPlayersCount = gameLobby.playerIds.length; // If the lobby timeout it hasn't started yet and the lobby isn't full yet\n  // (single player), try to start the timeout timer.\n\n  if (humanPlayers.length > 0 && gameLobby.availableCount != 1 && !gameLobby.timeoutStartedAt) {\n    const lobbyConfig = LobbyConfigs.findOne(gameLobby.lobbyConfigId);\n\n    if (lobbyConfig.timeoutType === \"lobby\") {\n      GameLobbies.update(gameLobby._id, {\n        $set: {\n          timeoutStartedAt: new Date()\n        }\n      });\n    }\n  } // If the readyPlayersCount went to 0 (disconnections for example), reset the\n  // lobby timeout.\n\n\n  if (humanPlayers.length === 0 && gameLobby.timeoutStartedAt) {\n    const lobbyConfig = LobbyConfigs.findOne(gameLobby.lobbyConfigId);\n\n    if (lobbyConfig.timeoutType === \"lobby\") {\n      GameLobbies.update(gameLobby._id, {\n        $unset: {\n          timeoutStartedAt: \"\"\n        }\n      });\n    }\n  } // If there are not enough players ready, wait\n\n\n  if (readyPlayersCount < gameLobby.availableCount) {\n    return;\n  } // Game already created (?!)\n\n\n  if (Games.find({\n    gameLobbyId: gameLobby._id\n  }).count() > 0) {\n    return;\n  } // Create Game\n\n\n  createGameFromLobby(gameLobby);\n}, {\n  fetchPrevious: false\n});","map":{"version":3,"sources":["packages/empirica:core/api/game-lobbies/hooks.js"],"names":["GameLobbies","module","link","v","Games","LobbyConfigs","Players","createGameFromLobby","checkBatchFull","checkForBatchFinished","after","update","userId","fieldNames","modifier","options","batchId","includes","doc","status","gameLobby","transform","humanPlayers","playerIds","length","players","find","_id","$in","fetch","push","filter","p","bot","readyPlayersCount","availableCount","timeoutStartedAt","lobbyConfig","findOne","lobbyConfigId","timeoutType","$set","Date","$unset","gameLobbyId","count","fetchPrevious"],"mappings":"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","sourcesContent":["import { GameLobbies } from \"../game-lobbies/game-lobbies\";\nimport { Games } from \"../games/games\";\nimport { LobbyConfigs } from \"../lobby-configs/lobby-configs.js\";\nimport { Players } from \"../players/players.js\";\nimport { createGameFromLobby } from \"../games/create\";\n\nimport { checkBatchFull, checkForBatchFinished } from \"../games/hooks.js\";\n\n// Check if batch is full or the game finished if this lobby timed out\nGameLobbies.after.update(function(\n  userId,\n  { batchId },\n  fieldNames,\n  modifier,\n  options\n) {\n  if (!fieldNames.includes(\"timedOutAt\")) {\n    return;\n  }\n\n  checkBatchFull(batchId);\n  checkForBatchFinished(batchId);\n});\n\n// Start the game if lobby full\nGameLobbies.after.update(\n  function(userId, doc, fieldNames, modifier, options) {\n    if (\n      !(\n        fieldNames.includes(\"playerIds\") ||\n        (fieldNames.includes(\"status\") && doc.status == \"running\")\n      )\n    ) {\n      return;\n    }\n\n    const gameLobby = this.transform();\n    const humanPlayers = [];\n\n    if (gameLobby.playerIds && gameLobby.playerIds.length > 0) {\n      const players = Players.find({\n        _id: { $in: gameLobby.playerIds }\n      }).fetch();\n      humanPlayers.push(...players.filter(p => !p.bot));\n    }\n\n    const readyPlayersCount = gameLobby.playerIds.length;\n\n    // If the lobby timeout it hasn't started yet and the lobby isn't full yet\n    // (single player), try to start the timeout timer.\n    if (\n      humanPlayers.length > 0 &&\n      gameLobby.availableCount != 1 &&\n      !gameLobby.timeoutStartedAt\n    ) {\n      const lobbyConfig = LobbyConfigs.findOne(gameLobby.lobbyConfigId);\n      if (lobbyConfig.timeoutType === \"lobby\") {\n        GameLobbies.update(gameLobby._id, {\n          $set: { timeoutStartedAt: new Date() }\n        });\n      }\n    }\n\n    // If the readyPlayersCount went to 0 (disconnections for example), reset the\n    // lobby timeout.\n    if (humanPlayers.length === 0 && gameLobby.timeoutStartedAt) {\n      const lobbyConfig = LobbyConfigs.findOne(gameLobby.lobbyConfigId);\n      if (lobbyConfig.timeoutType === \"lobby\") {\n        GameLobbies.update(gameLobby._id, {\n          $unset: { timeoutStartedAt: \"\" }\n        });\n      }\n    }\n\n    // If there are not enough players ready, wait\n    if (readyPlayersCount < gameLobby.availableCount) {\n      return;\n    }\n\n    // Game already created (?!)\n    if (Games.find({ gameLobbyId: gameLobby._id }).count() > 0) {\n      return;\n    }\n\n    // Create Game\n    createGameFromLobby(gameLobby);\n  },\n  { fetchPrevious: false }\n);\n"]},"sourceType":"module","hash":"e4014311b64cd978a248460ad24515738888f465"}
