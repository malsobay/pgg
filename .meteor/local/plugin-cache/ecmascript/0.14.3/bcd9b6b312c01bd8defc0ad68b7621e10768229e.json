{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/monitor.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/lib/monitor.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/monitor.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/monitor.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/lib/monitor.js"}},"code":"module.export({\n  ActivityMonitor: () => ActivityMonitor\n});\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 0);\nlet TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync(v) {\n    TimeSync = v;\n  }\n\n}, 1);\n// idleThreshold is the duration in ms without activity after which we declare\n// the user idle.\nconst idleThreshold = 60000; // Interval at which to check if there was activity detected.\n\nconst checkInterval = 1000;\nlet monitorInterval = null;\nlet idle = false;\nlet lastActivityTime = TimeSync.serverTime();\nconst idleDep = new Tracker.Dependency();\nconst activityDep = new Tracker.Dependency();\nlet focused = document.hasFocus();\n\nfunction monitor(hasActivity) {\n  const now = Tracker.nonreactive(TimeSync.serverTime); // Time hasn't synced yet\n\n  if (!now) {\n    return;\n  }\n\n  if (!lastActivityTime || hasActivity && focused) {\n    lastActivityTime = now;\n    activityDep.changed();\n  }\n\n  const newIdleness = !(focused && now - lastActivityTime < idleThreshold);\n\n  if (newIdleness !== idle) {\n    idle = newIdleness;\n    idleDep.changed();\n  }\n}\n\nconst trueMonitor = _.bind(monitor, null, true);\n\nconst signalActivity = _.throttle(trueMonitor, checkInterval);\n\nconst signalInactivity = () => monitor(false);\n\nfunction startup() {\n  if (monitorInterval) {\n    return;\n  } // Listen for mouse and keyboard events on window\n  // TODO other stuff - e.g. touch events?\n\n\n  window.addEventListener(\"mousemove\", signalActivity);\n  window.addEventListener(\"click\", signalActivity);\n  window.addEventListener(\"keydown\", signalActivity); // catch window blur events when requested and where supported\n  // We'll use jQuery here instead of window.blur so that other code can attach blur events:\n  // http://stackoverflow.com/q/22415296/586086\n\n  window.addEventListener(\"blur\", () => {\n    focused = false;\n    signalInactivity();\n  });\n  window.addEventListener(\"focus\", () => {\n    focused = true;\n    signalActivity();\n  }); // First check initial state if window loaded while blurred\n  // Some browsers don't fire focus on load: http://stackoverflow.com/a/10325169/586086\n\n  focused = document.hasFocus();\n  lastActivityTime = Tracker.nonreactive(TimeSync.serverTime);\n  activityDep.changed();\n  monitorInterval = Meteor.setInterval(monitor, checkInterval);\n}\n\nconst ActivityMonitor = {\n  start() {\n    startup();\n  },\n\n  get isIdle() {\n    idleDep.depend();\n    return idle;\n  },\n\n  get isActive() {\n    idleDep.depend();\n    return !idle;\n  },\n\n  get lastActivityAt() {\n    activityDep.depend();\n\n    if (_.isNaN(lastActivityTime)) {\n      return null;\n    }\n\n    return new Date(lastActivityTime);\n  }\n\n};","map":{"version":3,"sources":["packages/empirica:core/lib/monitor.js"],"names":["module","export","ActivityMonitor","Tracker","link","v","TimeSync","idleThreshold","checkInterval","monitorInterval","idle","lastActivityTime","serverTime","idleDep","Dependency","activityDep","focused","document","hasFocus","monitor","hasActivity","now","nonreactive","changed","newIdleness","trueMonitor","_","bind","signalActivity","throttle","signalInactivity","startup","window","addEventListener","Meteor","setInterval","start","isIdle","depend","isActive","lastActivityAt","isNaN","Date"],"mappings":"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","sourcesContent":["// ActivityMonitor tracks user activity and can emit an idle/active indicator\n// and a last active timestamp, in the browser.\n\nimport { Tracker } from \"meteor/tracker\";\nimport { TimeSync } from \"meteor/mizzao:timesync\";\n\n// idleThreshold is the duration in ms without activity after which we declare\n// the user idle.\nconst idleThreshold = 60000;\n\n// Interval at which to check if there was activity detected.\nconst checkInterval = 1000;\n\nlet monitorInterval = null;\nlet idle = false;\nlet lastActivityTime = TimeSync.serverTime();\n\nconst idleDep = new Tracker.Dependency();\nconst activityDep = new Tracker.Dependency();\n\nlet focused = document.hasFocus();\n\nfunction monitor(hasActivity) {\n  const now = Tracker.nonreactive(TimeSync.serverTime);\n\n  // Time hasn't synced yet\n  if (!now) {\n    return;\n  }\n\n  if (!lastActivityTime || (hasActivity && focused)) {\n    lastActivityTime = now;\n    activityDep.changed();\n  }\n\n  const newIdleness = !(focused && now - lastActivityTime < idleThreshold);\n  if (newIdleness !== idle) {\n    idle = newIdleness;\n    idleDep.changed();\n  }\n}\nconst trueMonitor = _.bind(monitor, null, true);\nconst signalActivity = _.throttle(trueMonitor, checkInterval);\nconst signalInactivity = () => monitor(false);\nfunction startup() {\n  if (monitorInterval) {\n    return;\n  }\n\n  // Listen for mouse and keyboard events on window\n  // TODO other stuff - e.g. touch events?\n  window.addEventListener(\"mousemove\", signalActivity);\n  window.addEventListener(\"click\", signalActivity);\n  window.addEventListener(\"keydown\", signalActivity);\n\n  // catch window blur events when requested and where supported\n  // We'll use jQuery here instead of window.blur so that other code can attach blur events:\n  // http://stackoverflow.com/q/22415296/586086\n  window.addEventListener(\"blur\", () => {\n    focused = false;\n    signalInactivity();\n  });\n  window.addEventListener(\"focus\", () => {\n    focused = true;\n    signalActivity();\n  });\n\n  // First check initial state if window loaded while blurred\n  // Some browsers don't fire focus on load: http://stackoverflow.com/a/10325169/586086\n  focused = document.hasFocus();\n\n  lastActivityTime = Tracker.nonreactive(TimeSync.serverTime);\n  activityDep.changed();\n\n  monitorInterval = Meteor.setInterval(monitor, checkInterval);\n}\n\nexport const ActivityMonitor = {\n  start() {\n    startup();\n  },\n\n  get isIdle() {\n    idleDep.depend();\n    return idle;\n  },\n\n  get isActive() {\n    idleDep.depend();\n    return !idle;\n  },\n\n  get lastActivityAt() {\n    activityDep.depend();\n\n    if (_.isNaN(lastActivityTime)) {\n      return null;\n    }\n\n    return new Date(lastActivityTime);\n  }\n};\n"]},"sourceType":"module","hash":"bcd9b6b312c01bd8defc0ad68b7621e10768229e"}
