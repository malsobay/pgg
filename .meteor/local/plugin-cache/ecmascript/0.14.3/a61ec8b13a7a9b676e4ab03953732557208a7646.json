{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-inputs/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/api/player-inputs/methods.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-inputs/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-inputs/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/player-inputs/methods.js"}},"code":"module.export({\n  addPlayerInput: function () {\n    return addPlayerInput;\n  }\n});\nvar ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod: function (v) {\n    ValidatedMethod = v;\n  }\n}, 0);\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 1);\nvar Players;\nmodule.link(\"../players/players.js\", {\n  Players: function (v) {\n    Players = v;\n  }\n}, 2);\nvar PlayerInputs;\nmodule.link(\"./player-inputs.js\", {\n  PlayerInputs: function (v) {\n    PlayerInputs = v;\n  }\n}, 3);\nvar addPlayerInput = new ValidatedMethod({\n  name: \"PlayerInputs.methods.add\",\n  validate: new SimpleSchema({\n    playerId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    gameId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      optional: true\n    },\n    gameLobbyId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      optional: true\n    },\n    data: {\n      type: String\n    }\n  }).validator(),\n  run: function (_ref) {\n    var playerId = _ref.playerId,\n        gameId = _ref.gameId,\n        gameLobbyId = _ref.gameLobbyId,\n        rawData = _ref.data;\n    var player = Players.findOne(playerId);\n\n    if (!player) {\n      throw new Error(\"player not found\");\n    }\n\n    if (!gameId && !gameLobbyId) {\n      throw new Error(\"gameId or gameLobbyId required\");\n    }\n\n    var data = JSON.parse(rawData);\n    PlayerInputs.insert({\n      playerId: playerId,\n      gameId: gameId,\n      gameLobbyId: gameLobbyId,\n      data: data\n    }, {\n      autoConvert: false,\n      filter: false,\n      validate: false,\n      trimStrings: false,\n      removeEmptyStrings: false\n    });\n  }\n});","map":{"version":3,"sources":["packages/empirica:core/api/player-inputs/methods.js"],"names":["module","export","addPlayerInput","ValidatedMethod","link","v","SimpleSchema","Players","PlayerInputs","name","validate","playerId","type","String","regEx","RegEx","Id","gameId","optional","gameLobbyId","data","validator","run","rawData","player","findOne","Error","JSON","parse","insert","autoConvert","filter","trimStrings","removeEmptyStrings"],"mappings":"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","sourcesContent":["import { ValidatedMethod } from \"meteor/mdg:validated-method\";\nimport SimpleSchema from \"simpl-schema\";\nimport { Players } from \"../players/players.js\";\nimport { PlayerInputs } from \"./player-inputs.js\";\n\n// addPlayerInput is non-destructive, it just keeps adding onto a player's\n// input data.\nexport const addPlayerInput = new ValidatedMethod({\n  name: \"PlayerInputs.methods.add\",\n\n  validate: new SimpleSchema({\n    playerId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    gameId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      optional: true\n    },\n    gameLobbyId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id,\n      optional: true\n    },\n    data: {\n      type: String\n    }\n  }).validator(),\n\n  run({ playerId, gameId, gameLobbyId, data: rawData }) {\n    const player = Players.findOne(playerId);\n    if (!player) {\n      throw new Error(\"player not found\");\n    }\n    if (!gameId && !gameLobbyId) {\n      throw new Error(\"gameId or gameLobbyId required\");\n    }\n\n    const data = JSON.parse(rawData);\n    PlayerInputs.insert(\n      { playerId, gameId, gameLobbyId, data },\n      {\n        autoConvert: false,\n        filter: false,\n        validate: false,\n        trimStrings: false,\n        removeEmptyStrings: false\n      }\n    );\n  }\n});\n"]},"sourceType":"module","hash":"a61ec8b13a7a9b676e4ab03953732557208a7646"}
