{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewFactor.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewFactor.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewFactor.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewFactor.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewFactor.jsx"}},"code":"module.export({\n  default: () => AdminNewFactor\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Classes, Button, Dialog, FormGroup, Intent, NumericInput;\nmodule.link(\"@blueprintjs/core\", {\n  Classes(v) {\n    Classes = v;\n  },\n\n  Button(v) {\n    Button = v;\n  },\n\n  Dialog(v) {\n    Dialog = v;\n  },\n\n  FormGroup(v) {\n    FormGroup = v;\n  },\n\n  Intent(v) {\n    Intent = v;\n  },\n\n  NumericInput(v) {\n    NumericInput = v;\n  }\n\n}, 1);\nlet IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames(v) {\n    IconNames = v;\n  }\n\n}, 2);\nlet Factors;\nmodule.link(\"../../../api/factors/factors.js\", {\n  Factors(v) {\n    Factors = v;\n  }\n\n}, 3);\nlet AlertToaster;\nmodule.link(\"../Toasters.jsx\", {\n  AlertToaster(v) {\n    AlertToaster = v;\n  }\n\n}, 4);\nlet createFactor;\nmodule.link(\"../../../api/factors/methods.js\", {\n  createFactor(v) {\n    createFactor = v;\n  }\n\n}, 5);\n\nclass AdminNewFactor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      name: \"\",\n      loading: false\n    };\n\n    this.handleIntUpdate = value => {\n      this.setState({\n        value\n      });\n    };\n\n    this.handleUpdate = event => {\n      const name = event.currentTarget.name;\n      const value = event.currentTarget.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleNewFactor = event => {\n      event.preventDefault();\n      const {\n        name,\n        value,\n        loading\n      } = this.state;\n\n      if (loading) {\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n      const {\n        type: {\n          _id: factorTypeId,\n          type\n        },\n        onClose\n      } = this.props;\n      const params = Factors.schema.clean({\n        factorTypeId,\n        name,\n        value\n      }, {\n        autoConvert: false\n      });\n\n      if (type === \"Number\") {\n        params.value = parseFloat(params.value);\n      }\n\n      createFactor.call(params, err => {\n        if (err) {\n          AlertToaster.show({\n            message: err.reason || err.message || err.toString()\n          });\n          this.setState({\n            loading: false\n          });\n          return;\n        }\n\n        onClose();\n        this.setState({\n          loading: false,\n          name: \"\",\n          value: undefined\n        });\n      });\n    };\n\n    this.valueInputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isOpen) {\n      this.focus();\n    }\n  }\n\n  componentDidUpdate(prevProp) {\n    if (this.props.isOpen && !prevProp.isOpen) {\n      this.focus();\n    }\n  }\n\n  focus() {\n    setTimeout(() => {\n      const node = this.valueInputRef.current;\n\n      if (node) {\n        node.focus();\n      }\n    }, 100);\n  }\n\n  render() {\n    const {\n      isOpen,\n      onClose,\n      type\n    } = this.props;\n    const {\n      name,\n      value,\n      loading\n    } = this.state;\n    let input;\n\n    switch (type.type) {\n      case \"Number\":\n        input = /*#__PURE__*/React.createElement(\"input\", {\n          className: Classes.INPUT,\n          dir: \"auto\",\n          type: \"number\",\n          name: \"value\",\n          id: \"value\",\n          step: \"any\",\n          min: type.min || -1000000000000,\n          max: type.max || 1000000000000,\n          value: value,\n          onChange: this.handleUpdate,\n          required: true,\n          ref: this.valueInputRef\n        });\n        break;\n\n      case \"Integer\":\n        input = /*#__PURE__*/React.createElement(NumericInput, {\n          name: \"value\",\n          id: \"value\",\n          min: type.min || -1000000000000,\n          max: type.max || 1000000000000,\n          value: value,\n          required: true,\n          onValueChange: this.handleIntUpdate,\n          inputRef: this.valueInputRef\n        });\n        break;\n\n      case \"String\":\n        input = /*#__PURE__*/React.createElement(\"input\", {\n          className: Classes.INPUT,\n          dir: \"auto\",\n          type: \"text\",\n          name: \"value\",\n          id: \"value\",\n          autoComplete: \"off\",\n          value: value,\n          onChange: this.handleUpdate // pattern={type.regEx && type.regEx.source}\n          ,\n          required: true,\n          ref: this.valueInputRef\n        });\n        break;\n\n      default:\n        console.error(\"New factor unsupported type:\", type.type);\n        break;\n    }\n\n    let properties = [];\n\n    if (!_.isUndefined(type.min)) {\n      properties.push(\"Min: \".concat(type.min));\n    }\n\n    if (!_.isUndefined(type.max)) {\n      properties.push(\"Max: \".concat(type.max));\n    } // if (!_.isUndefined(type.regEx)) {\n    //   properties.push(`Pattern: ${type.regEx.source}`);\n    // }\n\n\n    return /*#__PURE__*/React.createElement(Dialog, {\n      icon: IconNames.PROPERTY,\n      isOpen: isOpen,\n      onClose: onClose,\n      title: \"New \".concat(type.name, \" Factor Value\")\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"new-factor\",\n      onSubmit: this.handleNewFactor\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: Classes.DIALOG_BODY\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Name\",\n      labelFor: \"name\",\n      helperText: \"Only characters, numbers and underscore (_). No spaces.\"\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: Classes.INPUT,\n      dir: \"auto\",\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      autoComplete: \"off\",\n      value: name,\n      pattern: /^[a-zA-Z0-9_]+$/.source,\n      onChange: this.handleUpdate // required\n\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Value\",\n      labelFor: \"name\",\n      helperText: properties.length > 0 ? properties.join(\" - \") : \"\"\n    }, input)), /*#__PURE__*/React.createElement(\"div\", {\n      className: Classes.DIALOG_FOOTER\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: Classes.DIALOG_FOOTER_ACTIONS\n    }, /*#__PURE__*/React.createElement(Button, {\n      loading: loading,\n      type: \"submit\",\n      text: \"Create Factor Value\",\n      intent: Intent.PRIMARY\n    })))));\n  }\n\n}","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminNewFactor.jsx"],"names":["module","export","default","AdminNewFactor","React","link","v","Classes","Button","Dialog","FormGroup","Intent","NumericInput","IconNames","Factors","AlertToaster","createFactor","Component","constructor","props","state","value","name","loading","handleIntUpdate","setState","handleUpdate","event","currentTarget","handleNewFactor","preventDefault","type","_id","factorTypeId","onClose","params","schema","clean","autoConvert","parseFloat","call","err","show","message","reason","toString","undefined","valueInputRef","createRef","componentDidMount","isOpen","focus","componentDidUpdate","prevProp","setTimeout","node","current","render","input","INPUT","min","max","console","error","properties","_","isUndefined","push","PROPERTY","DIALOG_BODY","source","length","join","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","PRIMARY"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Classes,\n  Button,\n  Dialog,\n  FormGroup,\n  Intent,\n  NumericInput\n} from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\nimport { Factors } from \"../../../api/factors/factors.js\";\nimport { AlertToaster } from \"../Toasters.jsx\";\nimport { createFactor } from \"../../../api/factors/methods.js\";\n\nexport default class AdminNewFactor extends React.Component {\n  state = { value: \"\", name: \"\", loading: false };\n\n  constructor(props) {\n    super(props);\n    this.valueInputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isOpen) {\n      this.focus();\n    }\n  }\n\n  componentDidUpdate(prevProp) {\n    if (this.props.isOpen && !prevProp.isOpen) {\n      this.focus();\n    }\n  }\n\n  focus() {\n    setTimeout(() => {\n      const node = this.valueInputRef.current;\n      if (node) {\n        node.focus();\n      }\n    }, 100);\n  }\n\n  handleIntUpdate = value => {\n    this.setState({ value });\n  };\n\n  handleUpdate = event => {\n    const name = event.currentTarget.name;\n    const value = event.currentTarget.value;\n    this.setState({ [name]: value });\n  };\n\n  handleNewFactor = event => {\n    event.preventDefault();\n\n    const { name, value, loading } = this.state;\n    if (loading) {\n      return;\n    }\n    this.setState({ loading: true });\n\n    const {\n      type: { _id: factorTypeId, type },\n      onClose\n    } = this.props;\n\n    const params = Factors.schema.clean(\n      { factorTypeId, name, value },\n      { autoConvert: false }\n    );\n\n    if (type === \"Number\") {\n      params.value = parseFloat(params.value);\n    }\n\n    createFactor.call(params, err => {\n      if (err) {\n        AlertToaster.show({\n          message: err.reason || err.message || err.toString()\n        });\n        this.setState({ loading: false });\n        return;\n      }\n      onClose();\n      this.setState({ loading: false, name: \"\", value: undefined });\n    });\n  };\n\n  render() {\n    const { isOpen, onClose, type } = this.props;\n    const { name, value, loading } = this.state;\n\n    let input;\n    switch (type.type) {\n      case \"Number\":\n        input = (\n          <input\n            className={Classes.INPUT}\n            dir=\"auto\"\n            type=\"number\"\n            name=\"value\"\n            id=\"value\"\n            step=\"any\"\n            min={type.min || -1000000000000}\n            max={type.max || 1000000000000}\n            value={value}\n            onChange={this.handleUpdate}\n            required\n            ref={this.valueInputRef}\n          />\n        );\n        break;\n      case \"Integer\":\n        input = (\n          <NumericInput\n            name=\"value\"\n            id=\"value\"\n            min={type.min || -1000000000000}\n            max={type.max || 1000000000000}\n            value={value}\n            required\n            onValueChange={this.handleIntUpdate}\n            inputRef={this.valueInputRef}\n          />\n        );\n        break;\n      case \"String\":\n        input = (\n          <input\n            className={Classes.INPUT}\n            dir=\"auto\"\n            type=\"text\"\n            name=\"value\"\n            id=\"value\"\n            autoComplete=\"off\"\n            value={value}\n            onChange={this.handleUpdate}\n            // pattern={type.regEx && type.regEx.source}\n            required\n            ref={this.valueInputRef}\n          />\n        );\n        break;\n      default:\n        console.error(\"New factor unsupported type:\", type.type);\n        break;\n    }\n\n    let properties = [];\n    if (!_.isUndefined(type.min)) {\n      properties.push(`Min: ${type.min}`);\n    }\n    if (!_.isUndefined(type.max)) {\n      properties.push(`Max: ${type.max}`);\n    }\n    // if (!_.isUndefined(type.regEx)) {\n    //   properties.push(`Pattern: ${type.regEx.source}`);\n    // }\n\n    return (\n      <Dialog\n        icon={IconNames.PROPERTY}\n        isOpen={isOpen}\n        onClose={onClose}\n        title={`New ${type.name} Factor Value`}\n      >\n        <form className=\"new-factor\" onSubmit={this.handleNewFactor}>\n          <div className={Classes.DIALOG_BODY}>\n            <FormGroup\n              label=\"Name\"\n              labelFor=\"name\"\n              helperText=\"Only characters, numbers and underscore (_). No spaces.\"\n            >\n              <input\n                className={Classes.INPUT}\n                dir=\"auto\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                autoComplete=\"off\"\n                value={name}\n                pattern={/^[a-zA-Z0-9_]+$/.source}\n                onChange={this.handleUpdate}\n                // required\n              />\n            </FormGroup>\n\n            <FormGroup\n              label=\"Value\"\n              labelFor=\"name\"\n              helperText={properties.length > 0 ? properties.join(\" - \") : \"\"}\n            >\n              {input}\n            </FormGroup>\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                loading={loading}\n                type=\"submit\"\n                text=\"Create Factor Value\"\n                intent={Intent.PRIMARY}\n              />\n            </div>\n          </div>\n        </form>\n      </Dialog>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"a064d4cac5397c1bcb894717ab507593973dedd7"}
