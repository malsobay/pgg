{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/counters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/lib/counters.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/counters.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/counters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/lib/counters.js"}},"code":"module.export({\n  Counter: function () {\n    return Counter;\n  }\n});\n// Named Atomic counters\n//\n// Example:\n//    Counter.inc(\"something\") // => 1\n//    Counter.inc(\"something\") // => 2\n//    Counter.inc(\"something\", 8) // => 10\n//    Counter.inc(\"something\", -5) // => 5\n//    Counter.set(\"something\", 42) // => 42\nvar incset;\n\nif (Meteor.isServer) {\n  var raw = new Mongo.Collection(\"counters\").rawCollection();\n  findAndModify = Meteor.wrapAsync(raw.findAndModify, raw);\n\n  incset = function (op) {\n    return function (name) {\n      var _findAndModify;\n\n      var amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var res = findAndModify({\n        _id: name\n      }, // query\n      null, (_findAndModify = {}, _findAndModify[\"$\" + op] = {\n        value: amount\n      }, _findAndModify), // update\n      {\n        \"new\": true,\n        upsert: true\n      } // options\n      );\n      return res.value && res.value.value;\n    };\n  };\n} else {\n  incset = function (op) {\n    return function () {};\n  };\n}\n\nvar Counter = {\n  inc: incset(\"inc\"),\n  set: incset(\"set\")\n};","map":{"version":3,"sources":["packages/empirica:core/lib/counters.js"],"names":["module","export","Counter","incset","Meteor","isServer","raw","Mongo","Collection","rawCollection","findAndModify","wrapAsync","op","name","amount","res","_id","value","upsert","inc","set"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,YAAU;AAAC,WAAOA,OAAP;AAAe;AAAnC,CAAd;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIC,MAAJ;;AACA,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACC,UAAV,CAAqB,UAArB,EAAiCC,aAAjC,EAAZ;AACAC,EAAAA,aAAa,GAAGN,MAAM,CAACO,SAAP,CAAiBL,GAAG,CAACI,aAArB,EAAoCJ,GAApC,CAAhB;;AAEAH,EAAAA,MAAM,GAAG,UAAAS,EAAE;AAAA,WAAI,UAACC,IAAD,EAAsB;AAAA;;AAAA,UAAfC,MAAe,uEAAN,CAAM;AACnC,UAAMC,GAAG,GAAGL,aAAa,CACvB;AAAEM,QAAAA,GAAG,EAAEH;AAAP,OADuB,EACR;AACf,UAFuB,6CAGhBD,EAHgB,IAGT;AAAEK,QAAAA,KAAK,EAAEH;AAAT,OAHS,mBAGY;AACnC;AAAE,eAAK,IAAP;AAAaI,QAAAA,MAAM,EAAE;AAArB,OAJuB,CAIK;AAJL,OAAzB;AAMA,aAAOH,GAAG,CAACE,KAAJ,IAAaF,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACD,KARU;AAAA,GAAX;AASD,CAbD,MAaO;AACLd,EAAAA,MAAM,GAAG,UAAAS,EAAE;AAAA,WAAI,YAAM,CAAE,CAAZ;AAAA,GAAX;AACD;;AAEM,IAAMV,OAAO,GAAG;AACrBiB,EAAAA,GAAG,EAAEhB,MAAM,CAAC,KAAD,CADU;AAErBiB,EAAAA,GAAG,EAAEjB,MAAM,CAAC,KAAD;AAFU,CAAhB","sourcesContent":["// Named Atomic counters\n//\n// Example:\n//    Counter.inc(\"something\") // => 1\n//    Counter.inc(\"something\") // => 2\n//    Counter.inc(\"something\", 8) // => 10\n//    Counter.inc(\"something\", -5) // => 5\n//    Counter.set(\"something\", 42) // => 42\n\nlet incset;\nif (Meteor.isServer) {\n  const raw = new Mongo.Collection(\"counters\").rawCollection();\n  findAndModify = Meteor.wrapAsync(raw.findAndModify, raw);\n\n  incset = op => (name, amount = 1) => {\n    const res = findAndModify(\n      { _id: name }, // query\n      null, // sort\n      { [`$${op}`]: { value: amount } }, // update\n      { new: true, upsert: true } // options\n    );\n    return res.value && res.value.value;\n  };\n} else {\n  incset = op => () => {};\n}\n\nexport const Counter = {\n  inc: incset(\"inc\"),\n  set: incset(\"set\")\n};\n"]},"sourceType":"module","hash":"4ec4ed2b15249f37bf9fbea6ea92f197bee99d7c"}
