{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factor-types/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/api/factor-types/methods.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factor-types/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factor-types/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/factor-types/methods.js"}},"code":"module.export({\n  createFactorType: function () {\n    return createFactorType;\n  },\n  updateFactorType: function () {\n    return updateFactorType;\n  }\n});\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod: function (v) {\n    ValidatedMethod = v;\n  }\n}, 1);\nvar Factors;\nmodule.link(\"../factors/factors.js\", {\n  Factors: function (v) {\n    Factors = v;\n  }\n}, 2);\nvar FactorTypes;\nmodule.link(\"./factor-types.js\", {\n  FactorTypes: function (v) {\n    FactorTypes = v;\n  }\n}, 3);\nvar IdSchema;\nmodule.link(\"../default-schemas.js\", {\n  IdSchema: function (v) {\n    IdSchema = v;\n  }\n}, 4);\nvar createFactorType = new ValidatedMethod({\n  name: \"FactorTypes.methods.create\",\n  validate: FactorTypes.schema.omit(\"createdAt\", \"updatedAt\").extend(new SimpleSchema({\n    initialValues: {\n      type: Array,\n      optional: true\n    },\n    \"initialValues.$\": {\n      type: SimpleSchema.oneOf({\n        type: String,\n        scopedUnique: \"type\"\n      }, {\n        type: SimpleSchema.Integer,\n        scopedUnique: \"type\"\n      }, {\n        type: Number,\n        scopedUnique: \"type\"\n      }, {\n        type: Boolean,\n        scopedUnique: \"type\"\n      })\n    }\n  })).validator(),\n  run: function (factorType) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    var initialValues = factorType.initialValues;\n    var factorTypeId = FactorTypes.insert(_.omit(factorType, \"initialValues\"), {\n      autoConvert: false\n    });\n    initialValues.forEach(function (value) {\n      return Factors.insert({\n        factorTypeId: factorTypeId,\n        value: value\n      });\n    });\n  }\n});\nvar updateFactorType = new ValidatedMethod({\n  name: \"FactorTypes.methods.update\",\n  validate: new SimpleSchema({\n    archived: {\n      type: Boolean,\n      optional: true\n    }\n  }).extend(IdSchema).validator(),\n  run: function (_ref) {\n    var _id = _ref._id,\n        archived = _ref.archived;\n\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    var factorType = FactorTypes.findOne(_id);\n\n    if (!factorType) {\n      throw new Error(\"not found\");\n    }\n\n    var $set = {},\n        $unset = {};\n\n    if (archived !== undefined) {\n      if (archived) {\n        if (factorType.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $set.archivedAt = new Date();\n        $set.archivedById = this.userId;\n      }\n\n      if (!archived) {\n        if (!factorType.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $unset.archivedAt = true;\n        $unset.archivedById = true;\n      }\n    }\n\n    var modifier = {};\n\n    if (Object.keys($set).length > 0) {\n      modifier.$set = $set;\n    }\n\n    if (Object.keys($unset).length > 0) {\n      modifier.$unset = $unset;\n    }\n\n    if (Object.keys(modifier).length === 0) {\n      return;\n    }\n\n    FactorTypes.update(_id, modifier);\n  }\n});","map":{"version":3,"sources":["packages/empirica:core/api/factor-types/methods.js"],"names":["module","export","createFactorType","updateFactorType","SimpleSchema","link","v","ValidatedMethod","Factors","FactorTypes","IdSchema","name","validate","schema","omit","extend","initialValues","type","Array","optional","oneOf","String","scopedUnique","Integer","Number","Boolean","validator","run","factorType","userId","Error","factorTypeId","insert","_","autoConvert","forEach","value","archived","_id","findOne","$set","$unset","undefined","archivedAt","Date","archivedById","modifier","Object","keys","length","update"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,gBAAgB,EAAC,YAAU;AAAC,WAAOA,gBAAP;AAAwB,GAArD;AAAsDC,EAAAA,gBAAgB,EAAC,YAAU;AAAC,WAAOA,gBAAP;AAAwB;AAA1G,CAAd;AAA2H,IAAIC,YAAJ;AAAiBJ,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA2B;AAAC,aAAQ,UAASC,CAAT,EAAW;AAACF,IAAAA,YAAY,GAACE,CAAb;AAAe;AAApC,CAA3B,EAAiE,CAAjE;AAAoE,IAAIC,eAAJ;AAAoBP,MAAM,CAACK,IAAP,CAAY,6BAAZ,EAA0C;AAACE,EAAAA,eAAe,EAAC,UAASD,CAAT,EAAW;AAACC,IAAAA,eAAe,GAACD,CAAhB;AAAkB;AAA/C,CAA1C,EAA2F,CAA3F;AAA8F,IAAIE,OAAJ;AAAYR,MAAM,CAACK,IAAP,CAAY,uBAAZ,EAAoC;AAACG,EAAAA,OAAO,EAAC,UAASF,CAAT,EAAW;AAACE,IAAAA,OAAO,GAACF,CAAR;AAAU;AAA/B,CAApC,EAAqE,CAArE;AAAwE,IAAIG,WAAJ;AAAgBT,MAAM,CAACK,IAAP,CAAY,mBAAZ,EAAgC;AAACI,EAAAA,WAAW,EAAC,UAASH,CAAT,EAAW;AAACG,IAAAA,WAAW,GAACH,CAAZ;AAAc;AAAvC,CAAhC,EAAyE,CAAzE;AAA4E,IAAII,QAAJ;AAAaV,MAAM,CAACK,IAAP,CAAY,uBAAZ,EAAoC;AAACK,EAAAA,QAAQ,EAAC,UAASJ,CAAT,EAAW;AAACI,IAAAA,QAAQ,GAACJ,CAAT;AAAW;AAAjC,CAApC,EAAuE,CAAvE;AAOxf,IAAMJ,gBAAgB,GAAG,IAAIK,eAAJ,CAAoB;AAClDI,EAAAA,IAAI,EAAE,4BAD4C;AAGlDC,EAAAA,QAAQ,EAAEH,WAAW,CAACI,MAAZ,CACPC,IADO,CACF,WADE,EACW,WADX,EAEPC,MAFO,CAGN,IAAIX,YAAJ,CAAiB;AACfY,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAEC,KADO;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KADA;AAMf,uBAAmB;AACjBF,MAAAA,IAAI,EAAEb,YAAY,CAACgB,KAAb,CACJ;AACEH,QAAAA,IAAI,EAAEI,MADR;AAEEC,QAAAA,YAAY,EAAE;AAFhB,OADI,EAKJ;AACEL,QAAAA,IAAI,EAAEb,YAAY,CAACmB,OADrB;AAEED,QAAAA,YAAY,EAAE;AAFhB,OALI,EASJ;AACEL,QAAAA,IAAI,EAAEO,MADR;AAEEF,QAAAA,YAAY,EAAE;AAFhB,OATI,EAaJ;AACEL,QAAAA,IAAI,EAAEQ,OADR;AAEEH,QAAAA,YAAY,EAAE;AAFhB,OAbI;AADW;AANJ,GAAjB,CAHM,EA+BPI,SA/BO,EAHwC;AAoClDC,EAAAA,GApCkD,YAoC9CC,UApC8C,EAoClC;AACd,QAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD;;AAHa,QAKNd,aALM,GAKYY,UALZ,CAKNZ,aALM;AAMd,QAAMe,YAAY,GAAGtB,WAAW,CAACuB,MAAZ,CACnBC,CAAC,CAACnB,IAAF,CAAOc,UAAP,EAAmB,eAAnB,CADmB,EAEnB;AAAEM,MAAAA,WAAW,EAAE;AAAf,KAFmB,CAArB;AAKAlB,IAAAA,aAAa,CAACmB,OAAd,CAAsB,UAAAC,KAAK;AAAA,aAAI5B,OAAO,CAACwB,MAAR,CAAe;AAAED,QAAAA,YAAY,EAAZA,YAAF;AAAgBK,QAAAA,KAAK,EAALA;AAAhB,OAAf,CAAJ;AAAA,KAA3B;AACD;AAhDiD,CAApB,CAAzB;AAmDA,IAAMjC,gBAAgB,GAAG,IAAII,eAAJ,CAAoB;AAClDI,EAAAA,IAAI,EAAE,4BAD4C;AAGlDC,EAAAA,QAAQ,EAAE,IAAIR,YAAJ,CAAiB;AACzBiC,IAAAA,QAAQ,EAAE;AACRpB,MAAAA,IAAI,EAAEQ,OADE;AAERN,MAAAA,QAAQ,EAAE;AAFF;AADe,GAAjB,EAMPJ,MANO,CAMAL,QANA,EAOPgB,SAPO,EAHwC;AAYlDC,EAAAA,GAZkD,kBAY3B;AAAA,QAAjBW,GAAiB,QAAjBA,GAAiB;AAAA,QAAZD,QAAY,QAAZA,QAAY;;AACrB,QAAI,CAAC,KAAKR,MAAV,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD;;AACD,QAAMF,UAAU,GAAGnB,WAAW,CAAC8B,OAAZ,CAAoBD,GAApB,CAAnB;;AACA,QAAI,CAACV,UAAL,EAAiB;AACf,YAAM,IAAIE,KAAJ,CAAU,WAAV,CAAN;AACD;;AAED,QAAMU,IAAI,GAAG,EAAb;AAAA,QACEC,MAAM,GAAG,EADX;;AAGA,QAAIJ,QAAQ,KAAKK,SAAjB,EAA4B;AAC1B,UAAIL,QAAJ,EAAc;AACZ,YAAIT,UAAU,CAACe,UAAf,EAA2B;AACzB,gBAAM,IAAIb,KAAJ,CAAU,WAAV,CAAN;AACD;;AAEDU,QAAAA,IAAI,CAACG,UAAL,GAAkB,IAAIC,IAAJ,EAAlB;AACAJ,QAAAA,IAAI,CAACK,YAAL,GAAoB,KAAKhB,MAAzB;AACD;;AACD,UAAI,CAACQ,QAAL,EAAe;AACb,YAAI,CAACT,UAAU,CAACe,UAAhB,EAA4B;AAC1B,gBAAM,IAAIb,KAAJ,CAAU,WAAV,CAAN;AACD;;AAEDW,QAAAA,MAAM,CAACE,UAAP,GAAoB,IAApB;AACAF,QAAAA,MAAM,CAACI,YAAP,GAAsB,IAAtB;AACD;AACF;;AAED,QAAMC,QAAQ,GAAG,EAAjB;;AACA,QAAIC,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,MAAlB,GAA2B,CAA/B,EAAkC;AAChCH,MAAAA,QAAQ,CAACN,IAAT,GAAgBA,IAAhB;AACD;;AACD,QAAIO,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,MAApB,GAA6B,CAAjC,EAAoC;AAClCH,MAAAA,QAAQ,CAACL,MAAT,GAAkBA,MAAlB;AACD;;AACD,QAAIM,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,KAAiC,CAArC,EAAwC;AACtC;AACD;;AAEDxC,IAAAA,WAAW,CAACyC,MAAZ,CAAmBZ,GAAnB,EAAwBQ,QAAxB;AACD;AAvDiD,CAApB,CAAzB","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport { ValidatedMethod } from \"meteor/mdg:validated-method\";\n\nimport { Factors } from \"../factors/factors.js\";\nimport { FactorTypes } from \"./factor-types.js\";\nimport { IdSchema } from \"../default-schemas.js\";\n\nexport const createFactorType = new ValidatedMethod({\n  name: \"FactorTypes.methods.create\",\n\n  validate: FactorTypes.schema\n    .omit(\"createdAt\", \"updatedAt\")\n    .extend(\n      new SimpleSchema({\n        initialValues: {\n          type: Array,\n          optional: true\n        },\n\n        \"initialValues.$\": {\n          type: SimpleSchema.oneOf(\n            {\n              type: String,\n              scopedUnique: \"type\"\n            },\n            {\n              type: SimpleSchema.Integer,\n              scopedUnique: \"type\"\n            },\n            {\n              type: Number,\n              scopedUnique: \"type\"\n            },\n            {\n              type: Boolean,\n              scopedUnique: \"type\"\n            }\n          )\n        }\n      })\n    )\n    .validator(),\n\n  run(factorType) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const { initialValues } = factorType;\n    const factorTypeId = FactorTypes.insert(\n      _.omit(factorType, \"initialValues\"),\n      { autoConvert: false }\n    );\n\n    initialValues.forEach(value => Factors.insert({ factorTypeId, value }));\n  }\n});\n\nexport const updateFactorType = new ValidatedMethod({\n  name: \"FactorTypes.methods.update\",\n\n  validate: new SimpleSchema({\n    archived: {\n      type: Boolean,\n      optional: true\n    }\n  })\n    .extend(IdSchema)\n    .validator(),\n\n  run({ _id, archived }) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n    const factorType = FactorTypes.findOne(_id);\n    if (!factorType) {\n      throw new Error(\"not found\");\n    }\n\n    const $set = {},\n      $unset = {};\n\n    if (archived !== undefined) {\n      if (archived) {\n        if (factorType.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $set.archivedAt = new Date();\n        $set.archivedById = this.userId;\n      }\n      if (!archived) {\n        if (!factorType.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $unset.archivedAt = true;\n        $unset.archivedById = true;\n      }\n    }\n\n    const modifier = {};\n    if (Object.keys($set).length > 0) {\n      modifier.$set = $set;\n    }\n    if (Object.keys($unset).length > 0) {\n      modifier.$unset = $unset;\n    }\n    if (Object.keys(modifier).length === 0) {\n      return;\n    }\n\n    FactorTypes.update(_id, modifier);\n  }\n});\n"]},"sourceType":"module","hash":"e97674e9c1fd5fa32d9d3f25986ec6f59738b163"}
