{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factor-types/server/bootstrap.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/empirica:core/api/factor-types/server/bootstrap.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factor-types/server/bootstrap.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factor-types/server/bootstrap.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/factor-types/server/bootstrap.js"}},"code":"let FactorTypes;\nmodule.link(\"../factor-types.js\", {\n  FactorTypes(v) {\n    FactorTypes = v;\n  }\n\n}, 0);\nlet log;\nmodule.link(\"../../../lib/log.js\", {\n  default(v) {\n    log = v;\n  }\n\n}, 1);\nlet bootstrapFunctions;\nmodule.link(\"../../../startup/server/bootstrap.js\", {\n  bootstrapFunctions(v) {\n    bootstrapFunctions = v;\n  }\n\n}, 2);\nconst defaultTypes = [{\n  name: \"playerCount\",\n  description: \"The Number of players participating in the given game.\",\n  type: \"Integer\",\n  min: 1,\n  required: true\n}];\nbootstrapFunctions.push(() => {\n  defaultTypes.forEach(type => {\n    const exists = FactorTypes.findOne({\n      name: type.name\n    });\n\n    if (exists) {\n      return;\n    }\n\n    log.info(\"Inserting default Factor Type: \".concat(type.name));\n\n    try {\n      FactorTypes.insert(type);\n    } catch (error) {\n      log.error(\"Failed to insert '\".concat(type.name, \"' default Factor Type: \").concat(err));\n    }\n  });\n});","map":{"version":3,"sources":["packages/empirica:core/api/factor-types/server/bootstrap.js"],"names":["FactorTypes","module","link","v","log","default","bootstrapFunctions","defaultTypes","name","description","type","min","required","push","forEach","exists","findOne","info","insert","error","err"],"mappings":"AAAA,IAAIA,WAAJ;AAAgBC,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC;AAACF,EAAAA,WAAW,CAACG,CAAD,EAAG;AAACH,IAAAA,WAAW,GAACG,CAAZ;AAAc;;AAA9B,CAAjC,EAAiE,CAAjE;AAAoE,IAAIC,GAAJ;AAAQH,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAkC;AAACG,EAAAA,OAAO,CAACF,CAAD,EAAG;AAACC,IAAAA,GAAG,GAACD,CAAJ;AAAM;;AAAlB,CAAlC,EAAsD,CAAtD;AAAyD,IAAIG,kBAAJ;AAAuBL,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACI,EAAAA,kBAAkB,CAACH,CAAD,EAAG;AAACG,IAAAA,kBAAkB,GAACH,CAAnB;AAAqB;;AAA5C,CAAnD,EAAiG,CAAjG;AAI5K,MAAMI,YAAY,GAAG,CACnB;AACEC,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,WAAW,EAAE,wDAFf;AAGEC,EAAAA,IAAI,EAAE,SAHR;AAIEC,EAAAA,GAAG,EAAE,CAJP;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CADmB,CAArB;AAUAN,kBAAkB,CAACO,IAAnB,CAAwB,MAAM;AAC5BN,EAAAA,YAAY,CAACO,OAAb,CAAqBJ,IAAI,IAAI;AAC3B,UAAMK,MAAM,GAAGf,WAAW,CAACgB,OAAZ,CAAoB;AAAER,MAAAA,IAAI,EAAEE,IAAI,CAACF;AAAb,KAApB,CAAf;;AACA,QAAIO,MAAJ,EAAY;AACV;AACD;;AACDX,IAAAA,GAAG,CAACa,IAAJ,0CAA2CP,IAAI,CAACF,IAAhD;;AACA,QAAI;AACFR,MAAAA,WAAW,CAACkB,MAAZ,CAAmBR,IAAnB;AACD,KAFD,CAEE,OAAOS,KAAP,EAAc;AACdf,MAAAA,GAAG,CAACe,KAAJ,6BAA+BT,IAAI,CAACF,IAApC,oCAAkEY,GAAlE;AACD;AACF,GAXD;AAYD,CAbD","sourcesContent":["import { FactorTypes } from \"../factor-types.js\";\nimport log from \"../../../lib/log.js\";\nimport { bootstrapFunctions } from \"../../../startup/server/bootstrap.js\";\n\nconst defaultTypes = [\n  {\n    name: \"playerCount\",\n    description: \"The Number of players participating in the given game.\",\n    type: \"Integer\",\n    min: 1,\n    required: true\n  }\n];\n\nbootstrapFunctions.push(() => {\n  defaultTypes.forEach(type => {\n    const exists = FactorTypes.findOne({ name: type.name });\n    if (exists) {\n      return;\n    }\n    log.info(`Inserting default Factor Type: ${type.name}`);\n    try {\n      FactorTypes.insert(type);\n    } catch (error) {\n      log.error(`Failed to insert '${type.name}' default Factor Type: ${err}`);\n    }\n  });\n});\n"]},"sourceType":"module","hash":"6e04d0382e4b7f84bfff35288700f8cf2c71a72b"}
