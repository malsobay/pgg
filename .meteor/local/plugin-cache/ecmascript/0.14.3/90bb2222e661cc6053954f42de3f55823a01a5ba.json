{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/containers/GameContainer.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/ui/containers/GameContainer.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/containers/GameContainer.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/containers/GameContainer.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/containers/GameContainer.jsx"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nvar TimeSync;\nmodule.link(\"meteor/mizzao:timesync\", {\n  TimeSync: function (v) {\n    TimeSync = v;\n  }\n}, 0);\nvar withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 1);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 2);\nvar PlayerRounds;\nmodule.link(\"../../api/player-rounds/player-rounds\", {\n  PlayerRounds: function (v) {\n    PlayerRounds = v;\n  }\n}, 3);\nvar augmentGameStageRound, augmentPlayer, augmentPlayerLobby, augmentPlayerStageRound, augmentGameLobby;\nmodule.link(\"../../api/player-stages/augment\", {\n  augmentGameStageRound: function (v) {\n    augmentGameStageRound = v;\n  },\n  augmentPlayer: function (v) {\n    augmentPlayer = v;\n  },\n  augmentPlayerLobby: function (v) {\n    augmentPlayerLobby = v;\n  },\n  augmentPlayerStageRound: function (v) {\n    augmentPlayerStageRound = v;\n  },\n  augmentGameLobby: function (v) {\n    augmentGameLobby = v;\n  }\n}, 4);\nvar PlayerStages;\nmodule.link(\"../../api/player-stages/player-stages\", {\n  PlayerStages: function (v) {\n    PlayerStages = v;\n  }\n}, 5);\nvar Players;\nmodule.link(\"../../api/players/players\", {\n  Players: function (v) {\n    Players = v;\n  }\n}, 6);\nvar Rounds;\nmodule.link(\"../../api/rounds/rounds\", {\n  Rounds: function (v) {\n    Rounds = v;\n  }\n}, 7);\nvar Stages;\nmodule.link(\"../../api/stages/stages\", {\n  Stages: function (v) {\n    Stages = v;\n  }\n}, 8);\nvar Treatments;\nmodule.link(\"../../api/treatments/treatments.js\", {\n  Treatments: function (v) {\n    Treatments = v;\n  }\n}, 9);\nvar Game;\nmodule.link(\"../components/Game.jsx\", {\n  \"default\": function (v) {\n    Game = v;\n  }\n}, 10);\nvar loadingObj = {\n  loading: true\n}; // Handles all the timing stuff\n\nvar withTimer = withTracker(function (_ref) {\n  var game = _ref.game,\n      stage = _ref.stage,\n      player = _ref.player,\n      rest = _objectWithoutProperties(_ref, [\"game\", \"stage\", \"player\"]);\n\n  // We no longer need timers if the game ended, skip the timing stuff.\n  if (game && game.finishedAt) {\n    return {\n      game: game,\n      stage: stage,\n      player: player\n    };\n  } // TimeSync.serverTime() is a reactive source that will trigger this\n  // withTracker function every 1s.\n\n\n  var now = moment(TimeSync.serverTime(null, 100));\n  var startTimeAt = stage && stage.startTimeAt && moment(stage.startTimeAt);\n  var started = startTimeAt && now.isSameOrAfter(startTimeAt);\n  var endTimeAt = startTimeAt && startTimeAt.add(stage.durationInSeconds, \"seconds\");\n  var ended = endTimeAt && now.isSameOrAfter(endTimeAt);\n  var timedOut = stage && !player.stage.submitted && ended;\n  var roundOver = stage && player.stage.submitted || timedOut;\n  return _objectSpread({\n    game: game,\n    stage: stage,\n    player: player,\n    timedOut: timedOut,\n    roundOver: roundOver,\n    started: started,\n    ended: ended,\n    endTimeAt: endTimeAt\n  }, rest);\n})(Game); // Handles all the info below game\n\nvar withGameInfo = withTracker(function (_ref2) {\n  var game = _ref2.game,\n      gameLobby = _ref2.gameLobby,\n      player = _ref2.player,\n      treatment = _ref2.treatment,\n      rest = _objectWithoutProperties(_ref2, [\"game\", \"gameLobby\", \"player\", \"treatment\"]);\n\n  if (!game) {\n    return {\n      gameLobby: gameLobby,\n      player: player,\n      treatment: treatment\n    };\n  }\n\n  var gameId = game._id;\n  treatment = Treatments.findOne(game.treatmentId);\n\n  if (!treatment) {\n    return loadingObj;\n  }\n\n  game.treatment = treatment.factorsObject();\n  game.players = Players.find({\n    gameId: gameId\n  }).fetch();\n  game.rounds = Rounds.find({\n    gameId: gameId\n  }, {\n    sort: {\n      index: 1\n    }\n  }).fetch();\n  game.rounds.forEach(function (round) {\n    round.stages = Stages.find({\n      roundId: round._id\n    }, {\n      sort: {\n        index: 1\n      }\n    }).fetch();\n  });\n  var stage = Stages.findOne(game.currentStageId);\n\n  if (!stage) {\n    return loadingObj;\n  }\n\n  var round = game.rounds.find(function (r) {\n    return r._id === stage.roundId;\n  }); // We're having streaming updates from the backend that put us in an\n  // uncertain state until everything is loaded correctly.\n\n  var playerIds = game.players.map(function (p) {\n    return p._id;\n  });\n  var playerStagesCount = PlayerStages.find({\n    stageId: stage._id,\n    playerId: {\n      $in: playerIds\n    }\n  }).count();\n  var playerRoundsCount = PlayerRounds.find({\n    roundId: round._id,\n    playerId: {\n      $in: playerIds\n    }\n  }).count();\n\n  if (playerIds.length !== playerStagesCount || playerIds.length !== playerRoundsCount) {\n    return loadingObj;\n  }\n\n  augmentGameStageRound(game, stage, round);\n\n  var applyAugment = function (player) {\n    player.stage = {\n      _id: stage._id\n    };\n    player.round = {\n      _id: round._id\n    };\n    augmentPlayerStageRound(player, player.stage, player.round, game);\n  };\n\n  applyAugment(player);\n  game.players.forEach(applyAugment);\n\n  var params = _objectSpread({}, rest, {\n    game: game,\n    round: round,\n    stage: stage,\n    player: player,\n    treatment: treatment,\n    playerStagesCount: playerStagesCount,\n    playerRoundsCount: playerRoundsCount\n  });\n\n  return params;\n})(withTimer); // Loads top level Players, Game, Round and Stage data\n\nmodule.exportDefault(withTracker(function (_ref3) {\n  var player = _ref3.player,\n      gameLobby = _ref3.gameLobby,\n      game = _ref3.game,\n      rest = _objectWithoutProperties(_ref3, [\"player\", \"gameLobby\", \"game\"]);\n\n  // If no game, we're at lobby level\n  if (!game) {\n    if (!gameLobby) {\n      throw new Error(\"game not found\");\n    }\n\n    var treatment = Treatments.findOne(gameLobby.treatmentId);\n\n    if (!treatment) {\n      return loadingObj;\n    }\n\n    gameLobby.treatment = treatment.factorsObject();\n    gameLobby.queuedCount = gameLobby.queuedPlayerIds.length;\n    gameLobby.readyCount = gameLobby.playerIds.length;\n    gameLobby.players = Players.find({\n      _id: {\n        $in: gameLobby.playerIds\n      }\n    }).fetch();\n    gameLobby.players.forEach(function (p) {\n      return augmentPlayerLobby(p, {}, {}, gameLobby);\n    });\n    augmentGameLobby(gameLobby);\n    augmentPlayerLobby(player, {}, {}, gameLobby);\n    return _objectSpread({}, rest, {\n      gameLobby: gameLobby,\n      player: player,\n      treatment: treatment\n    });\n  }\n\n  return _objectSpread({}, rest, {\n    game: game,\n    player: player\n  });\n})(withGameInfo));","map":{"version":3,"sources":["packages/empirica:core/ui/containers/GameContainer.jsx"],"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","TimeSync","withTracker","moment","PlayerRounds","augmentGameStageRound","augmentPlayer","augmentPlayerLobby","augmentPlayerStageRound","augmentGameLobby","PlayerStages","Players","Rounds","Stages","Treatments","Game","loadingObj","loading","withTimer","game","stage","player","rest","finishedAt","now","serverTime","startTimeAt","started","isSameOrAfter","endTimeAt","add","durationInSeconds","ended","timedOut","submitted","roundOver","withGameInfo","gameLobby","treatment","gameId","_id","findOne","treatmentId","factorsObject","players","find","fetch","rounds","sort","index","forEach","round","stages","roundId","currentStageId","r","playerIds","map","p","playerStagesCount","stageId","playerId","$in","count","playerRoundsCount","length","applyAugment","params","exportDefault","Error","queuedCount","queuedPlayerIds","readyCount"],"mappings":"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","sourcesContent":["// gameContainer.jsx\n\nimport { TimeSync } from \"meteor/mizzao:timesync\";\nimport { withTracker } from \"meteor/react-meteor-data\";\nimport moment from \"moment\";\nimport { PlayerRounds } from \"../../api/player-rounds/player-rounds\";\nimport {\n  augmentGameStageRound,\n  augmentPlayer,\n  augmentPlayerLobby,\n  augmentPlayerStageRound,\n  augmentGameLobby\n} from \"../../api/player-stages/augment\";\nimport { PlayerStages } from \"../../api/player-stages/player-stages\";\nimport { Players } from \"../../api/players/players\";\nimport { Rounds } from \"../../api/rounds/rounds\";\nimport { Stages } from \"../../api/stages/stages\";\nimport { Treatments } from \"../../api/treatments/treatments.js\";\nimport Game from \"../components/Game.jsx\";\n\nconst loadingObj = { loading: true };\n\n// Handles all the timing stuff\nconst withTimer = withTracker(({ game, stage, player, ...rest }) => {\n  // We no longer need timers if the game ended, skip the timing stuff.\n  if (game && game.finishedAt) {\n    return { game, stage, player };\n  }\n\n  // TimeSync.serverTime() is a reactive source that will trigger this\n  // withTracker function every 1s.\n  const now = moment(TimeSync.serverTime(null, 100));\n\n  const startTimeAt = stage && stage.startTimeAt && moment(stage.startTimeAt);\n  const started = startTimeAt && now.isSameOrAfter(startTimeAt);\n  const endTimeAt =\n    startTimeAt && startTimeAt.add(stage.durationInSeconds, \"seconds\");\n  const ended = endTimeAt && now.isSameOrAfter(endTimeAt);\n  const timedOut = stage && !player.stage.submitted && ended;\n  const roundOver = (stage && player.stage.submitted) || timedOut;\n\n  return {\n    game,\n    stage,\n    player,\n    timedOut,\n    roundOver,\n    started,\n    ended,\n    endTimeAt,\n    ...rest\n  };\n})(Game);\n\n// Handles all the info below game\nconst withGameInfo = withTracker(\n  ({ game, gameLobby, player, treatment, ...rest }) => {\n    if (!game) {\n      return {\n        gameLobby,\n        player,\n        treatment\n      };\n    }\n\n    const gameId = game._id;\n    treatment = Treatments.findOne(game.treatmentId);\n    if (!treatment) {\n      return loadingObj;\n    }\n\n    game.treatment = treatment.factorsObject();\n    game.players = Players.find({ gameId }).fetch();\n    game.rounds = Rounds.find({ gameId }, { sort: { index: 1 } }).fetch();\n    game.rounds.forEach(round => {\n      round.stages = Stages.find(\n        { roundId: round._id },\n        { sort: { index: 1 } }\n      ).fetch();\n    });\n\n    const stage = Stages.findOne(game.currentStageId);\n    if (!stage) {\n      return loadingObj;\n    }\n    const round = game.rounds.find(r => r._id === stage.roundId);\n\n    // We're having streaming updates from the backend that put us in an\n    // uncertain state until everything is loaded correctly.\n    const playerIds = game.players.map(p => p._id);\n    const playerStagesCount = PlayerStages.find({\n      stageId: stage._id,\n      playerId: { $in: playerIds }\n    }).count();\n    const playerRoundsCount = PlayerRounds.find({\n      roundId: round._id,\n      playerId: { $in: playerIds }\n    }).count();\n\n    if (\n      playerIds.length !== playerStagesCount ||\n      playerIds.length !== playerRoundsCount\n    ) {\n      return loadingObj;\n    }\n\n    augmentGameStageRound(game, stage, round);\n    const applyAugment = player => {\n      player.stage = { _id: stage._id };\n      player.round = { _id: round._id };\n      augmentPlayerStageRound(player, player.stage, player.round, game);\n    };\n    applyAugment(player);\n    game.players.forEach(applyAugment);\n\n    const params = {\n      ...rest,\n      game,\n      round,\n      stage,\n      player,\n      treatment,\n      playerStagesCount,\n      playerRoundsCount\n    };\n\n    return params;\n  }\n)(withTimer);\n\n// Loads top level Players, Game, Round and Stage data\nexport default withTracker(({ player, gameLobby, game, ...rest }) => {\n  // If no game, we're at lobby level\n  if (!game) {\n    if (!gameLobby) {\n      throw new Error(\"game not found\");\n    }\n    const treatment = Treatments.findOne(gameLobby.treatmentId);\n    if (!treatment) {\n      return loadingObj;\n    }\n\n    gameLobby.treatment = treatment.factorsObject();\n    gameLobby.queuedCount = gameLobby.queuedPlayerIds.length;\n    gameLobby.readyCount = gameLobby.playerIds.length;\n    gameLobby.players = Players.find({\n      _id: { $in: gameLobby.playerIds }\n    }).fetch();\n\n    gameLobby.players.forEach(p => augmentPlayerLobby(p, {}, {}, gameLobby));\n\n    augmentGameLobby(gameLobby);\n    augmentPlayerLobby(player, {}, {}, gameLobby);\n\n    return {\n      ...rest,\n      gameLobby,\n      player,\n      treatment\n    };\n  }\n\n  return {\n    ...rest,\n    game,\n    player\n  };\n})(withGameInfo);\n"]},"sourceType":"module","hash":"90bb2222e661cc6053954f42de3f55823a01a5ba"}
