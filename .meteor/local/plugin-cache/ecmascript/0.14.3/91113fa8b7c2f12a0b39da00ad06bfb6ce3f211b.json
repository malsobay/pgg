{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/game-lobbies/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/api/game-lobbies/methods.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/game-lobbies/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/game-lobbies/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/game-lobbies/methods.js"}},"code":"module.export({\n  updateGameLobbyData: function () {\n    return updateGameLobbyData;\n  },\n  earlyExitGameLobby: function () {\n    return earlyExitGameLobby;\n  }\n});\nvar shared;\nmodule.link(\"../../shared.js\", {\n  \"default\": function (v) {\n    shared = v;\n  }\n}, 0);\nvar ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod: function (v) {\n    ValidatedMethod = v;\n  }\n}, 1);\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 2);\nvar GameLobbies;\nmodule.link(\"./game-lobbies\", {\n  GameLobbies: function (v) {\n    GameLobbies = v;\n  }\n}, 3);\nvar Players;\nmodule.link(\"../players/players\", {\n  Players: function (v) {\n    Players = v;\n  }\n}, 4);\nvar Batches;\nmodule.link(\"../batches/batches.js\", {\n  Batches: function (v) {\n    Batches = v;\n  }\n}, 5);\nvar updateGameLobbyData = new ValidatedMethod({\n  name: \"GameLobbies.methods.updateData\",\n  validate: new SimpleSchema({\n    gameLobbyId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    key: {\n      type: String\n    },\n    value: {\n      type: String\n    },\n    append: {\n      type: Boolean,\n      optional: true\n    },\n    noCallback: {\n      type: Boolean,\n      optional: true\n    }\n  }).validator(),\n  run: function (_ref) {\n    var _update;\n\n    var gameLobbyId = _ref.gameLobbyId,\n        key = _ref.key,\n        value = _ref.value,\n        append = _ref.append,\n        noCallback = _ref.noCallback;\n    var gameLobby = GameLobbies.findOne(gameLobbyId);\n\n    if (!gameLobby) {\n      throw new Error(\"game lobbies not found\");\n    } // TODO check can update this record game\n\n\n    var val = JSON.parse(value);\n    var update = (_update = {}, _update[\"data.\" + key] = val, _update);\n    var modifier = append ? {\n      $push: update\n    } : {\n      $set: update\n    };\n    GameLobbies.update(gameLobbyId, modifier, {\n      autoConvert: false,\n      filter: false,\n      validate: false,\n      trimStrings: false,\n      removeEmptyStrings: false\n    });\n\n    if (Meteor.isServer && !noCallback) {\n      shared.callOnChange({\n        conn: this.connection,\n        gameLobbyId: gameLobbyId,\n        gameLobby: gameLobby,\n        key: key,\n        value: val,\n        prevValue: gameLobby.data && gameLobby.data[key],\n        append: append\n      });\n    }\n  }\n});\nvar earlyExitGameLobby = new ValidatedMethod({\n  name: \"GameLobbies.methods.earlyExit\",\n  validate: new SimpleSchema({\n    exitReason: {\n      label: \"Reason for Exit\",\n      type: String,\n      regEx: /[a-zA-Z0-9_]+/\n    },\n    gameLobbyId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    status: {\n      label: \"Status for lobby after exit\",\n      type: String,\n      regEx: /[a-zA-Z0-9_]+/,\n      optional: true\n    }\n  }).validator(),\n  run: function (_ref2) {\n    var exitReason = _ref2.exitReason,\n        gameLobbyId = _ref2.gameLobbyId,\n        status = _ref2.status;\n\n    if (!Meteor.isServer) {\n      return;\n    }\n\n    var gameLobby = GameLobbies.findOne(gameLobbyId);\n    var exitStatus = status || \"failed\";\n\n    if (!gameLobby) {\n      throw new Error(\"gameLobby not found\");\n    }\n\n    Players.update({\n      gameLobbyId: gameLobbyId\n    }, {\n      $set: {\n        exitAt: new Date(),\n        exitStatus: exitStatus,\n        exitReason: exitReason\n      }\n    });\n    GameLobbies.update(gameLobbyId, {\n      $set: {\n        status: exitStatus,\n        endReason: exitReason\n      }\n    });\n    var batch = Batches.findOne(gameLobby.batchId);\n    var availableLobby = GameLobbies.findOne({\n      $and: [{\n        _id: {\n          $in: batch.gameLobbyIds\n        }\n      }, {\n        status: {\n          $in: [\"init\", \"running\"]\n        }\n      }]\n    }); // End batch if there is no available lobby\n\n    if (!availableLobby) {\n      Batches.update({\n        gameLobbyIds: gameLobbyId\n      }, {\n        $set: {\n          status: exitStatus,\n          finishedAt: new Date()\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["packages/empirica:core/api/game-lobbies/methods.js"],"names":["module","export","updateGameLobbyData","earlyExitGameLobby","shared","link","v","ValidatedMethod","SimpleSchema","GameLobbies","Players","Batches","name","validate","gameLobbyId","type","String","regEx","RegEx","Id","key","value","append","Boolean","optional","noCallback","validator","run","gameLobby","findOne","Error","val","JSON","parse","update","modifier","$push","$set","autoConvert","filter","trimStrings","removeEmptyStrings","Meteor","isServer","callOnChange","conn","connection","prevValue","data","exitReason","label","status","exitStatus","exitAt","Date","endReason","batch","batchId","availableLobby","$and","_id","$in","gameLobbyIds","finishedAt"],"mappings":"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","sourcesContent":["import shared from \"../../shared.js\";\nimport { ValidatedMethod } from \"meteor/mdg:validated-method\";\nimport SimpleSchema from \"simpl-schema\";\n\nimport { GameLobbies } from \"./game-lobbies\";\nimport { Players } from \"../players/players\";\nimport { Batches } from \"../batches/batches.js\";\n\nexport const updateGameLobbyData = new ValidatedMethod({\n  name: \"GameLobbies.methods.updateData\",\n\n  validate: new SimpleSchema({\n    gameLobbyId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    key: {\n      type: String\n    },\n    value: {\n      type: String\n    },\n    append: {\n      type: Boolean,\n      optional: true\n    },\n    noCallback: {\n      type: Boolean,\n      optional: true\n    }\n  }).validator(),\n\n  run({ gameLobbyId, key, value, append, noCallback }) {\n    const gameLobby = GameLobbies.findOne(gameLobbyId);\n    if (!gameLobby) {\n      throw new Error(\"game lobbies not found\");\n    }\n    // TODO check can update this record game\n\n    const val = JSON.parse(value);\n    let update = { [`data.${key}`]: val };\n    const modifier = append ? { $push: update } : { $set: update };\n\n    GameLobbies.update(gameLobbyId, modifier, {\n      autoConvert: false,\n      filter: false,\n      validate: false,\n      trimStrings: false,\n      removeEmptyStrings: false\n    });\n\n    if (Meteor.isServer && !noCallback) {\n      shared.callOnChange({\n        conn: this.connection,\n        gameLobbyId,\n        gameLobby,\n        key,\n        value: val,\n        prevValue: gameLobby.data && gameLobby.data[key],\n        append\n      });\n    }\n  }\n});\n\nexport const earlyExitGameLobby = new ValidatedMethod({\n  name: \"GameLobbies.methods.earlyExit\",\n\n  validate: new SimpleSchema({\n    exitReason: {\n      label: \"Reason for Exit\",\n      type: String,\n      regEx: /[a-zA-Z0-9_]+/\n    },\n    gameLobbyId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    status: {\n      label: \"Status for lobby after exit\",\n      type: String,\n      regEx: /[a-zA-Z0-9_]+/,\n      optional: true\n    }\n  }).validator(),\n\n  run({ exitReason, gameLobbyId, status }) {\n    if (!Meteor.isServer) {\n      return;\n    }\n\n    const gameLobby = GameLobbies.findOne(gameLobbyId);\n    const exitStatus = status || \"failed\";\n    if (!gameLobby) {\n      throw new Error(\"gameLobby not found\");\n    }\n\n    Players.update(\n      { gameLobbyId },\n      {\n        $set: {\n          exitAt: new Date(),\n          exitStatus: exitStatus,\n          exitReason\n        }\n      }\n    );\n\n    GameLobbies.update(gameLobbyId, {\n      $set: {\n        status: exitStatus,\n        endReason: exitReason\n      }\n    });\n\n    const batch = Batches.findOne(gameLobby.batchId);\n    const availableLobby = GameLobbies.findOne({\n      $and: [\n        {\n          _id: { $in: batch.gameLobbyIds }\n        },\n        { status: { $in: [\"init\", \"running\"] } }\n      ]\n    });\n\n    // End batch if there is no available lobby\n    if (!availableLobby) {\n      Batches.update(\n        { gameLobbyIds: gameLobbyId },\n        { $set: { status: exitStatus, finishedAt: new Date() } }\n      );\n    }\n  }\n});\n"]},"sourceType":"module","hash":"91113fa8b7c2f12a0b39da00ad06bfb6ce3f211b"}
