{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/batches/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/api/batches/methods.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/batches/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/batches/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/batches/methods.js"}},"code":"module.export({\n  createBatch: function () {\n    return createBatch;\n  },\n  duplicateBatch: function () {\n    return duplicateBatch;\n  },\n  updateBatch: function () {\n    return updateBatch;\n  },\n  updateBatchStatus: function () {\n    return updateBatchStatus;\n  }\n});\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod: function (v) {\n    ValidatedMethod = v;\n  }\n}, 1);\nvar Batches;\nmodule.link(\"./batches\", {\n  Batches: function (v) {\n    Batches = v;\n  }\n}, 2);\nvar GameLobbies;\nmodule.link(\"../game-lobbies/game-lobbies.js\", {\n  GameLobbies: function (v) {\n    GameLobbies = v;\n  }\n}, 3);\nvar Games;\nmodule.link(\"../games/games.js\", {\n  Games: function (v) {\n    Games = v;\n  }\n}, 4);\nvar IdSchema;\nmodule.link(\"../default-schemas\", {\n  IdSchema: function (v) {\n    IdSchema = v;\n  }\n}, 5);\nvar createBatch = new ValidatedMethod({\n  name: \"Batches.methods.create\",\n  validate: Batches.schema.omit(\"gameIds\", \"gameLobbyIds\", \"status\", \"createdAt\", \"updatedAt\", \"debugMode\", \"full\", \"index\").validator(),\n  run: function (batch) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    Batches.insert(batch, {\n      autoConvert: false,\n      filter: false,\n      validate: false\n    });\n  }\n});\nvar duplicateBatch = new ValidatedMethod({\n  name: \"Batches.methods.duplicate\",\n  validate: IdSchema.validator(),\n  run: function (_ref) {\n    var _id = _ref._id;\n\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    var batch = Batches.findOne(_id);\n    batch.duplicate();\n  }\n});\nvar updateBatch = new ValidatedMethod({\n  name: \"Batches.methods.updateBatch\",\n  validate: new SimpleSchema({\n    archived: {\n      type: Boolean,\n      optional: true\n    }\n  }).extend(IdSchema).validator(),\n  run: function (_ref2) {\n    var _id = _ref2._id,\n        archived = _ref2.archived;\n\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    var batch = Batches.findOne(_id);\n\n    if (!batch) {\n      throw new Error(\"not found\");\n    }\n\n    var $set = {},\n        $unset = {};\n\n    if (archived !== undefined) {\n      if (archived) {\n        if (batch.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $set.archivedAt = new Date();\n        $set.archivedById = this.userId;\n      }\n\n      if (!archived) {\n        if (!batch.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $unset.archivedAt = true;\n        $unset.archivedById = true;\n      }\n    }\n\n    var modifier = {};\n\n    if (Object.keys($set).length > 0) {\n      modifier.$set = $set;\n    }\n\n    if (Object.keys($unset).length > 0) {\n      modifier.$unset = $unset;\n    }\n\n    if (Object.keys(modifier).length === 0) {\n      return;\n    }\n\n    Batches.update(_id, modifier);\n  }\n});\nvar updateBatchStatus = new ValidatedMethod({\n  name: \"Batches.methods.updateStatus\",\n  validate: Batches.schema.pick(\"status\").extend(IdSchema).validator(),\n  run: function (_ref3) {\n    var _id = _ref3._id,\n        status = _ref3.status;\n\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    var batch = Batches.findOne(_id);\n\n    if (!batch) {\n      throw new Error(\"not found\");\n    }\n\n    if (status === \"init\") {\n      throw new Error(\"invalid\");\n    }\n\n    var $set = {\n      status: status\n    };\n\n    if (status === \"running\") {\n      $set.runningAt = new Date();\n      GameLobbies.update({\n        batchId: _id\n      }, {\n        $set: {\n          status: \"running\"\n        }\n      }, {\n        multi: true\n      });\n    }\n\n    Batches.update(_id, {\n      $set: $set\n    });\n  }\n});\n\nif (Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) {\n  module.export({\n    setBatchInDebugMode: function () {\n      return _setBatchInDebugMode;\n    }\n  });\n\n  var _setBatchInDebugMode = new ValidatedMethod({\n    name: \"Batches.methods.debugMode\",\n    validate: IdSchema.validator(),\n    run: function (_ref4) {\n      var _id = _ref4._id;\n\n      if (!this.userId) {\n        throw new Error(\"unauthorized\");\n      }\n\n      var batch = Batches.findOne(_id);\n\n      if (!batch) {\n        throw new Error(\"not found\");\n      }\n\n      Batches.update(_id, {\n        $set: {\n          debugMode: true\n        }\n      });\n      GameLobbies.update({\n        batchId: _id\n      }, {\n        $set: {\n          debugMode: true\n        }\n      });\n      Games.update({\n        batchId: _id\n      }, {\n        $set: {\n          debugMode: true\n        }\n      });\n    }\n  });\n}","map":{"version":3,"sources":["packages/empirica:core/api/batches/methods.js"],"names":["module","export","createBatch","duplicateBatch","updateBatch","updateBatchStatus","SimpleSchema","link","v","ValidatedMethod","Batches","GameLobbies","Games","IdSchema","name","validate","schema","omit","validator","run","batch","userId","Error","insert","autoConvert","filter","_id","findOne","duplicate","archived","type","Boolean","optional","extend","$set","$unset","undefined","archivedAt","Date","archivedById","modifier","Object","keys","length","update","pick","status","runningAt","batchId","multi","Meteor","isDevelopment","settings","public","debug_gameDebugMode","setBatchInDebugMode","debugMode"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport { ValidatedMethod } from \"meteor/mdg:validated-method\";\n\nimport { Batches } from \"./batches\";\nimport { GameLobbies } from \"../game-lobbies/game-lobbies.js\";\nimport { Games } from \"../games/games.js\";\nimport { IdSchema } from \"../default-schemas\";\n\nexport const createBatch = new ValidatedMethod({\n  name: \"Batches.methods.create\",\n\n  validate: Batches.schema\n    .omit(\n      \"gameIds\",\n      \"gameLobbyIds\",\n      \"status\",\n      \"createdAt\",\n      \"updatedAt\",\n      \"debugMode\",\n      \"full\",\n      \"index\"\n    )\n    .validator(),\n\n  run(batch) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    Batches.insert(batch, {\n      autoConvert: false,\n      filter: false,\n      validate: false\n    });\n  }\n});\n\nexport const duplicateBatch = new ValidatedMethod({\n  name: \"Batches.methods.duplicate\",\n\n  validate: IdSchema.validator(),\n\n  run({ _id }) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const batch = Batches.findOne(_id);\n    batch.duplicate();\n  }\n});\n\nexport const updateBatch = new ValidatedMethod({\n  name: \"Batches.methods.updateBatch\",\n\n  validate: new SimpleSchema({\n    archived: {\n      type: Boolean,\n      optional: true\n    }\n  })\n    .extend(IdSchema)\n    .validator(),\n\n  run({ _id, archived }) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const batch = Batches.findOne(_id);\n    if (!batch) {\n      throw new Error(\"not found\");\n    }\n\n    const $set = {},\n      $unset = {};\n\n    if (archived !== undefined) {\n      if (archived) {\n        if (batch.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $set.archivedAt = new Date();\n        $set.archivedById = this.userId;\n      }\n      if (!archived) {\n        if (!batch.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $unset.archivedAt = true;\n        $unset.archivedById = true;\n      }\n    }\n\n    const modifier = {};\n    if (Object.keys($set).length > 0) {\n      modifier.$set = $set;\n    }\n    if (Object.keys($unset).length > 0) {\n      modifier.$unset = $unset;\n    }\n    if (Object.keys(modifier).length === 0) {\n      return;\n    }\n\n    Batches.update(_id, modifier);\n  }\n});\n\nexport const updateBatchStatus = new ValidatedMethod({\n  name: \"Batches.methods.updateStatus\",\n\n  validate: Batches.schema\n    .pick(\"status\")\n    .extend(IdSchema)\n    .validator(),\n\n  run({ _id, status }) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const batch = Batches.findOne(_id);\n    if (!batch) {\n      throw new Error(\"not found\");\n    }\n\n    if (status === \"init\") {\n      throw new Error(\"invalid\");\n    }\n\n    const $set = { status };\n\n    if (status === \"running\") {\n      $set.runningAt = new Date();\n      GameLobbies.update(\n        { batchId: _id },\n        { $set: { status: \"running\" } },\n        { multi: true }\n      );\n    }\n\n    Batches.update(_id, { $set });\n  }\n});\n\nif (Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) {\n  export const setBatchInDebugMode = new ValidatedMethod({\n    name: \"Batches.methods.debugMode\",\n\n    validate: IdSchema.validator(),\n\n    run({ _id }) {\n      if (!this.userId) {\n        throw new Error(\"unauthorized\");\n      }\n\n      const batch = Batches.findOne(_id);\n      if (!batch) {\n        throw new Error(\"not found\");\n      }\n\n      Batches.update(_id, { $set: { debugMode: true } });\n      GameLobbies.update({ batchId: _id }, { $set: { debugMode: true } });\n      Games.update({ batchId: _id }, { $set: { debugMode: true } });\n    }\n  });\n}\n"]},"sourceType":"module","hash":"9ca3aa88d3970fc754ca46bab64c5105517e335a"}
