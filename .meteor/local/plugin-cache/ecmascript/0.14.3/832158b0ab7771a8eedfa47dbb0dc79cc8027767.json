{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminBatchGame.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return AdminBatchGame;\n  }\n});\nvar Icon, Intent, Tag, Button;\nmodule.link(\"@blueprintjs/core\", {\n  Icon: function (v) {\n    Icon = v;\n  },\n  Intent: function (v) {\n    Intent = v;\n  },\n  Tag: function (v) {\n    Tag = v;\n  },\n  Button: function (v) {\n    Button = v;\n  }\n}, 0);\nvar IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames: function (v) {\n    IconNames = v;\n  }\n}, 1);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 2);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 3);\nvar earlyExitGameLobby;\nmodule.link(\"../../../api/game-lobbies/methods\", {\n  earlyExitGameLobby: function (v) {\n    earlyExitGameLobby = v;\n  }\n}, 4);\nvar earlyExitGame;\nmodule.link(\"../../../api/games/methods\", {\n  earlyExitGame: function (v) {\n    earlyExitGame = v;\n  }\n}, 5);\n\nvar AdminBatchGame = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AdminBatchGame, _React$Component);\n\n  var _super = _createSuper(AdminBatchGame);\n\n  function AdminBatchGame() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleStatusChange = function (status, event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          game = _this$props.game,\n          lobby = _this$props.lobby;\n      var endReason = \"adminCancelled\";\n\n      if (game !== undefined && game._id) {\n        earlyExitGame.call({\n          gameId: game._id,\n          endReason: endReason,\n          status: status\n        });\n        return;\n      }\n\n      earlyExitGameLobby.call({\n        exitReason: endReason,\n        gameLobbyId: lobby._id,\n        status: status\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = AdminBatchGame.prototype;\n\n  _proto.render = function () {\n    function render() {\n      var _this$props2 = this.props,\n          batch = _this$props2.batch,\n          lobby = _this$props2.lobby,\n          game = _this$props2.game,\n          rounds = _this$props2.rounds,\n          stages = _this$props2.stages,\n          treatment = _this$props2.treatment;\n      var currentRound;\n      var currentStage;\n\n      if (game) {\n        currentStage = stages.find(function (s) {\n          return s._id === game.currentStageId;\n        });\n\n        if (currentStage) {\n          currentRound = rounds.find(function (r) {\n            return r._id === currentStage.roundId;\n          });\n        }\n      }\n\n      var notReadyPlayers = [];\n      var players = (game ? game : lobby).playerIds;\n      var bots = [];\n\n      if (!game) {\n        notReadyPlayers = lobby.queuedPlayerIds.filter(function (p) {\n          return players.indexOf(p) < 0;\n        });\n      }\n\n      var playerCountFactor = treatment.factor(\"playerCount\");\n      var playerCount = playerCountFactor ? playerCountFactor.value : 0;\n      var botsFactor = treatment.factor(\"botsCount\");\n      var botsCount = botsFactor && botsFactor.value;\n\n      if (botsCount) {\n        players = players.slice(0, players.length - botsCount);\n\n        for (var i = 0; i < botsCount; i++) {\n          bots.push(Random.id());\n        }\n      } // _.times(23, () => bots.push(Random.id()));\n\n\n      var statusMsg;\n      var statusIntent;\n      var statusMinimal = false;\n      var showCancelButton = false;\n\n      if (game && game.status === \"cancelled\") {\n        statusIntent = Intent.DANGER;\n        statusMinimal = true;\n        statusMsg = \"game cancelled\";\n      } else if (game && game.finishedAt) {\n        statusIntent = Intent.SUCCESS;\n        statusMinimal = true;\n        statusMsg = \"finished\";\n      } else if (lobby.timedOutAt) {\n        statusIntent = Intent.DANGER;\n        statusMinimal = true;\n        statusMsg = \"lobby timeout\";\n      } else if (lobby.status === \"cancelled\") {\n        statusIntent = Intent.DANGER;\n        statusMinimal = true;\n        statusMsg = \"lobby cancelled\";\n      } else if (batch.status === \"cancelled\") {\n        statusIntent = Intent.DANGER;\n        statusMinimal = true;\n        statusMsg = \"batch cancelled\";\n      } else if (batch.status === \"failed\") {\n        statusIntent = Intent.DANGER;\n        statusMinimal = true;\n        statusMsg = \"failed\";\n      } else if (batch.status === \"stopped\") {\n        statusIntent = Intent.DANGER;\n        statusMinimal = true;\n        statusMsg = \"batch stopped\";\n      } else if (game) {\n        statusIntent = Intent.SUCCESS;\n        statusMsg = \"running\";\n        showCancelButton = true;\n      } else {\n        if (players.length === 0) {\n          showCancelButton = true;\n\n          if (notReadyPlayers.length === 0) {\n            statusMsg = \"empty\";\n            statusMinimal = true;\n          } else {\n            statusMsg = \"pre-lobby\";\n            statusIntent = Intent.WARNING;\n            statusMinimal = true;\n          }\n        } else {\n          showCancelButton = true;\n          statusIntent = Intent.WARNING;\n          statusMsg = \"lobby\";\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"td\", null, lobby.index + 1), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Tag, {\n        intent: statusIntent,\n        minimal: statusMinimal\n      }, statusMsg)), /*#__PURE__*/React.createElement(\"td\", null, treatment.displayName()), game && game.createdAt ? /*#__PURE__*/React.createElement(\"td\", {\n        title: moment(game.createdAt).format()\n      }, moment(game.createdAt).fromNow()) : /*#__PURE__*/React.createElement(\"td\", null), game && game.finishedAt ? /*#__PURE__*/React.createElement(\"td\", {\n        title: moment(game.finishedAt).format()\n      }, moment(game.finishedAt).fromNow()) : /*#__PURE__*/React.createElement(\"td\", null), game && game.finishedAt ? /*#__PURE__*/React.createElement(\"td\", {\n        title: moment(game.finishedAt).format()\n      }, \"-\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", null, currentRound ? \"Round: \" + (currentRound.index + 1) + \" / \" + rounds.length : \"\", currentStage ? \" > Stage: \" + currentStage.displayName : \"\")), /*#__PURE__*/React.createElement(\"td\", null, playerCount), /*#__PURE__*/React.createElement(\"td\", null, bots.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"player-group\"\n      }, bots.length > 10 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        title: bots.length + \" Bots\",\n        key: \"bots\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        icon: IconNames.PERSON,\n        iconSize: 16,\n        style: {\n          color: \"#D99E0B\"\n        }\n      }), \" \", \"\\xD7 \", bots.length)) : bots.map(function (p) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          title: \"Bot\",\n          key: p\n        }, /*#__PURE__*/React.createElement(Icon, {\n          icon: IconNames.PERSON,\n          iconSize: 16,\n          style: {\n            color: \"#D99E0B\"\n          }\n        }));\n      })) : \"\", notReadyPlayers.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"player-group\"\n      }, notReadyPlayers.length > 10 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        title: notReadyPlayers.length + \" Players in Intro Steps\",\n        key: \"notReadyPlayers\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        icon: IconNames.PERSON,\n        iconSize: 16,\n        style: {\n          color: \"#A7B6C2\"\n        }\n      })), \" \", \"\\xD7 \", notReadyPlayers.length) : notReadyPlayers.map(function (p) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          title: \"Player in Intro Steps\",\n          key: p\n        }, /*#__PURE__*/React.createElement(Icon, {\n          icon: IconNames.PERSON,\n          iconSize: 16,\n          style: {\n            color: \"#A7B6C2\"\n          }\n        }));\n      })) : \"\", players.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"player-group\"\n      }, players.length > 10 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        title: players.length + \" Players\",\n        key: \"players\"\n      }, /*#__PURE__*/React.createElement(Icon, {\n        icon: IconNames.PERSON,\n        iconSize: 16\n      })), \" \", \"\\xD7 \", players.length) : players.map(function (p) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          title: \"Player\",\n          key: p\n        }, /*#__PURE__*/React.createElement(Icon, {\n          icon: IconNames.PERSON,\n          iconSize: 16\n        }));\n      })) : \"\"), /*#__PURE__*/React.createElement(\"td\", null, showCancelButton && /*#__PURE__*/React.createElement(Button, {\n        text: \"Cancel\",\n        icon: IconNames.STOP,\n        key: \"cancel\",\n        onClick: this.handleStatusChange.bind(this, \"cancelled\")\n      })));\n    }\n\n    return render;\n  }();\n\n  return AdminBatchGame;\n}(React.Component);","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminBatchGame.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","AdminBatchGame","Icon","Intent","Tag","Button","IconNames","moment","React","earlyExitGameLobby","earlyExitGame","handleStatusChange","status","event","preventDefault","props","game","lobby","endReason","undefined","_id","call","gameId","exitReason","gameLobbyId","render","batch","rounds","stages","treatment","currentRound","currentStage","find","s","currentStageId","r","roundId","notReadyPlayers","players","playerIds","bots","queuedPlayerIds","filter","p","indexOf","playerCountFactor","factor","playerCount","value","botsFactor","botsCount","slice","length","i","push","Random","id","statusMsg","statusIntent","statusMinimal","showCancelButton","DANGER","finishedAt","SUCCESS","timedOutAt","WARNING","index","displayName","createdAt","format","fromNow","PERSON","color","map","STOP","bind","Component"],"mappings":"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","sourcesContent":["import { Icon, Intent, Tag, Button } from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { earlyExitGameLobby } from \"../../../api/game-lobbies/methods\";\nimport { earlyExitGame } from \"../../../api/games/methods\";\n\nexport default class AdminBatchGame extends React.Component {\n  handleStatusChange = (status, event) => {\n    event.preventDefault();\n    const { game, lobby } = this.props;\n    const endReason = \"adminCancelled\";\n\n    if (game !== undefined && game._id) {\n      earlyExitGame.call({\n        gameId: game._id,\n        endReason,\n        status: status\n      });\n      return;\n    }\n\n    earlyExitGameLobby.call({\n      exitReason: endReason,\n      gameLobbyId: lobby._id,\n      status: status\n    });\n  };\n\n  render() {\n    const { batch, lobby, game, rounds, stages, treatment } = this.props;\n\n    let currentRound;\n    let currentStage;\n    if (game) {\n      currentStage = stages.find(s => s._id === game.currentStageId);\n      if (currentStage) {\n        currentRound = rounds.find(r => r._id === currentStage.roundId);\n      }\n    }\n\n    let notReadyPlayers = [];\n    let players = (game ? game : lobby).playerIds;\n    let bots = [];\n\n    if (!game) {\n      notReadyPlayers = lobby.queuedPlayerIds.filter(\n        p => players.indexOf(p) < 0\n      );\n    }\n\n    const playerCountFactor = treatment.factor(\"playerCount\");\n    const playerCount = playerCountFactor ? playerCountFactor.value : 0;\n    const botsFactor = treatment.factor(\"botsCount\");\n    const botsCount = botsFactor && botsFactor.value;\n    if (botsCount) {\n      players = players.slice(0, players.length - botsCount);\n      for (let i = 0; i < botsCount; i++) {\n        bots.push(Random.id());\n      }\n    }\n\n    // _.times(23, () => bots.push(Random.id()));\n\n    let statusMsg;\n    let statusIntent;\n    let statusMinimal = false;\n    let showCancelButton = false;\n    if (game && game.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"game cancelled\";\n    } else if (game && game.finishedAt) {\n      statusIntent = Intent.SUCCESS;\n      statusMinimal = true;\n      statusMsg = \"finished\";\n    } else if (lobby.timedOutAt) {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"lobby timeout\";\n    } else if (lobby.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"lobby cancelled\";\n    } else if (batch.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"batch cancelled\";\n    } else if (batch.status === \"failed\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"failed\";\n    } else if (batch.status === \"stopped\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"batch stopped\";\n    } else if (game) {\n      statusIntent = Intent.SUCCESS;\n      statusMsg = \"running\";\n      showCancelButton = true;\n    } else {\n      if (players.length === 0) {\n        showCancelButton = true;\n        if (notReadyPlayers.length === 0) {\n          statusMsg = \"empty\";\n          statusMinimal = true;\n        } else {\n          statusMsg = \"pre-lobby\";\n          statusIntent = Intent.WARNING;\n          statusMinimal = true;\n        }\n      } else {\n        showCancelButton = true;\n        statusIntent = Intent.WARNING;\n        statusMsg = \"lobby\";\n      }\n    }\n\n    return (\n      <tr>\n        <td>{lobby.index + 1}</td>\n        <td>\n          <Tag intent={statusIntent} minimal={statusMinimal}>\n            {statusMsg}\n          </Tag>\n        </td>\n        <td>{treatment.displayName()}</td>\n\n        {game && game.createdAt ? (\n          <td title={moment(game.createdAt).format()}>\n            {moment(game.createdAt).fromNow()}\n          </td>\n        ) : (\n          <td />\n        )}\n\n        {game && game.finishedAt ? (\n          <td title={moment(game.finishedAt).format()}>\n            {moment(game.finishedAt).fromNow()}\n          </td>\n        ) : (\n          <td />\n        )}\n\n        {game && game.finishedAt ? (\n          <td title={moment(game.finishedAt).format()}>-</td>\n        ) : (\n          <>\n            <td>\n              {currentRound\n                ? `Round: ${currentRound.index + 1} / ${rounds.length}`\n                : \"\"}\n              {currentStage ? ` > Stage: ${currentStage.displayName}` : \"\"}\n            </td>\n          </>\n        )}\n        <td>{playerCount}</td>\n        <td>\n          {bots.length > 0 ? (\n            <span className=\"player-group\">\n              {bots.length > 10 ? (\n                <>\n                  <span title={`${bots.length} Bots`} key=\"bots\">\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#D99E0B\" }}\n                    />{\" \"}\n                    × {bots.length}\n                  </span>\n                </>\n              ) : (\n                bots.map(p => (\n                  <span title=\"Bot\" key={p}>\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#D99E0B\" }}\n                    />\n                  </span>\n                ))\n              )}\n            </span>\n          ) : (\n            \"\"\n          )}\n\n          {notReadyPlayers.length > 0 ? (\n            <span className=\"player-group\">\n              {notReadyPlayers.length > 10 ? (\n                <>\n                  <span\n                    title={`${notReadyPlayers.length} Players in Intro Steps`}\n                    key=\"notReadyPlayers\"\n                  >\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#A7B6C2\" }}\n                    />\n                  </span>{\" \"}\n                  × {notReadyPlayers.length}\n                </>\n              ) : (\n                notReadyPlayers.map(p => (\n                  <span title=\"Player in Intro Steps\" key={p}>\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#A7B6C2\" }}\n                    />\n                  </span>\n                ))\n              )}\n            </span>\n          ) : (\n            \"\"\n          )}\n\n          {players.length > 0 ? (\n            <span className=\"player-group\">\n              {players.length > 10 ? (\n                <>\n                  <span title={`${players.length} Players`} key=\"players\">\n                    <Icon icon={IconNames.PERSON} iconSize={16} />\n                  </span>{\" \"}\n                  × {players.length}\n                </>\n              ) : (\n                players.map(p => (\n                  <span title=\"Player\" key={p}>\n                    <Icon icon={IconNames.PERSON} iconSize={16} />\n                  </span>\n                ))\n              )}\n            </span>\n          ) : (\n            \"\"\n          )}\n        </td>\n        <td>\n          {showCancelButton && (\n            <Button\n              text=\"Cancel\"\n              icon={IconNames.STOP}\n              key=\"cancel\"\n              onClick={this.handleStatusChange.bind(this, \"cancelled\")}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"832158b0ab7771a8eedfa47dbb0dc79cc8027767"}
