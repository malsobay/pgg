{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/players/server/publications.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/empirica:core/api/players/server/publications.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/players/server/publications.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/players/server/publications.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/players/server/publications.js"}},"code":"let savePlayerId;\nmodule.link(\"../../../startup/server/connections.js\", {\n  savePlayerId(v) {\n    savePlayerId = v;\n  }\n\n}, 0);\nlet Players;\nmodule.link(\"../players.js\", {\n  Players(v) {\n    Players = v;\n  }\n\n}, 1);\nMeteor.publish(\"admin-players\", function (props) {\n  if (!this.userId) {\n    return null;\n  }\n\n  if (!props || props.retired === undefined) {\n    return Players.find();\n  }\n\n  return Players.find({\n    retiredAt: {\n      $exists: Boolean(props.retired)\n    }\n  });\n});\nMeteor.publish(\"playerInfo\", function (_ref) {\n  let {\n    playerId\n  } = _ref;\n  const selector = {\n    _id: playerId,\n    retiredAt: {\n      $exists: false\n    }\n  };\n  const playerExists = Players.find(selector).count() > 0;\n\n  if (playerExists) {\n    savePlayerId(this.connection, playerId);\n  }\n\n  return Players.find(selector);\n});\nconst clients = {};\nlet hasPlayers = false;\nMeteor.startup(() => {\n  let initializing = true;\n  hasPlayers = Players.find().count() > 0; // `observeChanges` only returns after the initial `added` callbacks have run.\n  // Until then, we don't want to send a lot of `changed` messagesâ€”hence\n  // tracking the `initializing` state.\n\n  const handle = Players.find({}, {\n    fields: {\n      _id: 1\n    }\n  }).observeChanges({\n    added: id => {\n      if (initializing) {\n        return;\n      }\n\n      if (Players.find().count() > 0 && !hasPlayers) {\n        hasPlayers = true;\n\n        for (const id in clients) {\n          if (clients.hasOwnProperty(id)) {\n            const client = clients[id];\n            client.changed(\"hasPlayers\", \"id\", {\n              hasPlayers\n            });\n          }\n        }\n      }\n    },\n    removed: id => {\n      if (Players.find().count() === 0 && hasPlayers) {\n        hasPlayers = false;\n\n        for (const id in clients) {\n          if (clients.hasOwnProperty(id)) {\n            const client = clients[id];\n            client.changed(\"hasPlayers\", \"id\", {\n              hasPlayers\n            });\n          }\n        }\n      }\n    }\n  });\n  initializing = false;\n});\nMeteor.publish(null, function () {\n  clients[this.connection.id] = this;\n  this.added(\"hasPlayers\", \"id\", {\n    hasPlayers\n  });\n  this.ready();\n  this.onStop(() => delete clients[this.connection.id]);\n});","map":{"version":3,"sources":["packages/empirica:core/api/players/server/publications.js"],"names":["savePlayerId","module","link","v","Players","Meteor","publish","props","userId","retired","undefined","find","retiredAt","$exists","Boolean","playerId","selector","_id","playerExists","count","connection","clients","hasPlayers","startup","initializing","handle","fields","observeChanges","added","id","hasOwnProperty","client","changed","removed","ready","onStop"],"mappings":"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","sourcesContent":["import { savePlayerId } from \"../../../startup/server/connections.js\";\nimport { Players } from \"../players.js\";\n\nMeteor.publish(\"admin-players\", function(props) {\n  if (!this.userId) {\n    return null;\n  }\n\n  if (!props || props.retired === undefined) {\n    return Players.find();\n  }\n\n  return Players.find({ retiredAt: { $exists: Boolean(props.retired) } });\n});\n\nMeteor.publish(\"playerInfo\", function({ playerId }) {\n  const selector = {\n    _id: playerId,\n    retiredAt: { $exists: false }\n  };\n  const playerExists = Players.find(selector).count() > 0;\n\n  if (playerExists) {\n    savePlayerId(this.connection, playerId);\n  }\n  return Players.find(selector);\n});\n\nconst clients = {};\nlet hasPlayers = false;\n\nMeteor.startup(() => {\n  let initializing = true;\n  hasPlayers = Players.find().count() > 0;\n  // `observeChanges` only returns after the initial `added` callbacks have run.\n  // Until then, we don't want to send a lot of `changed` messagesâ€”hence\n  // tracking the `initializing` state.\n  const handle = Players.find({}, { fields: { _id: 1 } }).observeChanges({\n    added: id => {\n      if (initializing) {\n        return;\n      }\n      if (Players.find().count() > 0 && !hasPlayers) {\n        hasPlayers = true;\n        for (const id in clients) {\n          if (clients.hasOwnProperty(id)) {\n            const client = clients[id];\n            client.changed(\"hasPlayers\", \"id\", { hasPlayers });\n          }\n        }\n      }\n    },\n\n    removed: id => {\n      if (Players.find().count() === 0 && hasPlayers) {\n        hasPlayers = false;\n        for (const id in clients) {\n          if (clients.hasOwnProperty(id)) {\n            const client = clients[id];\n            client.changed(\"hasPlayers\", \"id\", { hasPlayers });\n          }\n        }\n      }\n    }\n  });\n\n  initializing = false;\n});\n\nMeteor.publish(null, function() {\n  clients[this.connection.id] = this;\n  this.added(\"hasPlayers\", \"id\", { hasPlayers });\n  this.ready();\n  this.onStop(() => delete clients[this.connection.id]);\n});\n"]},"sourceType":"module","hash":"dd99370b64ea4414f9911b26c3b6713989f6cc63"}
