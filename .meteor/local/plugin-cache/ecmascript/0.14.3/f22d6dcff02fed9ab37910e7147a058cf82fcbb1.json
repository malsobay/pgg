{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/startup/server/cron.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/empirica:core/startup/server/cron.js","filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/startup/server/cron.js","passPerPreset":false,"envName":"production","cwd":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","root":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/startup/server/cron.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/startup/server/cron.js"}},"code":"let SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet colors;\nmodule.link(\"colors/safe\", {\n  default(v) {\n    colors = v;\n  }\n\n}, 1);\nconst tasks = {};\nconst Cron = {\n  add(options) {\n    new SimpleSchema({\n      name: {\n        type: String\n      },\n      interval: {\n        type: SimpleSchema.Integer\n      },\n      // In ms, shouldn't be less than 1000ms\n      task: {\n        type: Function\n      }\n    }).validate(options);\n\n    if (tasks[options.name]) {\n      throw \"Cron task with name \".concat(options.name, \" already exists\");\n    }\n\n    tasks[options.name] = options;\n  }\n\n};\nconst logCron = Meteor.cron && Meteor.cron.log || false;\n\nconst cronLog = msg => logCron && console.info(msg);\n\nconst cronLogErr = msg => logCron && console.error(msg);\n\nMeteor.startup(() => {\n  for (const name in tasks) {\n    if (!tasks.hasOwnProperty(name)) {\n      continue;\n    }\n\n    const task = tasks[name];\n    Meteor.defer(() => {\n      const taskName = colors.bold(task.name);\n      const startLog = \"\".concat(colors.green(\"▶\"), \" \").concat(taskName);\n\n      const doneLog = (took, wait) => {\n        return \"\".concat(colors.red(\"◼\"), \" \").concat(taskName, \": Done in \").concat(took, \"ms. \") + \"Waiting for \".concat(wait < 0 ? 0 : wait, \"ms.\");\n      };\n\n      const log = {\n        info(msg) {\n          cronLog(\"\".concat(colors.dim(\"i\"), \" \").concat(taskName, \": \").concat(msg, \" \"));\n        },\n\n        error(msg) {\n          cronLog(\"\".concat(colors.red(\"✘\"), \" \").concat(colors.red(taskName + \":\"), \" \").concat(msg, \" \"));\n        }\n\n      };\n\n      let run = () => {\n        cronLog(startLog);\n        const start = new Date();\n        task.task(log);\n        const took = new Date() - start;\n        const wait = task.interval - took;\n        cronLog(doneLog(took, wait));\n\n        if (wait <= 0) {\n          Meteor.defer(run);\n        } else {\n          Meteor.setTimeout(run, wait);\n        }\n      };\n\n      run();\n    });\n  }\n});\nmodule.exportDefault(Cron);","map":{"version":3,"sources":["packages/empirica:core/startup/server/cron.js"],"names":["SimpleSchema","module","link","default","v","colors","tasks","Cron","add","options","name","type","String","interval","Integer","task","Function","validate","logCron","Meteor","cron","log","cronLog","msg","console","info","cronLogErr","error","startup","hasOwnProperty","defer","taskName","bold","startLog","green","doneLog","took","wait","red","dim","run","start","Date","setTimeout","exportDefault"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport colors from \"colors/safe\";\n\nconst tasks = {};\n\nconst Cron = {\n  add(options) {\n    new SimpleSchema({\n      name: { type: String },\n      interval: { type: SimpleSchema.Integer }, // In ms, shouldn't be less than 1000ms\n      task: { type: Function }\n    }).validate(options);\n\n    if (tasks[options.name]) {\n      throw `Cron task with name ${options.name} already exists`;\n    }\n\n    tasks[options.name] = options;\n  }\n};\n\nconst logCron = (Meteor.cron && Meteor.cron.log) || false;\nconst cronLog = msg => logCron && console.info(msg);\nconst cronLogErr = msg => logCron && console.error(msg);\n\nMeteor.startup(() => {\n  for (const name in tasks) {\n    if (!tasks.hasOwnProperty(name)) {\n      continue;\n    }\n    const task = tasks[name];\n\n    Meteor.defer(() => {\n      const taskName = colors.bold(task.name);\n      const startLog = `${colors.green(\"▶\")} ${taskName}`;\n      const doneLog = (took, wait) => {\n        return (\n          `${colors.red(\"◼\")} ${taskName}: Done in ${took}ms. ` +\n          `Waiting for ${wait < 0 ? 0 : wait}ms.`\n        );\n      };\n      const log = {\n        info(msg) {\n          cronLog(`${colors.dim(\"i\")} ${taskName}: ${msg} `);\n        },\n        error(msg) {\n          cronLog(`${colors.red(\"✘\")} ${colors.red(taskName + \":\")} ${msg} `);\n        }\n      };\n      let run = () => {\n        cronLog(startLog);\n        const start = new Date();\n        task.task(log);\n        const took = new Date() - start;\n        const wait = task.interval - took;\n        cronLog(doneLog(took, wait));\n        if (wait <= 0) {\n          Meteor.defer(run);\n        } else {\n          Meteor.setTimeout(run, wait);\n        }\n      };\n      run();\n    });\n  }\n});\n\nexport default Cron;\n"]},"sourceType":"module","hash":"f22d6dcff02fed9ab37910e7147a058cf82fcbb1"}
