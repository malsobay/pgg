{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminFactors.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminFactors.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminFactors.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminFactors.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminFactors.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return AdminFactors;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Link;\nmodule.link(\"react-router-dom\", {\n  Link: function (v) {\n    Link = v;\n  }\n}, 1);\nvar Button, ButtonGroup, Card, Classes, Elevation, HTMLTable, Icon, Position, Tooltip, Intent;\nmodule.link(\"@blueprintjs/core\", {\n  Button: function (v) {\n    Button = v;\n  },\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  },\n  Card: function (v) {\n    Card = v;\n  },\n  Classes: function (v) {\n    Classes = v;\n  },\n  Elevation: function (v) {\n    Elevation = v;\n  },\n  HTMLTable: function (v) {\n    HTMLTable = v;\n  },\n  Icon: function (v) {\n    Icon = v;\n  },\n  Position: function (v) {\n    Position = v;\n  },\n  Tooltip: function (v) {\n    Tooltip = v;\n  },\n  Intent: function (v) {\n    Intent = v;\n  }\n}, 2);\nvar IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames: function (v) {\n    IconNames = v;\n  }\n}, 3);\nvar FactorTypes;\nmodule.link(\"../../../api/factor-types/factor-types.js\", {\n  FactorTypes: function (v) {\n    FactorTypes = v;\n  }\n}, 4);\nvar updateFactorType;\nmodule.link(\"../../../api/factor-types/methods.js\", {\n  updateFactorType: function (v) {\n    updateFactorType = v;\n  }\n}, 5);\nvar AdminFactor;\nmodule.link(\"./AdminFactor.jsx\", {\n  \"default\": function (v) {\n    AdminFactor = v;\n  }\n}, 6);\nvar AdminNewFactor;\nmodule.link(\"./AdminNewFactor.jsx\", {\n  \"default\": function (v) {\n    AdminNewFactor = v;\n  }\n}, 7);\nvar AdminNewFactorType;\nmodule.link(\"./AdminNewFactorType.jsx\", {\n  \"default\": function (v) {\n    AdminNewFactorType = v;\n  }\n}, 8);\nvar Loading;\nmodule.link(\"../Loading.jsx\", {\n  \"default\": function (v) {\n    Loading = v;\n  }\n}, 9);\nvar AdminPageHeader;\nmodule.link(\"./AdminHeading.jsx\", {\n  AdminPageHeader: function (v) {\n    AdminPageHeader = v;\n  }\n}, 10);\n\nvar AdminFactors = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AdminFactors, _React$Component);\n\n  var _super = _createSuper(AdminFactors);\n\n  function AdminFactors() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n\n    _this.handleArchive = function (_id) {\n      var archived = _this.props.archived;\n      updateFactorType.call({\n        _id: _id,\n        archived: !archived\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = AdminFactors.prototype;\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          archived = _this$props.archived,\n          factors = _this$props.factors,\n          factorTypes = _this$props.factorTypes;\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Loading, null);\n      }\n\n      factorTypes.map(function (t) {\n        t.factors = factors.filter(function (f) {\n          return f.factorTypeId === t._id;\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"factors\"\n      }, /*#__PURE__*/React.createElement(AdminPageHeader, {\n        icon: IconNames.PROPERTY\n      }, archived ? \"Archived Factors\" : \"Factors\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"factors-list\"\n      }, archived && factorTypes.length === 0 ? /*#__PURE__*/React.createElement(\"p\", null, \"No archived Factors\") : null, factorTypes.map(function (t) {\n        var hasNewForm = t.type !== \"Boolean\";\n        var requiredType = FactorTypes.requiredTypes.includes(t.name);\n        return /*#__PURE__*/React.createElement(Card, {\n          className: \"factor\",\n          key: t._id,\n          elevation: Elevation.TWO\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"factor-actions\"\n        }, /*#__PURE__*/React.createElement(ButtonGroup, null, requiredType ? null : /*#__PURE__*/React.createElement(Tooltip, {\n          content: archived ? \"\" : /*#__PURE__*/React.createElement(React.Fragment, null, \"Archive \", /*#__PURE__*/React.createElement(\"code\", null, t.name)),\n          position: Position.TOP\n        }, /*#__PURE__*/React.createElement(Button, {\n          text: archived ? \"Unarchive \" + t.name : \"\",\n          intent: archived ? Intent.SUCCESS : null,\n          icon: IconNames.BOX,\n          onClick: _this2.handleArchive.bind(_this2, t._id)\n        })), archived || !hasNewForm ? \"\" : /*#__PURE__*/React.createElement(Tooltip, {\n          content: /*#__PURE__*/React.createElement(React.Fragment, null, \"New \", /*#__PURE__*/React.createElement(\"code\", null, t.name), \" Factor Value\"),\n          position: Position.TOP\n        }, /*#__PURE__*/React.createElement(Button, {\n          icon: IconNames.PLUS,\n          onClick: function () {\n            var _this2$setState;\n\n            return _this2.setState((_this2$setState = {}, _this2$setState[\"newOpen\" + t._id] = true, _this2$setState));\n          }\n        }))), archived || !hasNewForm ? \"\" : /*#__PURE__*/React.createElement(AdminNewFactor, {\n          type: t,\n          onClose: function () {\n            var _this2$setState2;\n\n            return _this2.setState((_this2$setState2 = {}, _this2$setState2[\"newOpen\" + t._id] = false, _this2$setState2));\n          },\n          isOpen: _this2.state[\"newOpen\" + t._id]\n        })), /*#__PURE__*/React.createElement(\"h4\", {\n          className: Classes.MONOSPACE_TEXT\n        }, t.name), t.description ? /*#__PURE__*/React.createElement(\"p\", {\n          className: Classes.TEXT_DISABLED\n        }, t.description) : \"\", archived ? null : t.factors.length > 0 ? /*#__PURE__*/React.createElement(HTMLTable, {\n          striped: true,\n          condensed: true\n        }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"Name\"), /*#__PURE__*/React.createElement(\"th\", null, \"Value\"), /*#__PURE__*/React.createElement(\"th\", null))), /*#__PURE__*/React.createElement(\"tbody\", null, t.factors.map(function (factor) {\n          return /*#__PURE__*/React.createElement(AdminFactor, {\n            key: factor._id,\n            factor: factor,\n            archived: archived\n          });\n        }))) : /*#__PURE__*/React.createElement(\"p\", {\n          className: Classes.TEXT_MUTED\n        }, \"No \", /*#__PURE__*/React.createElement(\"code\", null, t.name), \" factors yet.\"));\n      })), archived ? /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/factors\"\n      }, \"Back to Active Factors\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Button, {\n        text: \"New Factor\",\n        onClick: function () {\n          return _this2.setState({\n            newFactorIsOpen: true\n          });\n        }\n      }), /*#__PURE__*/React.createElement(AdminNewFactorType, {\n        factors: factors,\n        factorTypes: factorTypes,\n        onClose: function () {\n          return _this2.setState({\n            newFactorIsOpen: false\n          });\n        },\n        isOpen: this.state.newFactorIsOpen\n      }), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Link, {\n        to: \"/admin/factors/archived\"\n      }, \"View Archived Factors\"))));\n    }\n\n    return render;\n  }();\n\n  return AdminFactors;\n}(React.Component);","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminFactors.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","AdminFactors","React","Link","Button","ButtonGroup","Card","Classes","Elevation","HTMLTable","Icon","Position","Tooltip","Intent","IconNames","FactorTypes","updateFactorType","AdminFactor","AdminNewFactor","AdminNewFactorType","Loading","AdminPageHeader","state","handleArchive","_id","archived","props","call","render","loading","factors","factorTypes","map","t","filter","f","factorTypeId","PROPERTY","length","hasNewForm","type","requiredType","requiredTypes","includes","name","TWO","TOP","SUCCESS","BOX","bind","PLUS","setState","MONOSPACE_TEXT","description","TEXT_DISABLED","factor","TEXT_MUTED","newFactorIsOpen","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  Classes,\n  Elevation,\n  HTMLTable,\n  Icon,\n  Position,\n  Tooltip,\n  Intent\n} from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\nimport { FactorTypes } from \"../../../api/factor-types/factor-types.js\";\nimport { updateFactorType } from \"../../../api/factor-types/methods.js\";\n\nimport AdminFactor from \"./AdminFactor.jsx\";\nimport AdminNewFactor from \"./AdminNewFactor.jsx\";\nimport AdminNewFactorType from \"./AdminNewFactorType.jsx\";\nimport Loading from \"../Loading.jsx\";\nimport { AdminPageHeader } from \"./AdminHeading.jsx\";\n\nexport default class AdminFactors extends React.Component {\n  state = {};\n\n  handleArchive = _id => {\n    const { archived } = this.props;\n    updateFactorType.call({ _id, archived: !archived });\n  };\n\n  render() {\n    const { loading, archived, factors, factorTypes } = this.props;\n    if (loading) {\n      return <Loading />;\n    }\n\n    factorTypes.map(t => {\n      t.factors = factors.filter(f => f.factorTypeId === t._id);\n    });\n\n    return (\n      <div className=\"factors\">\n        <AdminPageHeader icon={IconNames.PROPERTY}>\n          {archived ? \"Archived Factors\" : \"Factors\"}\n        </AdminPageHeader>\n\n        <div className=\"factors-list\">\n          {archived && factorTypes.length === 0 ? (\n            <p>No archived Factors</p>\n          ) : null}\n          {factorTypes.map(t => {\n            const hasNewForm = t.type !== \"Boolean\";\n\n            const requiredType = FactorTypes.requiredTypes.includes(t.name);\n\n            return (\n              <Card className=\"factor\" key={t._id} elevation={Elevation.TWO}>\n                <div className=\"factor-actions\">\n                  <ButtonGroup>\n                    {requiredType ? null : (\n                      <Tooltip\n                        content={\n                          archived ? (\n                            \"\"\n                          ) : (\n                            <>\n                              Archive <code>{t.name}</code>\n                            </>\n                          )\n                        }\n                        position={Position.TOP}\n                      >\n                        <Button\n                          text={archived ? `Unarchive ${t.name}` : \"\"}\n                          intent={archived ? Intent.SUCCESS : null}\n                          icon={IconNames.BOX}\n                          onClick={this.handleArchive.bind(this, t._id)}\n                        />\n                      </Tooltip>\n                    )}\n\n                    {archived || !hasNewForm ? (\n                      \"\"\n                    ) : (\n                      <Tooltip\n                        content={\n                          <>\n                            New <code>{t.name}</code> Factor Value\n                          </>\n                        }\n                        position={Position.TOP}\n                      >\n                        <Button\n                          icon={IconNames.PLUS}\n                          onClick={() =>\n                            this.setState({ [`newOpen${t._id}`]: true })\n                          }\n                        />\n                      </Tooltip>\n                    )}\n                  </ButtonGroup>\n\n                  {archived || !hasNewForm ? (\n                    \"\"\n                  ) : (\n                    <AdminNewFactor\n                      type={t}\n                      onClose={() =>\n                        this.setState({ [`newOpen${t._id}`]: false })\n                      }\n                      isOpen={this.state[`newOpen${t._id}`]}\n                    />\n                  )}\n                </div>\n\n                <h4 className={Classes.MONOSPACE_TEXT}>{t.name}</h4>\n\n                {t.description ? (\n                  <p className={Classes.TEXT_DISABLED}>{t.description}</p>\n                ) : (\n                  \"\"\n                )}\n\n                {archived ? null : t.factors.length > 0 ? (\n                  <HTMLTable striped condensed>\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Value</th>\n                        <th />\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {t.factors.map(factor => (\n                        <AdminFactor\n                          key={factor._id}\n                          factor={factor}\n                          archived={archived}\n                        />\n                      ))}\n                    </tbody>\n                  </HTMLTable>\n                ) : (\n                  <p className={Classes.TEXT_MUTED}>\n                    No <code>{t.name}</code> factors yet.\n                  </p>\n                )}\n              </Card>\n            );\n          })}\n        </div>\n\n        {archived ? (\n          <p>\n            <br />\n            <Link to=\"/admin/factors\">Back to Active Factors</Link>\n          </p>\n        ) : (\n          <>\n            <br />\n\n            <Button\n              text=\"New Factor\"\n              onClick={() => this.setState({ newFactorIsOpen: true })}\n            />\n\n            <AdminNewFactorType\n              factors={factors}\n              factorTypes={factorTypes}\n              onClose={() => this.setState({ newFactorIsOpen: false })}\n              isOpen={this.state.newFactorIsOpen}\n            />\n\n            <p>\n              <br />\n              <Link to=\"/admin/factors/archived\">View Archived Factors</Link>\n            </p>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"90c7b3011fa9a8a4524fb07b3f92e8ff3a251a5c"}
