{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/lobby-configs/lobby-configs.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/api/lobby-configs/lobby-configs.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/lobby-configs/lobby-configs.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/lobby-configs/lobby-configs.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/lobby-configs/lobby-configs.js"}},"code":"module.export({\n  LobbyConfigs: function () {\n    return LobbyConfigs;\n  }\n});\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar inflection;\nmodule.link(\"inflection\", {\n  \"default\": function (v) {\n    inflection = v;\n  }\n}, 1);\nvar HasManyByRef, TimestampSchema, ArchivedSchema;\nmodule.link(\"../default-schemas\", {\n  HasManyByRef: function (v) {\n    HasManyByRef = v;\n  },\n  TimestampSchema: function (v) {\n    TimestampSchema = v;\n  },\n  ArchivedSchema: function (v) {\n    ArchivedSchema = v;\n  }\n}, 2);\nvar LobbyConfigs = new Mongo.Collection(\"lobby_configs\");\nLobbyConfigs.helpers({\n  displayName: function () {\n    if (this.name) {\n      return this.name;\n    }\n\n    var type = inflection.titleize(this.timeoutType);\n    var base = type + \": \" + this.timeoutInSeconds + \"s\";\n    var details;\n\n    switch (this.timeoutType) {\n      case \"lobby\":\n        details = \"\\u2192 \" + inflection.titleize(this.timeoutStrategy);\n\n        if (this.timeoutStrategy === \"bots\") {\n          details += \"(\" + this.timeoutBots.join(\",\") + \")\";\n        }\n\n        break;\n\n      case \"individual\":\n        details = \"\\u2A09 \" + (this.extendCount + 1);\n        break;\n\n      default:\n        console.error(\"unknown timeoutType: \" + this.timeoutType);\n        return base;\n    }\n\n    return base + \" \" + details;\n  }\n}); // There are 2 exclusive timeout types:\n// - lobby: the timeout start when the first player reaches the lobby and runs\n//   out for all the players whether they have even reached the lobby or not.\n// - individual: the timeout is started for each player as they reach the room.\n//   Some players might time out before all players are in the lobby, they might\n//   continue waiting for another timeout period. They might also leave the game\n//   and a new player can replace them. The lobby itself never times out.\n\nLobbyConfigs.timeoutTypes = [\"lobby\", \"individual\"]; // The timeoutStrategy determines what to do in case people are waiting\n// in the lobby for longer than the timeoutInSeconds duration.\n// Only for \"lobby\" timeoutType.\n// Available strategies:\n// - ignore: start the game anyway\n// - fail: take the player to the exit survey\n// - bots: fill the missing players slots with bots from timeoutBots\n\nLobbyConfigs.timeoutStrategies = [\"fail\", \"ignore\"]; // DEACTIVATING bots until bots implemented.\n// LobbyConfigs.timeoutStrategies = [\"fail\", \"ignore\", \"bots\"];\n// One year, that's a lot, just need to block from something too wild like 10M\n// years. We don't actually care, Inf would be fine...\n\nLobbyConfigs.maxTimeoutInSeconds = 365 * 24 * 60 * 60; // defaultTimeoutInSeconds is simply used as the default value in the Lobby\n// Configuration creation form.\n\nLobbyConfigs.defaultTimeoutInSeconds = 5 * 60;\nLobbyConfigs.schema = new SimpleSchema({\n  // Optional experimenter given name for the treatment\n  name: {\n    type: String,\n    max: 256,\n    optional: true,\n    custom: function () {\n      if (this.isSet && LobbyConfigs.find({\n        name: this.value\n      }).count() > 0) {\n        return \"notUnique\";\n      }\n    } // regEx: /^[a-zA-Z0-9_]+$/\n\n  },\n  // The timeoutType fundamentally changes the behavior of the lobby. See\n  // LobbyConfigs.timeoutTypes above for details.\n  timeoutType: {\n    type: String,\n    allowedValues: LobbyConfigs.timeoutTypes\n  },\n  // Number of seconds for one player to wait in lobby before timeoutStrategy\n  // is applied. This timeout applies only to the waiting for the game to start.\n  // It is either a \"Lobby Timeout\", or an \"Individual Timeout\", depending on\n  // the timeoutType value.\n  timeoutInSeconds: {\n    type: SimpleSchema.Integer,\n    max: LobbyConfigs.maxTimeoutInSeconds,\n    // It would be difficult to manage a timer that is less than 5s, and it\n    // would be  weird. 5s is already weird...\n    min: 5\n  },\n  // The timeoutStrategy determines what to do in case people are waiting\n  // in the lobby for longer than the timeoutInSeconds duration.\n  // Only for \"lobby\" timeoutType.\n  // See LobbyConfigs.timeoutStrategies for details.\n  timeoutStrategy: {\n    type: String,\n    allowedValues: LobbyConfigs.timeoutStrategies,\n    defaultValue: \"fail\",\n    optional: true\n  },\n  // Names of bot to use if timed out and still not enough player.\n  // Only for \"lobby\" timeoutType and timeoutStrategy is \"bots\".\n  timeoutBots: {\n    type: Array,\n    // Should add custom validation to verify the timeoutStrategy and make\n    // required if \"bots\" and should verify bot with name exists.\n    optional: true\n  },\n  \"timeoutBots.$\": {\n    type: String\n  },\n  // Number of times to allow the user to extend their wait time by\n  // timeoutInSeconds.\n  // If set to 0, they are never asked to retry.\n  // Only for \"individual\" timeoutType.\n  extendCount: {\n    type: SimpleSchema.Integer,\n    // 1 millard times, that should be a sufficient upper bound\n    max: 1000000000,\n    min: 0,\n    optional: true\n  }\n});\nLobbyConfigs.schema.extend(TimestampSchema);\nLobbyConfigs.schema.extend(ArchivedSchema);\nLobbyConfigs.schema.extend(HasManyByRef(\"Batches\"));\nLobbyConfigs.schema.extend(HasManyByRef(\"GameLobbies\"));\nLobbyConfigs.attachSchema(LobbyConfigs.schema);","map":{"version":3,"sources":["packages/empirica:core/api/lobby-configs/lobby-configs.js"],"names":["module","export","LobbyConfigs","SimpleSchema","link","v","inflection","HasManyByRef","TimestampSchema","ArchivedSchema","Mongo","Collection","helpers","displayName","name","type","titleize","timeoutType","base","timeoutInSeconds","details","timeoutStrategy","timeoutBots","join","extendCount","console","error","timeoutTypes","timeoutStrategies","maxTimeoutInSeconds","defaultTimeoutInSeconds","schema","String","max","optional","custom","isSet","find","value","count","allowedValues","Integer","min","defaultValue","Array","extend","attachSchema"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport inflection from \"inflection\";\n\nimport {\n  HasManyByRef,\n  TimestampSchema,\n  ArchivedSchema\n} from \"../default-schemas\";\n\nexport const LobbyConfigs = new Mongo.Collection(\"lobby_configs\");\n\nLobbyConfigs.helpers({\n  displayName() {\n    if (this.name) {\n      return this.name;\n    }\n\n    const type = inflection.titleize(this.timeoutType);\n    const base = `${type}: ${this.timeoutInSeconds}s`;\n    let details;\n    switch (this.timeoutType) {\n      case \"lobby\":\n        details = `→ ${inflection.titleize(this.timeoutStrategy)}`;\n        if (this.timeoutStrategy === \"bots\") {\n          details += `(${this.timeoutBots.join(\",\")})`;\n        }\n        break;\n      case \"individual\":\n        details = `⨉ ${this.extendCount + 1}`;\n        break;\n      default:\n        console.error(`unknown timeoutType: ${this.timeoutType}`);\n        return base;\n    }\n\n    return `${base} ${details}`;\n  }\n});\n\n// There are 2 exclusive timeout types:\n// - lobby: the timeout start when the first player reaches the lobby and runs\n//   out for all the players whether they have even reached the lobby or not.\n// - individual: the timeout is started for each player as they reach the room.\n//   Some players might time out before all players are in the lobby, they might\n//   continue waiting for another timeout period. They might also leave the game\n//   and a new player can replace them. The lobby itself never times out.\nLobbyConfigs.timeoutTypes = [\"lobby\", \"individual\"];\n\n// The timeoutStrategy determines what to do in case people are waiting\n// in the lobby for longer than the timeoutInSeconds duration.\n// Only for \"lobby\" timeoutType.\n// Available strategies:\n// - ignore: start the game anyway\n// - fail: take the player to the exit survey\n// - bots: fill the missing players slots with bots from timeoutBots\nLobbyConfigs.timeoutStrategies = [\"fail\", \"ignore\"];\n// DEACTIVATING bots until bots implemented.\n// LobbyConfigs.timeoutStrategies = [\"fail\", \"ignore\", \"bots\"];\n\n// One year, that's a lot, just need to block from something too wild like 10M\n// years. We don't actually care, Inf would be fine...\nLobbyConfigs.maxTimeoutInSeconds = 365 * 24 * 60 * 60;\n\n// defaultTimeoutInSeconds is simply used as the default value in the Lobby\n// Configuration creation form.\nLobbyConfigs.defaultTimeoutInSeconds = 5 * 60;\n\nLobbyConfigs.schema = new SimpleSchema({\n  // Optional experimenter given name for the treatment\n  name: {\n    type: String,\n    max: 256,\n    optional: true,\n    custom() {\n      if (this.isSet && LobbyConfigs.find({ name: this.value }).count() > 0) {\n        return \"notUnique\";\n      }\n    }\n    // regEx: /^[a-zA-Z0-9_]+$/\n  },\n\n  // The timeoutType fundamentally changes the behavior of the lobby. See\n  // LobbyConfigs.timeoutTypes above for details.\n  timeoutType: {\n    type: String,\n    allowedValues: LobbyConfigs.timeoutTypes\n  },\n\n  // Number of seconds for one player to wait in lobby before timeoutStrategy\n  // is applied. This timeout applies only to the waiting for the game to start.\n  // It is either a \"Lobby Timeout\", or an \"Individual Timeout\", depending on\n  // the timeoutType value.\n  timeoutInSeconds: {\n    type: SimpleSchema.Integer,\n    max: LobbyConfigs.maxTimeoutInSeconds,\n    // It would be difficult to manage a timer that is less than 5s, and it\n    // would be  weird. 5s is already weird...\n    min: 5\n  },\n\n  // The timeoutStrategy determines what to do in case people are waiting\n  // in the lobby for longer than the timeoutInSeconds duration.\n  // Only for \"lobby\" timeoutType.\n  // See LobbyConfigs.timeoutStrategies for details.\n  timeoutStrategy: {\n    type: String,\n    allowedValues: LobbyConfigs.timeoutStrategies,\n    defaultValue: \"fail\",\n    optional: true\n  },\n\n  // Names of bot to use if timed out and still not enough player.\n  // Only for \"lobby\" timeoutType and timeoutStrategy is \"bots\".\n  timeoutBots: {\n    type: Array,\n    // Should add custom validation to verify the timeoutStrategy and make\n    // required if \"bots\" and should verify bot with name exists.\n    optional: true\n  },\n  \"timeoutBots.$\": {\n    type: String\n  },\n\n  // Number of times to allow the user to extend their wait time by\n  // timeoutInSeconds.\n  // If set to 0, they are never asked to retry.\n  // Only for \"individual\" timeoutType.\n  extendCount: {\n    type: SimpleSchema.Integer,\n    // 1 millard times, that should be a sufficient upper bound\n    max: 1000000000,\n    min: 0,\n    optional: true\n  }\n});\n\nLobbyConfigs.schema.extend(TimestampSchema);\nLobbyConfigs.schema.extend(ArchivedSchema);\nLobbyConfigs.schema.extend(HasManyByRef(\"Batches\"));\nLobbyConfigs.schema.extend(HasManyByRef(\"GameLobbies\"));\nLobbyConfigs.attachSchema(LobbyConfigs.schema);\n"]},"sourceType":"module","hash":"dd7f85bf21552683f9f93b6c9e6a1b625bb1b964"}
