{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/counters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/lib/counters.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/counters.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/lib/counters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/lib/counters.js"}},"code":"module.export({\n  Counter: () => Counter\n});\n// Named Atomic counters\n//\n// Example:\n//    Counter.inc(\"something\") // => 1\n//    Counter.inc(\"something\") // => 2\n//    Counter.inc(\"something\", 8) // => 10\n//    Counter.inc(\"something\", -5) // => 5\n//    Counter.set(\"something\", 42) // => 42\nlet incset;\n\nif (Meteor.isServer) {\n  const raw = new Mongo.Collection(\"counters\").rawCollection();\n  findAndModify = Meteor.wrapAsync(raw.findAndModify, raw);\n\n  incset = op => function (name) {\n    let amount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const res = findAndModify({\n      _id: name\n    }, // query\n    null, // sort\n    {\n      [\"$\".concat(op)]: {\n        value: amount\n      }\n    }, // update\n    {\n      new: true,\n      upsert: true\n    } // options\n    );\n    return res.value && res.value.value;\n  };\n} else {\n  incset = op => () => {};\n}\n\nconst Counter = {\n  inc: incset(\"inc\"),\n  set: incset(\"set\")\n};","map":{"version":3,"sources":["packages/empirica:core/lib/counters.js"],"names":["module","export","Counter","incset","Meteor","isServer","raw","Mongo","Collection","rawCollection","findAndModify","wrapAsync","op","name","amount","res","_id","value","new","upsert","inc","set"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIA;AAAb,CAAd;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIC,MAAJ;;AACA,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,QAAMC,GAAG,GAAG,IAAIC,KAAK,CAACC,UAAV,CAAqB,UAArB,EAAiCC,aAAjC,EAAZ;AACAC,EAAAA,aAAa,GAAGN,MAAM,CAACO,SAAP,CAAiBL,GAAG,CAACI,aAArB,EAAoCJ,GAApC,CAAhB;;AAEAH,EAAAA,MAAM,GAAGS,EAAE,IAAI,UAACC,IAAD,EAAsB;AAAA,QAAfC,MAAe,uEAAN,CAAM;AACnC,UAAMC,GAAG,GAAGL,aAAa,CACvB;AAAEM,MAAAA,GAAG,EAAEH;AAAP,KADuB,EACR;AACf,QAFuB,EAEjB;AACN;AAAE,kBAAKD,EAAL,IAAY;AAAEK,QAAAA,KAAK,EAAEH;AAAT;AAAd,KAHuB,EAGY;AACnC;AAAEI,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAJuB,CAIK;AAJL,KAAzB;AAMA,WAAOJ,GAAG,CAACE,KAAJ,IAAaF,GAAG,CAACE,KAAJ,CAAUA,KAA9B;AACD,GARD;AASD,CAbD,MAaO;AACLd,EAAAA,MAAM,GAAGS,EAAE,IAAI,MAAM,CAAE,CAAvB;AACD;;AAEM,MAAMV,OAAO,GAAG;AACrBkB,EAAAA,GAAG,EAAEjB,MAAM,CAAC,KAAD,CADU;AAErBkB,EAAAA,GAAG,EAAElB,MAAM,CAAC,KAAD;AAFU,CAAhB","sourcesContent":["// Named Atomic counters\n//\n// Example:\n//    Counter.inc(\"something\") // => 1\n//    Counter.inc(\"something\") // => 2\n//    Counter.inc(\"something\", 8) // => 10\n//    Counter.inc(\"something\", -5) // => 5\n//    Counter.set(\"something\", 42) // => 42\n\nlet incset;\nif (Meteor.isServer) {\n  const raw = new Mongo.Collection(\"counters\").rawCollection();\n  findAndModify = Meteor.wrapAsync(raw.findAndModify, raw);\n\n  incset = op => (name, amount = 1) => {\n    const res = findAndModify(\n      { _id: name }, // query\n      null, // sort\n      { [`$${op}`]: { value: amount } }, // update\n      { new: true, upsert: true } // options\n    );\n    return res.value && res.value.value;\n  };\n} else {\n  incset = op => () => {};\n}\n\nexport const Counter = {\n  inc: incset(\"inc\"),\n  set: incset(\"set\")\n};\n"]},"sourceType":"module","hash":"eb4d2c45e2945f3fd4d1455b2c63088140624129"}
