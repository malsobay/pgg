{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/games/augment.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/empirica:core/api/games/augment.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/games/augment.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/games/augment.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/games/augment.js"}},"code":"module.export({\n  augmentGameObject: () => augmentGameObject\n});\nlet Stages;\nmodule.link(\"../stages/stages\", {\n  Stages(v) {\n    Stages = v;\n  }\n\n}, 0);\nlet augmentPlayerStageRound;\nmodule.link(\"../player-stages/augment\", {\n  augmentPlayerStageRound(v) {\n    augmentPlayerStageRound = v;\n  }\n\n}, 1);\nlet Rounds;\nmodule.link(\"../rounds/rounds\", {\n  Rounds(v) {\n    Rounds = v;\n  }\n\n}, 2);\nlet Players;\nmodule.link(\"../players/players\", {\n  Players(v) {\n    Players = v;\n  }\n\n}, 3);\n\nconst augmentGameObject = (_ref) => {\n  let {\n    game,\n    treatment,\n    round = undefined,\n    stage = undefined,\n    firstRoundId = undefined,\n    currentStageId = undefined\n  } = _ref;\n  let gameTreatment = null,\n      gamePlayers = null,\n      gameRounds = null,\n      gameStages = null;\n  Object.defineProperties(game, {\n    treatment: {\n      get() {\n        if (!gameTreatment) {\n          gameTreatment = treatment.factorsObject();\n        }\n\n        return gameTreatment;\n      }\n\n    },\n    players: {\n      get() {\n        if (!gamePlayers) {\n          gamePlayers = Players.find({\n            _id: {\n              $in: game.playerIds\n            }\n          }).fetch();\n\n          if (firstRoundId) {\n            round = Rounds.findOne(firstRoundId);\n            stage = round.stages.find(s => s._id === currentStageId);\n          }\n\n          gamePlayers.forEach(player => {\n            player.round = _.extend({}, round);\n            player.stage = _.extend({}, stage);\n            augmentPlayerStageRound(player, player.stage, player.round, game);\n          });\n        }\n\n        return gamePlayers;\n      }\n\n    },\n    rounds: {\n      get() {\n        if (!gameRounds) {\n          gameRounds = Rounds.find({\n            gameId: game._id\n          }).fetch();\n          gameRounds.forEach(round => {\n            let stages = null;\n            Object.defineProperty(round, \"stages\", {\n              get() {\n                if (!stages) {\n                  stages = Stages.find({\n                    roundId: round._id\n                  }).fetch();\n                }\n\n                return stages;\n              }\n\n            });\n          });\n        }\n\n        return gameRounds;\n      }\n\n    },\n    stages: {\n      get() {\n        if (!gameStages) {\n          gameStages = Stages.find({\n            gameId: game._id\n          }).fetch();\n        }\n\n        return gameStages;\n      }\n\n    }\n  });\n};","map":{"version":3,"sources":["packages/empirica:core/api/games/augment.js"],"names":["module","export","augmentGameObject","Stages","link","v","augmentPlayerStageRound","Rounds","Players","game","treatment","round","undefined","stage","firstRoundId","currentStageId","gameTreatment","gamePlayers","gameRounds","gameStages","Object","defineProperties","get","factorsObject","players","find","_id","$in","playerIds","fetch","findOne","stages","s","forEach","player","_","extend","rounds","gameId","defineProperty","roundId"],"mappings":"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","sourcesContent":["import { Stages } from \"../stages/stages\";\nimport { augmentPlayerStageRound } from \"../player-stages/augment\";\nimport { Rounds } from \"../rounds/rounds\";\nimport { Players } from \"../players/players\";\n\nexport const augmentGameObject = ({\n  game,\n  treatment,\n  round = undefined,\n  stage = undefined,\n  firstRoundId = undefined,\n  currentStageId = undefined\n}) => {\n  let gameTreatment = null,\n    gamePlayers = null,\n    gameRounds = null,\n    gameStages = null;\n\n  Object.defineProperties(game, {\n    treatment: {\n      get() {\n        if (!gameTreatment) {\n          gameTreatment = treatment.factorsObject();\n        }\n\n        return gameTreatment;\n      }\n    },\n    players: {\n      get() {\n        if (!gamePlayers) {\n          gamePlayers = Players.find({ _id: { $in: game.playerIds } }).fetch();\n\n          if (firstRoundId) {\n            round = Rounds.findOne(firstRoundId);\n            stage = round.stages.find(s => s._id === currentStageId);\n          }\n\n          gamePlayers.forEach(player => {\n            player.round = _.extend({}, round);\n            player.stage = _.extend({}, stage);\n            augmentPlayerStageRound(player, player.stage, player.round, game);\n          });\n        }\n\n        return gamePlayers;\n      }\n    },\n    rounds: {\n      get() {\n        if (!gameRounds) {\n          gameRounds = Rounds.find({ gameId: game._id }).fetch();\n          gameRounds.forEach(round => {\n            let stages = null;\n            Object.defineProperty(round, \"stages\", {\n              get() {\n                if (!stages) {\n                  stages = Stages.find({ roundId: round._id }).fetch();\n                }\n\n                return stages;\n              }\n            });\n          });\n        }\n\n        return gameRounds;\n      }\n    },\n    stages: {\n      get() {\n        if (!gameStages) {\n          gameStages = Stages.find({ gameId: game._id }).fetch();\n        }\n\n        return gameStages;\n      }\n    }\n  });\n};\n"]},"sourceType":"module","hash":"a21c572e565a6023b781811382a72226589c3dc4"}
