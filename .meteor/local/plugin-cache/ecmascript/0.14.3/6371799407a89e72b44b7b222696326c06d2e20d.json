{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/player-rounds/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/empirica:core/api/player-rounds/methods.js","filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/player-rounds/methods.js","passPerPreset":false,"envName":"production","cwd":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","root":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/packages/empirica:core/api/player-rounds/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/player-rounds/methods.js"}},"code":"module.export({\n  updatePlayerRoundData: () => updatePlayerRoundData\n});\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet PlayerRounds;\nmodule.link(\"./player-rounds\", {\n  PlayerRounds(v) {\n    PlayerRounds = v;\n  }\n\n}, 2);\nlet shared;\nmodule.link(\"../../shared.js\", {\n  default(v) {\n    shared = v;\n  }\n\n}, 3);\nconst updatePlayerRoundData = new ValidatedMethod({\n  name: \"PlayerRounds.methods.updateData\",\n  validate: new SimpleSchema({\n    playerRoundId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    key: {\n      type: String\n    },\n    value: {\n      type: String\n    },\n    append: {\n      type: Boolean,\n      optional: true\n    },\n    noCallback: {\n      type: Boolean,\n      optional: true\n    }\n  }).validator(),\n\n  run(_ref) {\n    let {\n      playerRoundId,\n      key,\n      value,\n      append,\n      noCallback\n    } = _ref;\n    const playerRound = PlayerRounds.findOne(playerRoundId);\n\n    if (!playerRound) {\n      throw new Error(\"playerRound not found\");\n    } // TODO check can update this record playerRound\n\n\n    const val = JSON.parse(value);\n    let update = {\n      [\"data.\".concat(key)]: val\n    };\n    const modifier = append ? {\n      $push: update\n    } : {\n      $set: update\n    };\n    PlayerRounds.update(playerRoundId, modifier, {\n      autoConvert: false,\n      filter: false,\n      validate: false,\n      trimStrings: false,\n      removeEmptyStrings: false\n    });\n\n    if (Meteor.isServer && !noCallback) {\n      shared.callOnChange({\n        playerId: playerRound.playerId,\n        playerRoundId,\n        playerRound,\n        key,\n        value: val,\n        prevValue: playerRound.data && playerRound.data[key],\n        append\n      });\n    }\n  }\n\n});","map":{"version":3,"sources":["packages/empirica:core/api/player-rounds/methods.js"],"names":["module","export","updatePlayerRoundData","ValidatedMethod","link","v","SimpleSchema","default","PlayerRounds","shared","name","validate","playerRoundId","type","String","regEx","RegEx","Id","key","value","append","Boolean","optional","noCallback","validator","run","playerRound","findOne","Error","val","JSON","parse","update","modifier","$push","$set","autoConvert","filter","trimStrings","removeEmptyStrings","Meteor","isServer","callOnChange","playerId","prevValue","data"],"mappings":"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","sourcesContent":["import { ValidatedMethod } from \"meteor/mdg:validated-method\";\nimport SimpleSchema from \"simpl-schema\";\nimport { PlayerRounds } from \"./player-rounds\";\nimport shared from \"../../shared.js\";\n\nexport const updatePlayerRoundData = new ValidatedMethod({\n  name: \"PlayerRounds.methods.updateData\",\n\n  validate: new SimpleSchema({\n    playerRoundId: {\n      type: String,\n      regEx: SimpleSchema.RegEx.Id\n    },\n    key: {\n      type: String\n    },\n    value: {\n      type: String\n    },\n    append: {\n      type: Boolean,\n      optional: true\n    },\n    noCallback: {\n      type: Boolean,\n      optional: true\n    }\n  }).validator(),\n\n  run({ playerRoundId, key, value, append, noCallback }) {\n    const playerRound = PlayerRounds.findOne(playerRoundId);\n    if (!playerRound) {\n      throw new Error(\"playerRound not found\");\n    }\n    // TODO check can update this record playerRound\n\n    const val = JSON.parse(value);\n    let update = { [`data.${key}`]: val };\n    const modifier = append ? { $push: update } : { $set: update };\n\n    PlayerRounds.update(playerRoundId, modifier, {\n      autoConvert: false,\n      filter: false,\n      validate: false,\n      trimStrings: false,\n      removeEmptyStrings: false\n    });\n\n    if (Meteor.isServer && !noCallback) {\n      shared.callOnChange({\n        playerId: playerRound.playerId,\n        playerRoundId,\n        playerRound,\n        key,\n        value: val,\n        prevValue: playerRound.data && playerRound.data[key],\n        append\n      });\n    }\n  }\n});\n"]},"sourceType":"module","hash":"6371799407a89e72b44b7b222696326c06d2e20d"}
