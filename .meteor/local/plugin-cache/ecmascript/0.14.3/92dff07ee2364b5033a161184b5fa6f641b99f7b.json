{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/Login.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/ui/components/Login.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/Login.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/Login.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/Login.jsx"}},"code":"module.export({\n  default: () => Login\n});\nlet Button, ControlGroup, InputGroup, Intent;\nmodule.link(\"@blueprintjs/core\", {\n  Button(v) {\n    Button = v;\n  },\n\n  ControlGroup(v) {\n    ControlGroup = v;\n  },\n\n  InputGroup(v) {\n    InputGroup = v;\n  },\n\n  Intent(v) {\n    Intent = v;\n  }\n\n}, 0);\nlet IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames(v) {\n    IconNames = v;\n  }\n\n}, 1);\nlet PropTypes;\nmodule.link(\"prop-types\", {\n  default(v) {\n    PropTypes = v;\n  }\n\n}, 2);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 3);\nlet AlertToaster;\nmodule.link(\"./Toasters.jsx\", {\n  AlertToaster(v) {\n    AlertToaster = v;\n  }\n\n}, 4);\n\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: \"admin\",\n      password: \"\"\n    };\n\n    this.onChange = event => {\n      const {\n        value,\n        name\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleForm = event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      Meteor.loginWithPassword(username, password, err => {\n        if (err) {\n          AlertToaster.show({\n            message: String(err)\n          });\n        }\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  componentDidMount() {\n    const redirecting = this.redirectLoggedIn(this.props);\n\n    if (redirecting) {\n      return;\n    }\n\n    this.timeout = setTimeout(() => {\n      this.timeout = null;\n      const field = document.querySelector(\"#password\");\n\n      if (field) {\n        field.focus();\n      }\n    }, 100);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.redirectLoggedIn(nextProps);\n  }\n\n  redirectLoggedIn(props) {\n    const {\n      user,\n      loggingIn,\n      adminPath\n    } = props;\n    const {\n      router\n    } = this.context;\n\n    if (!loggingIn && user) {\n      router.history.push(adminPath || \"/admin\");\n      return true;\n    }\n  }\n\n  render() {\n    const {\n      user,\n      loggingIn\n    } = this.props;\n    const {\n      username,\n      password\n    } = this.state;\n\n    if (loggingIn || user) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\"\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleForm\n    }, /*#__PURE__*/React.createElement(\"h1\", null, \"Log in\"), /*#__PURE__*/React.createElement(ControlGroup, {\n      vertical: true\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      large: true,\n      leftIcon: IconNames.PERSON,\n      name: \"username\",\n      id: \"username\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: this.onChange,\n      autoComplete: \"off\"\n    }), /*#__PURE__*/React.createElement(InputGroup, {\n      large: true,\n      leftIcon: IconNames.LOCK,\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: this.onChange\n    }), /*#__PURE__*/React.createElement(Button, {\n      text: \"Login\",\n      large: true,\n      intent: Intent.PRIMARY,\n      type: \"submit\"\n    }))), Meteor.isDevelopment ? /*#__PURE__*/React.createElement(\"p\", null, \"If you have not yet set a password, you can find an autogenerated password in your application's logs.\") : \"\");\n  }\n\n}\n\nLogin.propTypes = {\n  user: PropTypes.object,\n  // Current meteor user\n  loggingIn: PropTypes.bool,\n  // Current meteor user logging in\n  loading: PropTypes.bool // Subscription status\n\n};\nLogin.contextTypes = {\n  router: PropTypes.object\n};","map":{"version":3,"sources":["packages/empirica:core/ui/components/Login.jsx"],"names":["module","export","default","Login","Button","ControlGroup","InputGroup","Intent","link","v","IconNames","PropTypes","React","AlertToaster","Component","state","username","password","onChange","event","value","name","currentTarget","setState","handleForm","preventDefault","Meteor","loginWithPassword","err","show","message","String","componentWillUnmount","timeout","clearTimeout","componentDidMount","redirecting","redirectLoggedIn","props","setTimeout","field","document","querySelector","focus","componentWillReceiveProps","nextProps","user","loggingIn","adminPath","router","context","history","push","render","PERSON","LOCK","PRIMARY","isDevelopment","propTypes","object","bool","loading","contextTypes"],"mappings":"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","sourcesContent":["import { Button, ControlGroup, InputGroup, Intent } from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { AlertToaster } from \"./Toasters.jsx\";\n\nexport default class Login extends React.Component {\n  state = { username: \"admin\", password: \"\" };\n\n  componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  componentDidMount() {\n    const redirecting = this.redirectLoggedIn(this.props);\n    if (redirecting) {\n      return;\n    }\n    this.timeout = setTimeout(() => {\n      this.timeout = null;\n      const field = document.querySelector(\"#password\");\n      if (field) {\n        field.focus();\n      }\n    }, 100);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.redirectLoggedIn(nextProps);\n  }\n\n  onChange = event => {\n    const { value, name } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  redirectLoggedIn(props) {\n    const { user, loggingIn, adminPath } = props;\n    const { router } = this.context;\n\n    if (!loggingIn && user) {\n      router.history.push(adminPath || `/admin`);\n      return true;\n    }\n  }\n\n  handleForm = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    Meteor.loginWithPassword(username, password, err => {\n      if (err) {\n        AlertToaster.show({ message: String(err) });\n      }\n    });\n  };\n\n  render() {\n    const { user, loggingIn } = this.props;\n    const { username, password } = this.state;\n\n    if (loggingIn || user) {\n      return null;\n    }\n\n    return (\n      <div className=\"login\">\n        <form onSubmit={this.handleForm}>\n          <h1>Log in</h1>\n\n          <ControlGroup vertical>\n            <InputGroup\n              large\n              leftIcon={IconNames.PERSON}\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={this.onChange}\n              autoComplete={\"off\"}\n            />\n            <InputGroup\n              large\n              leftIcon={IconNames.LOCK}\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={this.onChange}\n            />\n            <Button text=\"Login\" large intent={Intent.PRIMARY} type=\"submit\" />\n          </ControlGroup>\n        </form>\n\n        {Meteor.isDevelopment ? (\n          <p>\n            If you have not yet set a password, you can find an autogenerated\n            password in your application's logs.\n          </p>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  user: PropTypes.object, // Current meteor user\n  loggingIn: PropTypes.bool, // Current meteor user logging in\n  loading: PropTypes.bool // Subscription status\n};\n\nLogin.contextTypes = {\n  router: PropTypes.object\n};\n"]},"sourceType":"module","hash":"92dff07ee2364b5033a161184b5fa6f641b99f7b"}
