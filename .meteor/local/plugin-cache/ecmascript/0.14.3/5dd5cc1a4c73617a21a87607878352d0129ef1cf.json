{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  default: () => AdminNewTreatment\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Link;\nmodule.link(\"react-router-dom\", {\n  Link(v) {\n    Link = v;\n  }\n\n}, 1);\nlet Callout, Classes, Button, Dialog, FormGroup, Intent, RadioGroup, Radio;\nmodule.link(\"@blueprintjs/core\", {\n  Callout(v) {\n    Callout = v;\n  },\n\n  Classes(v) {\n    Classes = v;\n  },\n\n  Button(v) {\n    Button = v;\n  },\n\n  Dialog(v) {\n    Dialog = v;\n  },\n\n  FormGroup(v) {\n    FormGroup = v;\n  },\n\n  Intent(v) {\n    Intent = v;\n  },\n\n  RadioGroup(v) {\n    RadioGroup = v;\n  },\n\n  Radio(v) {\n    Radio = v;\n  }\n\n}, 2);\nlet IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames(v) {\n    IconNames = v;\n  }\n\n}, 3);\nlet AlertToaster;\nmodule.link(\"../Toasters.jsx\", {\n  AlertToaster(v) {\n    AlertToaster = v;\n  }\n\n}, 4);\nlet createTreatment;\nmodule.link(\"../../../api/treatments/methods.js\", {\n  createTreatment(v) {\n    createTreatment = v;\n  }\n\n}, 5);\n\nclass AdminNewTreatment extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selected: {},\n      name: \"\"\n    };\n\n    this.handleNameChange = () => {\n      const name = this.nameField.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleFactorChange = (type, event) => {\n      const factorId = event.currentTarget.value;\n\n      const selected = _objectSpread({}, this.state.selected, {\n        [type]: factorId\n      });\n\n      this.setState({\n        selected\n      });\n    };\n\n    this.handleNewTreatment = event => {\n      const {\n        onClose\n      } = this.props;\n      const {\n        name,\n        selected\n      } = this.state;\n      event.preventDefault();\n\n      const keys = _.compact(_.keys(selected));\n\n      const factorIds = _.compact(_.values(selected));\n\n      if (keys.length !== factorIds.length) {\n        const missing = keys.join(\", \");\n        const msg = \"A value for each factor must be selected. (missing: \".concat(missing, \")\");\n        AlertToaster.show({\n          message: msg\n        });\n        return;\n      }\n\n      const params = {\n        name,\n        factorIds\n      };\n      createTreatment.call(params, err => {\n        if (err) {\n          if (err.details) {\n            try {\n              const details = JSON.parse(err.details);\n              const out = details[0].details.map(er => {\n                switch (er.type) {\n                  case \"required\":\n                    return \"\".concat(er.name, \" is required.\");\n\n                  default:\n                    console.error(\"unknown error type\", er);\n                }\n              }).join(\" \");\n              AlertToaster.show({\n                message: out\n              });\n            } catch (e) {\n              console.error(JSON.stringify(err));\n              AlertToaster.show({\n                message: String(err.message)\n              });\n            }\n          } else {\n            AlertToaster.show({\n              message: String(err.message)\n            });\n          }\n\n          return;\n        }\n\n        onClose();\n        this.setState({\n          name: \"\",\n          selected: {}\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      isOpen,\n      factors,\n      factorTypes,\n      onClose\n    } = this.props;\n    const {\n      name,\n      selected\n    } = this.state;\n    const types = factorTypes.filter(t => !t.archivedAt);\n    return /*#__PURE__*/React.createElement(Dialog, {\n      className: \"admin\",\n      icon: IconNames.PROPERTIES,\n      isOpen: isOpen,\n      onClose: onClose,\n      title: \"New Treatment\"\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"new-treatment\",\n      onSubmit: this.handleNewTreatment\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: Classes.DIALOG_BODY\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Name\",\n      labelInfo: \"(optional)\",\n      labelFor: \"name\"\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: Classes.INPUT,\n      type: \"text\",\n      dir: \"auto\",\n      name: \"name\",\n      id: \"name\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: this.handleNameChange,\n      ref: e => this.nameField = e // pattern={/^[a-zA-Z0-9_]+$/.source}\n\n    })), _.map(types, type => {\n      const conds = _.filter(factors, factor => factor.factorTypeId === type._id);\n\n      const requiredClass = type.required ? \"required\" : \"\";\n\n      if (conds.length === 0) {\n        return /*#__PURE__*/React.createElement(FormGroup, {\n          label: type.name,\n          labelFor: \"name\",\n          className: requiredClass,\n          key: type._id\n        }, /*#__PURE__*/React.createElement(Callout, {\n          icon: type.required ? IconNames.WARNING_SIGN : IconNames.INFO_SIGN,\n          intent: type.required ? Intent.DANGER : null\n        }, \"There are no factor values for the\", type.required ? /*#__PURE__*/React.createElement(\"strong\", null, \" required \") : \" \", type.name, \" factor type yet.\", \" \", /*#__PURE__*/React.createElement(Link, {\n          to: \"/admin/factors\"\n        }, \"Add factor values\"), \".\"));\n      }\n\n      return /*#__PURE__*/React.createElement(RadioGroup, {\n        key: type._id,\n        label: type.name,\n        onChange: this.handleFactorChange.bind(this, type._id),\n        selectedValue: selected[type._id],\n        inline: true,\n        className: requiredClass\n      }, _.map(conds, cond => /*#__PURE__*/React.createElement(Radio, {\n        key: cond._id,\n        label: cond.label(),\n        value: cond._id\n      })));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: Classes.DIALOG_FOOTER\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: Classes.DIALOG_FOOTER_ACTIONS\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      text: \"Create Treatment\",\n      intent: Intent.PRIMARY\n    })))));\n  }\n\n}","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx"],"names":["_objectSpread","module","link","default","v","export","AdminNewTreatment","React","Link","Callout","Classes","Button","Dialog","FormGroup","Intent","RadioGroup","Radio","IconNames","AlertToaster","createTreatment","Component","state","selected","name","handleNameChange","nameField","value","setState","handleFactorChange","type","event","factorId","currentTarget","handleNewTreatment","onClose","props","preventDefault","keys","_","compact","factorIds","values","length","missing","join","msg","show","message","params","call","err","details","JSON","parse","out","map","er","console","error","e","stringify","String","render","isOpen","factors","factorTypes","types","filter","t","archivedAt","PROPERTIES","DIALOG_BODY","INPUT","conds","factor","factorTypeId","_id","requiredClass","required","WARNING_SIGN","INFO_SIGN","DANGER","bind","cond","label","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","PRIMARY"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Callout,\n  Classes,\n  Button,\n  Dialog,\n  FormGroup,\n  Intent,\n  RadioGroup,\n  Radio\n} from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\nimport { AlertToaster } from \"../Toasters.jsx\";\nimport { createTreatment } from \"../../../api/treatments/methods.js\";\n\nexport default class AdminNewTreatment extends React.Component {\n  state = { selected: {}, name: \"\" };\n\n  handleNameChange = () => {\n    const name = this.nameField.value;\n    this.setState({ name });\n  };\n\n  handleFactorChange = (type, event) => {\n    const factorId = event.currentTarget.value;\n    const selected = {\n      ...this.state.selected,\n      [type]: factorId\n    };\n    this.setState({ selected });\n  };\n\n  handleNewTreatment = event => {\n    const { onClose } = this.props;\n    const { name, selected } = this.state;\n    event.preventDefault();\n\n    const keys = _.compact(_.keys(selected));\n    const factorIds = _.compact(_.values(selected));\n\n    if (keys.length !== factorIds.length) {\n      const missing = keys.join(\", \");\n      const msg = `A value for each factor must be selected. (missing: ${missing})`;\n      AlertToaster.show({ message: msg });\n      return;\n    }\n\n    const params = { name, factorIds };\n    createTreatment.call(params, err => {\n      if (err) {\n        if (err.details) {\n          try {\n            const details = JSON.parse(err.details);\n            const out = details[0].details\n              .map(er => {\n                switch (er.type) {\n                  case \"required\":\n                    return `${er.name} is required.`;\n                  default:\n                    console.error(\"unknown error type\", er);\n                }\n              })\n              .join(\" \");\n            AlertToaster.show({ message: out });\n          } catch (e) {\n            console.error(JSON.stringify(err));\n            AlertToaster.show({ message: String(err.message) });\n          }\n        } else {\n          AlertToaster.show({ message: String(err.message) });\n        }\n        return;\n      }\n      onClose();\n      this.setState({\n        name: \"\",\n        selected: {}\n      });\n    });\n  };\n\n  render() {\n    const { isOpen, factors, factorTypes, onClose } = this.props;\n    const { name, selected } = this.state;\n\n    const types = factorTypes.filter(t => !t.archivedAt);\n\n    return (\n      <Dialog\n        className=\"admin\"\n        icon={IconNames.PROPERTIES}\n        isOpen={isOpen}\n        onClose={onClose}\n        title=\"New Treatment\"\n      >\n        <form className=\"new-treatment\" onSubmit={this.handleNewTreatment}>\n          <div className={Classes.DIALOG_BODY}>\n            <FormGroup label=\"Name\" labelInfo=\"(optional)\" labelFor=\"name\">\n              <input\n                className={Classes.INPUT}\n                type=\"text\"\n                dir=\"auto\"\n                name=\"name\"\n                id=\"name\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={this.handleNameChange}\n                ref={e => (this.nameField = e)}\n                // pattern={/^[a-zA-Z0-9_]+$/.source}\n              />\n            </FormGroup>\n\n            {_.map(types, type => {\n              const conds = _.filter(\n                factors,\n                factor => factor.factorTypeId === type._id\n              );\n              const requiredClass = type.required ? \"required\" : \"\";\n              if (conds.length === 0) {\n                return (\n                  <FormGroup\n                    label={type.name}\n                    labelFor=\"name\"\n                    className={requiredClass}\n                    key={type._id}\n                  >\n                    <Callout\n                      icon={\n                        type.required\n                          ? IconNames.WARNING_SIGN\n                          : IconNames.INFO_SIGN\n                      }\n                      intent={type.required ? Intent.DANGER : null}\n                    >\n                      There are no factor values for the\n                      {type.required ? <strong> required </strong> : \" \"}\n                      {type.name} factor type yet.{\" \"}\n                      <Link to=\"/admin/factors\">Add factor values</Link>.\n                    </Callout>\n                  </FormGroup>\n                );\n              }\n              return (\n                <RadioGroup\n                  key={type._id}\n                  label={type.name}\n                  onChange={this.handleFactorChange.bind(this, type._id)}\n                  selectedValue={selected[type._id]}\n                  inline={true}\n                  className={requiredClass}\n                >\n                  {_.map(conds, cond => (\n                    <Radio\n                      key={cond._id}\n                      label={cond.label()}\n                      value={cond._id}\n                    />\n                  ))}\n                </RadioGroup>\n              );\n            })}\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                type=\"submit\"\n                text=\"Create Treatment\"\n                intent={Intent.PRIMARY}\n              />\n            </div>\n          </div>\n        </form>\n      </Dialog>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"5dd5cc1a4c73617a21a87607878352d0129ef1cf"}
