{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/client/main.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/main.js","filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/client/main.js","passPerPreset":false,"envName":"development","cwd":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","root":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/client/main.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/main.js"}},"code":"let Empirica;\nmodule.link(\"meteor/empirica:core\", {\n  default(v) {\n    Empirica = v;\n  }\n\n}, 0);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 1);\nlet ExitSurvey;\nmodule.link(\"./exit/ExitSurvey\", {\n  default(v) {\n    ExitSurvey = v;\n  }\n\n}, 2);\nlet Thanks;\nmodule.link(\"./exit/Thanks\", {\n  default(v) {\n    Thanks = v;\n  }\n\n}, 3);\nlet Sorry;\nmodule.link(\"./exit/Sorry\", {\n  default(v) {\n    Sorry = v;\n  }\n\n}, 4);\nlet About;\nmodule.link(\"./game/About\", {\n  default(v) {\n    About = v;\n  }\n\n}, 5);\nlet Round;\nmodule.link(\"./game/Round\", {\n  default(v) {\n    Round = v;\n  }\n\n}, 6);\nlet Consent;\nmodule.link(\"./intro/Consent\", {\n  default(v) {\n    Consent = v;\n  }\n\n}, 7);\nlet InstructionStepOne;\nmodule.link(\"./intro/InstructionStepOne\", {\n  default(v) {\n    InstructionStepOne = v;\n  }\n\n}, 8);\nlet InstructionStepTwo;\nmodule.link(\"./intro/InstructionStepTwo\", {\n  default(v) {\n    InstructionStepTwo = v;\n  }\n\n}, 9);\nlet QuizCopy;\nmodule.link(\"./intro/QuizCopy\", {\n  default(v) {\n    QuizCopy = v;\n  }\n\n}, 10);\nlet Quiz;\nmodule.link(\"./intro/Quiz\", {\n  default(v) {\n    Quiz = v;\n  }\n\n}, 11);\nlet NewPlayer;\nmodule.link(\"./intro/NewPlayer\", {\n  default(v) {\n    NewPlayer = v;\n  }\n\n}, 12);\n// Set the About Component you want to use for the About dialog (optional).\nEmpirica.about(About); // Set the Consent Component you want to present players (optional).\n\nEmpirica.consent(Consent); // Set the component for getting the player id (optional)\n\nEmpirica.newPlayer(NewPlayer); // Introduction pages to show before they play the game (optional).\n// At this point they have been assigned a treatment. You can return\n// different instruction steps depending on the assigned treatment.\n\nconst Breadcrumb = (_ref) => {\n  let {\n    round,\n    stage\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"round-nav\"\n  }, /*#__PURE__*/React.createElement(\"li\", null, \"Round\"), /*#__PURE__*/React.createElement(\"li\", null, \"Round sad\"));\n};\n\nEmpirica.breadcrumb(Breadcrumb);\nEmpirica.introSteps((game, treatment) => {\n  const steps = [InstructionStepOne];\n\n  if (treatment.punishment > 0) {\n    steps.push(InstructionStepTwo);\n  }\n\n  steps.push(Quiz);\n  return steps;\n}); // The Round component containing the game UI logic.\n// This is where you will be doing the most development.\n// See client/game/Round.jsx to learn more.\n\nEmpirica.round(Round); // End of Game pages. These may vary depending on player or game information.\n// For example we can show the score of the user, or we can show them a\n// different message if they actually could not participate the game (timed\n// out), etc.\n// The last step will be the last page shown to user and will be shown to the\n// user if they come back to the website.\n// If you don't return anything, or do not define this function, a default\n// exit screen will be shown.\n\nEmpirica.exitSteps((game, player) => {\n  if (!game || player.exitStatus && player.exitStatus !== \"finished\" && player.exitReason !== \"playerQuit\") {\n    return [Sorry];\n  }\n\n  return [ExitSurvey, Thanks];\n}); // Start the app render tree.\n// NB: This must be called after any other Empirica calls (Empirica.round(),\n// Empirica.introSteps(), ...).\n// It is required and usually does not need changing.\n\nMeteor.startup(() => {\n  render(Empirica.routes(), document.getElementById(\"app\"));\n});","map":{"version":3,"sources":["client/main.js"],"names":["Empirica","module","link","default","v","render","ExitSurvey","Thanks","Sorry","About","Round","Consent","InstructionStepOne","InstructionStepTwo","QuizCopy","Quiz","NewPlayer","about","consent","newPlayer","Breadcrumb","round","stage","breadcrumb","introSteps","game","treatment","steps","punishment","push","exitSteps","player","exitStatus","exitReason","Meteor","startup","routes","document","getElementById"],"mappings":"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","sourcesContent":["import Empirica from \"meteor/empirica:core\";\nimport { render } from \"react-dom\";\nimport ExitSurvey from \"./exit/ExitSurvey\";\nimport Thanks from \"./exit/Thanks\";\nimport Sorry from \"./exit/Sorry\";\nimport About from \"./game/About\";\nimport Round from \"./game/Round\";\nimport Consent from \"./intro/Consent\";\nimport InstructionStepOne from \"./intro/InstructionStepOne\";\nimport InstructionStepTwo from \"./intro/InstructionStepTwo\";\nimport QuizCopy from \"./intro/QuizCopy\";\nimport Quiz from \"./intro/Quiz\";\nimport NewPlayer from \"./intro/NewPlayer\";\n\n// Set the About Component you want to use for the About dialog (optional).\nEmpirica.about(About);\n\n// Set the Consent Component you want to present players (optional).\nEmpirica.consent(Consent);\n\n// Set the component for getting the player id (optional)\nEmpirica.newPlayer(NewPlayer);\n\n// Introduction pages to show before they play the game (optional).\n// At this point they have been assigned a treatment. You can return\n// different instruction steps depending on the assigned treatment.\n\nconst Breadcrumb = ({ round, stage }) => (\n  <ul className=\"round-nav\">\n    <li>Round</li>\n    <li>Round sad</li>\n  </ul>\n);\nEmpirica.breadcrumb(Breadcrumb);\n\n\nEmpirica.introSteps((game, treatment) => {\n  const steps = [InstructionStepOne];\n\n  if (treatment.punishment > 0) {\n    steps.push(InstructionStepTwo);\n  }\n  steps.push(Quiz);\n\n  return steps;\n});\n\n// The Round component containing the game UI logic.\n// This is where you will be doing the most development.\n// See client/game/Round.jsx to learn more.\nEmpirica.round(Round);\n\n// End of Game pages. These may vary depending on player or game information.\n// For example we can show the score of the user, or we can show them a\n// different message if they actually could not participate the game (timed\n// out), etc.\n// The last step will be the last page shown to user and will be shown to the\n// user if they come back to the website.\n// If you don't return anything, or do not define this function, a default\n// exit screen will be shown.\nEmpirica.exitSteps((game, player) => {\n  if (\n    !game ||\n    (player.exitStatus &&\n      player.exitStatus !== \"finished\" &&\n      player.exitReason !== \"playerQuit\")\n  ) {\n    return [Sorry];\n  }\n  return [ExitSurvey, Thanks];\n});\n\n// Start the app render tree.\n// NB: This must be called after any other Empirica calls (Empirica.round(),\n// Empirica.introSteps(), ...).\n// It is required and usually does not need changing.\nMeteor.startup(() => {\n  render(Empirica.routes(), document.getElementById(\"app\"));\n});\n"]},"sourceType":"module","hash":"97724803eb38e69b326687a63b8fd803e29d2cb6"}
