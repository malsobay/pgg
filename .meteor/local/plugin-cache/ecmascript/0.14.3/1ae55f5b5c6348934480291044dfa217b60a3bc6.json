{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatch.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminBatch.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatch.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatch.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminBatch.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return AdminBatch;\n  }\n});\nvar Button, ButtonGroup, Classes, Intent, Tag;\nmodule.link(\"@blueprintjs/core\", {\n  Button: function (v) {\n    Button = v;\n  },\n  ButtonGroup: function (v) {\n    ButtonGroup = v;\n  },\n  Classes: function (v) {\n    Classes = v;\n  },\n  Intent: function (v) {\n    Intent = v;\n  },\n  Tag: function (v) {\n    Tag = v;\n  }\n}, 0);\nvar IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames: function (v) {\n    IconNames = v;\n  }\n}, 1);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 2);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 3);\nvar assignmentTypes;\nmodule.link(\"../../../api/batches/batches\", {\n  assignmentTypes: function (v) {\n    assignmentTypes = v;\n  }\n}, 4);\nvar duplicateBatch, setBatchInDebugMode, updateBatch, updateBatchStatus;\nmodule.link(\"../../../api/batches/methods\", {\n  duplicateBatch: function (v) {\n    duplicateBatch = v;\n  },\n  setBatchInDebugMode: function (v) {\n    setBatchInDebugMode = v;\n  },\n  updateBatch: function (v) {\n    updateBatch = v;\n  },\n  updateBatchStatus: function (v) {\n    updateBatchStatus = v;\n  }\n}, 5);\nvar AdminBatchGamesContainer;\nmodule.link(\"../../containers/admin/AdminBatchGamesContainer\", {\n  \"default\": function (v) {\n    AdminBatchGamesContainer = v;\n  }\n}, 6);\nvar LoadingInline;\nmodule.link(\"../LoadingInline.jsx\", {\n  \"default\": function (v) {\n    LoadingInline = v;\n  }\n}, 7);\nvar AlertToaster, SuccessToaster;\nmodule.link(\"../Toasters.jsx\", {\n  AlertToaster: function (v) {\n    AlertToaster = v;\n  },\n  SuccessToaster: function (v) {\n    SuccessToaster = v;\n  }\n}, 8);\n\nvar AdminBatch = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AdminBatch, _React$Component);\n\n  var _super = _createSuper(AdminBatch);\n\n  function AdminBatch() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      newIsOpen: false,\n      detailsVisible: false\n    };\n\n    _this.toggleDetails = function () {\n      _this.setState({\n        detailsVisible: !_this.state.detailsVisible\n      });\n    };\n\n    _this.handleArchive = function () {\n      var _this$props = _this.props,\n          archived = _this$props.archived,\n          _id = _this$props.batch._id;\n      updateBatch.call({\n        _id: _id,\n        archived: !archived\n      });\n    };\n\n    _this.handleStatusChange = function (status, debugMode, event) {\n      var _id = _this.props.batch._id;\n      event.preventDefault();\n\n      if ((Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) && status === \"running\" && ( // mac: metaKey (command), window: ctrlKey (Ctrl)\n      event.ctrlKey || event.metaKey || debugMode)) {\n        setBatchInDebugMode.call({\n          _id: _id\n        });\n      }\n\n      updateBatchStatus.call({\n        _id: _id,\n        status: status\n      });\n    };\n\n    _this.handleDuplicate = function (event) {\n      var _this$props2 = _this.props,\n          archived = _this$props2.archived,\n          _id = _this$props2.batch._id;\n      event.preventDefault();\n      duplicateBatch.call({\n        _id: _id\n      }, function (err) {\n        if (err) {\n          AlertToaster.show({\n            message: \"Failed duplicating Batch: \" + err\n          });\n        } else {\n          var message = \"Successfully duplicated Batch.\";\n\n          if (archived) {\n            message += \" See Active Batches!\";\n          }\n\n          SuccessToaster.show({\n            message: message\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = AdminBatch.prototype;\n\n  _proto.render = function () {\n    function render() {\n      var _this$props3 = this.props,\n          loading = _this$props3.loading,\n          batch = _this$props3.batch,\n          treatments = _this$props3.treatments,\n          archived = _this$props3.archived;\n      var detailsVisible = this.state.detailsVisible;\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"td\", {\n          colSpan: 7,\n          style: {\n            textAlign: \"center\"\n          }\n        }, /*#__PURE__*/React.createElement(LoadingInline, null)));\n      }\n\n      var actions = [];\n\n      if (batch.status === \"init\") {\n        actions.push( /*#__PURE__*/React.createElement(Button, {\n          text: \"Start\",\n          intent: Intent.SUCCESS,\n          icon: IconNames.PLAY,\n          key: \"start\",\n          onClick: this.handleStatusChange.bind(this, \"running\", false)\n        }));\n      }\n\n      if (batch.status === \"init\" || batch.status === \"running\") {\n        actions.push( /*#__PURE__*/React.createElement(Button, {\n          text: \"Cancel\",\n          icon: IconNames.STOP,\n          key: \"cancel\",\n          onClick: this.handleStatusChange.bind(this, \"cancelled\", false)\n        }));\n      }\n\n      if (batch.status === \"finished\" || batch.status === \"cancelled\" || batch.status === \"failed\") {\n        actions.push( /*#__PURE__*/React.createElement(Button, {\n          text: archived ? \"Unarchive\" : \"Archive\",\n          intent: archived ? Intent.SUCCESS : Intent.DANGER,\n          minimal: true,\n          icon: IconNames.BOX,\n          key: \"archive\",\n          className: Classes.SMALL,\n          onClick: this.handleArchive\n        }));\n      }\n\n      actions.push( /*#__PURE__*/React.createElement(Button, {\n        text: \"Duplicate\",\n        icon: IconNames.DUPLICATE,\n        key: \"duplicate\",\n        onClick: this.handleDuplicate\n      }));\n      var config;\n\n      switch (batch.assignment) {\n        case \"simple\":\n          config = batch.simpleConfig.treatments.map(function (tt) {\n            var t = treatments.find(function (t) {\n              return t._id === tt._id;\n            });\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: tt._id\n            }, t ? t.displayName() : \"Unknown treatment\");\n          });\n          break;\n\n        case \"complete\":\n          config = batch.completeConfig.treatments.map(function (tt) {\n            var t = treatments.find(function (t) {\n              return t._id === tt._id;\n            });\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: tt._id\n            }, t ? t.displayName() : \"Unknown treatment\", \" x \", tt.count);\n          });\n          break;\n\n        default:\n          console.error(\"unknown assignment: \" + batch.assignment);\n          break;\n      }\n\n      var statusIntent;\n      var statusMinimal = false;\n\n      switch (batch.status) {\n        case \"init\":\n          statusIntent = Intent.WARNING; // Default style\n\n          break;\n\n        case \"running\":\n          statusIntent = Intent.SUCCESS;\n          break;\n\n        case \"finished\":\n          statusIntent = Intent.SUCCESS;\n          statusMinimal = true;\n          break;\n\n        case \"stopped\":\n        case \"failed\":\n        case \"cancelled\":\n          statusIntent = Intent.DANGER;\n          statusMinimal = true;\n          break;\n\n        default:\n          statusMinimal = true;\n          break;\n      }\n\n      var detailsVisibleClass = detailsVisible ? \"detailsVisible\" : \"\";\n      var detailsClass = \"detailsButton \" + detailsVisibleClass;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"showDetailsButton\"\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 125.304 125.304\",\n        onClick: this.toggleDetails,\n        className: detailsClass\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        fill: \"#010002\",\n        d: \"M62.652 103.895L0 21.409h125.304z\"\n      }))), /*#__PURE__*/React.createElement(\"td\", null, batch.index), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Tag, {\n        intent: statusIntent,\n        minimal: statusMinimal\n      }, batch.status)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"numeric\"\n      }, batch.gameCount()), /*#__PURE__*/React.createElement(\"td\", {\n        title: moment(batch.runningAt).format()\n      }, batch.runningAt ? moment(batch.runningAt).fromNow() : \"\"), /*#__PURE__*/React.createElement(\"td\", null, assignmentTypes[batch.assignment]), /*#__PURE__*/React.createElement(\"td\", null, config), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(ButtonGroup, {\n        minimal: true,\n        className: Classes.SMALL\n      }, actions))), detailsVisible ? /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(AdminBatchGamesContainer, {\n        batchId: batch._id,\n        batch: batch,\n        treatments: treatments\n      })) : /*#__PURE__*/React.createElement(\"tr\", null));\n    }\n\n    return render;\n  }();\n\n  return AdminBatch;\n}(React.Component);","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminBatch.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","AdminBatch","Button","ButtonGroup","Classes","Intent","Tag","IconNames","moment","React","assignmentTypes","duplicateBatch","setBatchInDebugMode","updateBatch","updateBatchStatus","AdminBatchGamesContainer","LoadingInline","AlertToaster","SuccessToaster","state","newIsOpen","detailsVisible","toggleDetails","setState","handleArchive","props","archived","_id","batch","call","handleStatusChange","status","debugMode","event","preventDefault","Meteor","isDevelopment","settings","public","debug_gameDebugMode","ctrlKey","metaKey","handleDuplicate","err","show","message","render","loading","treatments","textAlign","actions","push","SUCCESS","PLAY","bind","STOP","DANGER","BOX","SMALL","DUPLICATE","config","assignment","simpleConfig","map","tt","t","find","displayName","completeConfig","count","console","error","statusIntent","statusMinimal","WARNING","detailsVisibleClass","detailsClass","index","gameCount","runningAt","format","fromNow","Component"],"mappings":"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","sourcesContent":["import { Button, ButtonGroup, Classes, Intent, Tag } from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { assignmentTypes } from \"../../../api/batches/batches\";\nimport {\n  duplicateBatch,\n  setBatchInDebugMode,\n  updateBatch,\n  updateBatchStatus\n} from \"../../../api/batches/methods\";\nimport AdminBatchGamesContainer from \"../../containers/admin/AdminBatchGamesContainer\";\nimport LoadingInline from \"../LoadingInline.jsx\";\nimport { AlertToaster, SuccessToaster } from \"../Toasters.jsx\";\n\nexport default class AdminBatch extends React.Component {\n  state = {\n    newIsOpen: false,\n    detailsVisible: false\n  };\n\n  toggleDetails = () => {\n    this.setState({ detailsVisible: !this.state.detailsVisible });\n  };\n\n  handleArchive = () => {\n    const {\n      archived,\n      batch: { _id }\n    } = this.props;\n    updateBatch.call({ _id, archived: !archived });\n  };\n\n  handleStatusChange = (status, debugMode, event) => {\n    const {\n      batch: { _id }\n    } = this.props;\n    event.preventDefault();\n    if (\n      (Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) &&\n      status === \"running\" &&\n      // mac: metaKey (command), window: ctrlKey (Ctrl)\n      (event.ctrlKey || event.metaKey || debugMode)\n    ) {\n      setBatchInDebugMode.call({ _id });\n    }\n    updateBatchStatus.call({ _id, status });\n  };\n\n  handleDuplicate = event => {\n    const {\n      archived,\n      batch: { _id }\n    } = this.props;\n    event.preventDefault();\n    duplicateBatch.call({ _id }, err => {\n      if (err) {\n        AlertToaster.show({ message: `Failed duplicating Batch: ${err}` });\n      } else {\n        let message = \"Successfully duplicated Batch.\";\n        if (archived) {\n          message += \" See Active Batches!\";\n        }\n        SuccessToaster.show({ message });\n      }\n    });\n  };\n\n  render() {\n    const { loading, batch, treatments, archived } = this.props;\n    const { detailsVisible } = this.state;\n\n    if (loading) {\n      return (\n        <tr>\n          <td colSpan={7} style={{ textAlign: \"center\" }}>\n            <LoadingInline />\n          </td>\n        </tr>\n      );\n    }\n\n    const actions = [];\n\n    if (batch.status === \"init\") {\n      actions.push(\n        <Button\n          text=\"Start\"\n          intent={Intent.SUCCESS}\n          icon={IconNames.PLAY}\n          key=\"start\"\n          onClick={this.handleStatusChange.bind(this, \"running\", false)}\n        />\n      );\n    }\n\n    if (batch.status === \"init\" || batch.status === \"running\") {\n      actions.push(\n        <Button\n          text=\"Cancel\"\n          icon={IconNames.STOP}\n          key=\"cancel\"\n          onClick={this.handleStatusChange.bind(this, \"cancelled\", false)}\n        />\n      );\n    }\n\n    if (\n      batch.status === \"finished\" ||\n      batch.status === \"cancelled\" ||\n      batch.status === \"failed\"\n    ) {\n      actions.push(\n        <Button\n          text={archived ? \"Unarchive\" : \"Archive\"}\n          intent={archived ? Intent.SUCCESS : Intent.DANGER}\n          minimal\n          icon={IconNames.BOX}\n          key=\"archive\"\n          className={Classes.SMALL}\n          onClick={this.handleArchive}\n        />\n      );\n    }\n\n    actions.push(\n      <Button\n        text=\"Duplicate\"\n        icon={IconNames.DUPLICATE}\n        key=\"duplicate\"\n        onClick={this.handleDuplicate}\n      />\n    );\n\n    let config;\n    switch (batch.assignment) {\n      case \"simple\":\n        config = batch.simpleConfig.treatments.map(tt => {\n          const t = treatments.find(t => t._id === tt._id);\n          return (\n            <div key={tt._id}>{t ? t.displayName() : \"Unknown treatment\"}</div>\n          );\n        });\n        break;\n      case \"complete\":\n        config = batch.completeConfig.treatments.map(tt => {\n          const t = treatments.find(t => t._id === tt._id);\n          return (\n            <div key={tt._id}>\n              {t ? t.displayName() : \"Unknown treatment\"}\n              {\" x \"}\n              {tt.count}\n            </div>\n          );\n        });\n        break;\n      default:\n        console.error(`unknown assignment: ${batch.assignment}`);\n        break;\n    }\n\n    let statusIntent;\n    let statusMinimal = false;\n    switch (batch.status) {\n      case \"init\":\n        statusIntent = Intent.WARNING;\n        // Default style\n        break;\n      case \"running\":\n        statusIntent = Intent.SUCCESS;\n        break;\n      case \"finished\":\n        statusIntent = Intent.SUCCESS;\n        statusMinimal = true;\n        break;\n      case \"stopped\":\n      case \"failed\":\n      case \"cancelled\":\n        statusIntent = Intent.DANGER;\n        statusMinimal = true;\n        break;\n      default:\n        statusMinimal = true;\n        break;\n    }\n\n    const detailsVisibleClass = detailsVisible ? \"detailsVisible\" : \"\";\n    const detailsClass = `detailsButton ${detailsVisibleClass}`;\n    return (\n      <>\n        <tr>\n          <td className=\"showDetailsButton\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 125.304 125.304\"\n              onClick={this.toggleDetails}\n              className={detailsClass}\n            >\n              <path fill=\"#010002\" d=\"M62.652 103.895L0 21.409h125.304z\" />\n            </svg>\n          </td>\n          <td>{batch.index}</td>\n          <td>\n            <Tag intent={statusIntent} minimal={statusMinimal}>\n              {batch.status}\n            </Tag>\n          </td>\n          <td className=\"numeric\">{batch.gameCount()}</td>\n          <td title={moment(batch.runningAt).format()}>\n            {batch.runningAt ? moment(batch.runningAt).fromNow() : \"\"}\n          </td>\n          <td>{assignmentTypes[batch.assignment]}</td>\n          <td>{config}</td>\n          <td>\n            <ButtonGroup minimal className={Classes.SMALL}>\n              {actions}\n            </ButtonGroup>\n          </td>\n        </tr>\n\n        {detailsVisible ? (\n          <tr>\n            <AdminBatchGamesContainer\n              batchId={batch._id}\n              batch={batch}\n              treatments={treatments}\n            />\n          </tr>\n        ) : (\n          <tr />\n        )}\n      </>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"1ae55f5b5c6348934480291044dfa217b60a3bc6"}
