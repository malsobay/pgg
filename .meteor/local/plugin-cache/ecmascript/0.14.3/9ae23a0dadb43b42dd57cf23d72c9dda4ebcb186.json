{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/client/game/Table.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/game/Table.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/client/game/Table.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/client/game/Table.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/game/Table.jsx"}},"code":"let styled;\nmodule.link(\"styled-components\", {\n  default(v) {\n    styled = v;\n  }\n\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 1);\n\nconst Table = (_ref) => {\n  let {\n    columns,\n    rows,\n    values,\n    onLoadMore,\n    more,\n    fetchMore,\n    dataLength,\n    setMore,\n    action\n  } = _ref;\n\n  const loadMore = () => {\n    fetchMore({\n      variables: {\n        offset: dataLength\n      },\n      updateQuery: (prev, _ref2) => {\n        let {\n          fetchMoreResult\n        } = _ref2;\n\n        if (fetchMoreResult.me.transactions.length < 1) {\n          setMore(false);\n          return prev;\n        }\n\n        let newObject1 = Object.assign({}, prev.me, {\n          transactions: [...prev.me.transactions, ...fetchMoreResult.me.transactions]\n        });\n        let newObject2 = Object.assign({}, prev, {\n          me: newObject1\n        });\n        console.log(newObject2);\n        return newObject2;\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TableWrapper, null, /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(InnerWrapper, null, /*#__PURE__*/React.createElement(Tr, null, columns.map((item, i) => /*#__PURE__*/React.createElement(Th, {\n    key: i,\n    last: i === columns.length - 1,\n    first: i === 0\n  }, item))), rows.map((row, i) => /*#__PURE__*/React.createElement(Tr, {\n    key: i\n  }, values.map((keys, j) => {\n    // if(keys === \"logo\"){\n    //   let logoSrc = \"\"\n    //   if(row.logo === \"PRON\"){\n    //     logoSrc = config.pronIcon\n    //   } else if(row.logo === \"PIPL\"){\n    //     logoSrc = config.piplIcon\n    //   } else if(row.logo === \"LOS\"){\n    //     logoSrc = config.losIcon\n    //   } else if(row.logo === \"EGROSH\"){\n    //     logoSrc = config.groshIcon\n    //   } else {\n    //     logoSrc = row.logo\n    //   }\n    //   return <Td last={j===columns.length-1} first={j===0} key={j}>\n    //     <Img alt={logoSrc} src={logoSrc} />\n    //   </Td>\n    // }\n    if (keys.length === 2) {\n      return /*#__PURE__*/React.createElement(Td, {\n        last: j === columns.length - 1,\n        first: j === 0,\n        key: j\n      }, row[keys[0]][keys[1]]);\n    } else if (keys.length === 3) {\n      return /*#__PURE__*/React.createElement(Td, {\n        last: j === columns.length - 1,\n        first: j === 0,\n        key: j\n      }, row[keys[0]][keys[1]][keys[2]]);\n    }\n\n    return /*#__PURE__*/React.createElement(Td, {\n      last: j === columns.length - 1,\n      first: j === 0,\n      key: j\n    }, row[keys]);\n  }))))));\n};\n\nmodule.exportDefault(Table);\nconst TableWrapper = styled.div(props => ({\n  overflowX: \"auto\",\n  width: \"100%\"\n}));\nconst Wrapper = styled.table(props => ({\n  width: \"100%\",\n  borderCollapse: \"collapse\"\n}));\nconst InnerWrapper = styled.tbody(props => ({}));\nconst Tr = styled.tr(props => ({\n  borderBottom: \"1px solid rgba(0, 0, 0, 0.07)\"\n}));\nconst Th = styled.th(props => ({\n  textAlign: \"left\",\n  borderTopLeftRadius: props.first ? 5 : 0,\n  borderBottomLeftRadius: props.first ? 5 : 0,\n  borderTopRightRadius: props.last ? 5 : 0,\n  borderBottomRightRadius: props.last ? 5 : 0,\n  background: \"#D8D9DA\",\n  color: \"black\",\n  paddingTop: 8,\n  paddingBottom: 8,\n  paddingLeft: 30,\n  fontSize: 15,\n  fontWeight: 500\n}));\nconst Td = styled.td(props => ({\n  paddingLeft: 30,\n  paddingTop: 20,\n  paddingBottom: 20\n}));\nconst Img = styled.img(props => ({\n  height: 30\n}));","map":{"version":3,"sources":["client/game/Table.jsx"],"names":["styled","module","link","default","v","React","Table","columns","rows","values","onLoadMore","more","fetchMore","dataLength","setMore","action","loadMore","variables","offset","updateQuery","prev","fetchMoreResult","me","transactions","length","newObject1","Object","assign","newObject2","console","log","map","item","i","row","keys","j","exportDefault","TableWrapper","div","props","overflowX","width","Wrapper","table","borderCollapse","InnerWrapper","tbody","Tr","tr","borderBottom","Th","th","textAlign","borderTopLeftRadius","first","borderBottomLeftRadius","borderTopRightRadius","last","borderBottomRightRadius","background","color","paddingTop","paddingBottom","paddingLeft","fontSize","fontWeight","Td","td","Img","img","height"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport React from 'react';\n\n\nconst Table = ({ columns, rows, values, onLoadMore, more, fetchMore, dataLength, setMore, action }) => {\n\n  const loadMore = () => {\n    fetchMore({\n      variables: {\n        offset: dataLength\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (fetchMoreResult.me.transactions.length<1){\n          setMore(false)\n          return prev;\n        } \n        let newObject1 = Object.assign({}, prev.me, {transactions: [...prev.me.transactions, ...fetchMoreResult.me.transactions]});\n        let newObject2 = Object.assign({}, prev, {me: newObject1});\n        console.log(newObject2)\n        return newObject2\n      }\n    })\n  }\n\n  return(\n    <TableWrapper>\n      <Wrapper>\n        <InnerWrapper>\n          <Tr>\n            {columns.map((item, i) => (\n               <Th key={i} last={i===columns.length-1} first={i===0}>{item}</Th>\n            ))}\n          </Tr>\n          {rows.map((row, i) => (\n            <Tr key={i}>\n              {values.map((keys, j) => {\n\n                // if(keys === \"logo\"){\n                //   let logoSrc = \"\"\n                //   if(row.logo === \"PRON\"){\n                //     logoSrc = config.pronIcon\n                //   } else if(row.logo === \"PIPL\"){\n                //     logoSrc = config.piplIcon\n                //   } else if(row.logo === \"LOS\"){\n                //     logoSrc = config.losIcon\n                //   } else if(row.logo === \"EGROSH\"){\n                //     logoSrc = config.groshIcon\n                //   } else {\n                //     logoSrc = row.logo\n                //   }\n                //   return <Td last={j===columns.length-1} first={j===0} key={j}>\n                //     <Img alt={logoSrc} src={logoSrc} />\n                //   </Td>\n                // }\n\n                if(keys.length === 2){\n                  return <Td last={j===columns.length-1} first={j===0} key={j}>{row[keys[0]][keys[1]]}</Td>\n                } else if(keys.length === 3){\n                  return <Td last={j===columns.length-1} first={j===0} key={j}>{row[keys[0]][keys[1]][keys[2]]}</Td>\n                }\n                return <Td last={j===columns.length-1} first={j===0} key={j}>{row[keys]}</Td>\n              })}\n            </Tr>\n          ))}\n        </InnerWrapper>\n      </Wrapper>\n    </TableWrapper>\n  )\n}\n\nexport default Table\n\n\nconst TableWrapper = styled.div(props => ({\n  overflowX:\"auto\",\n  width:\"100%\",\n}));\nconst Wrapper = styled.table(props => ({\n  width:\"100%\",\n  borderCollapse: \"collapse\",\n}));\nconst InnerWrapper = styled.tbody(props => ({\n\n}));\nconst Tr = styled.tr(props => ({\n  borderBottom:\"1px solid rgba(0, 0, 0, 0.07)\",\n\n}));\nconst Th = styled.th(props => ({\n  textAlign:\"left\",\n  borderTopLeftRadius:props.first ? 5 : 0, \n  borderBottomLeftRadius:props.first ? 5 : 0,\n  borderTopRightRadius:props.last ? 5 : 0, \n  borderBottomRightRadius:props.last ? 5 : 0,\n  background:\"#D8D9DA\",\n  color:\"black\",\n  paddingTop:8,\n  paddingBottom:8,\n  paddingLeft:30,\n  fontSize:15,\n  fontWeight:500,\n}));\nconst Td = styled.td(props => ({\n  paddingLeft:30,\n  paddingTop:20,\n  paddingBottom:20,\n}));\nconst Img = styled.img(props => ({\n  height:30,\n}));\n"]},"sourceType":"module","hash":"9ae23a0dadb43b42dd57cf23d72c9dda4ebcb186"}
