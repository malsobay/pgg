{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/games/games.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/api/games/games.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/games/games.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/games/games.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/games/games.js"}},"code":"module.export({\n  Games: () => Games\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet Counter;\nmodule.link(\"../../lib/counters\", {\n  Counter(v) {\n    Counter = v;\n  }\n\n}, 1);\nlet statusSchema;\nmodule.link(\"../batches/status-schema\", {\n  statusSchema(v) {\n    statusSchema = v;\n  }\n\n}, 2);\nlet BelongsTo, HasManyByRef, TimestampSchema;\nmodule.link(\"../default-schemas\", {\n  BelongsTo(v) {\n    BelongsTo = v;\n  },\n\n  HasManyByRef(v) {\n    HasManyByRef = v;\n  },\n\n  TimestampSchema(v) {\n    TimestampSchema = v;\n  }\n\n}, 3);\nlet DebugModeSchema, UserDataSchema;\nmodule.link(\"../default-schemas.js\", {\n  DebugModeSchema(v) {\n    DebugModeSchema = v;\n  },\n\n  UserDataSchema(v) {\n    UserDataSchema = v;\n  }\n\n}, 4);\nlet GameLobbies;\nmodule.link(\"../game-lobbies/game-lobbies\", {\n  GameLobbies(v) {\n    GameLobbies = v;\n  }\n\n}, 5);\nlet Treatments;\nmodule.link(\"../treatments/treatments\", {\n  Treatments(v) {\n    Treatments = v;\n  }\n\n}, 6);\nlet Batches;\nmodule.link(\"../batches/batches\", {\n  Batches(v) {\n    Batches = v;\n  }\n\n}, 7);\nlet Players;\nmodule.link(\"../players/players\", {\n  Players(v) {\n    Players = v;\n  }\n\n}, 8);\nlet Stages;\nmodule.link(\"../stages/stages\", {\n  Stages(v) {\n    Stages = v;\n  }\n\n}, 9);\nlet Rounds;\nmodule.link(\"../rounds/rounds\", {\n  Rounds(v) {\n    Rounds = v;\n  }\n\n}, 10);\n\nclass GamesCollection extends Mongo.Collection {\n  insert(doc, callback) {\n    doc.index = Counter.inc(\"games\");\n    return super.insert(doc, callback);\n  }\n\n}\n\nconst Games = new GamesCollection(\"games\");\nGames.schema = new SimpleSchema({\n  // Auto-incremented number assigned to games as they are created\n  index: {\n    type: SimpleSchema.Integer\n  },\n  // estFinishedTime is adding up all stages timings when the game is\n  // created/started to estimate when the game should be done at the latests.\n  estFinishedTime: {\n    type: Date,\n    index: 1\n  },\n  // Time the game actually finished\n  finishedAt: {\n    type: Date,\n    optional: true,\n    index: 1\n  },\n  // Indicates which stage is ongoing\n  currentStageId: {\n    type: String,\n    optional: true,\n    regEx: SimpleSchema.RegEx.Id,\n    index: 1\n  },\n  endReason: {\n    label: \"Ended Reason\",\n    type: String,\n    optional: true,\n    regEx: /[a-zA-Z0-9_]+/\n  }\n});\n\nif (Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) {\n  Games.schema.extend(DebugModeSchema);\n}\n\nGames.schema.extend(TimestampSchema);\nGames.schema.extend(UserDataSchema);\nGames.schema.extend(BelongsTo(\"GameLobbies\", false));\nGames.schema.extend(BelongsTo(\"Treatments\"));\nGames.schema.extend(HasManyByRef(\"Rounds\"));\nGames.schema.extend(HasManyByRef(\"Players\"));\nGames.schema.extend(BelongsTo(\"Batches\")); // We are denormalizing the parent batch status in order to make clean queries\n\nGames.schema.extend(statusSchema);\nGames.attachSchema(Games.schema);","map":{"version":3,"sources":["packages/empirica:core/api/games/games.js"],"names":["module","export","Games","SimpleSchema","link","default","v","Counter","statusSchema","BelongsTo","HasManyByRef","TimestampSchema","DebugModeSchema","UserDataSchema","GameLobbies","Treatments","Batches","Players","Stages","Rounds","GamesCollection","Mongo","Collection","insert","doc","callback","index","inc","schema","type","Integer","estFinishedTime","Date","finishedAt","optional","currentStageId","String","regEx","RegEx","Id","endReason","label","Meteor","isDevelopment","settings","public","debug_gameDebugMode","extend","attachSchema"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport { Counter } from \"../../lib/counters\";\nimport { statusSchema } from \"../batches/status-schema\";\nimport { BelongsTo, HasManyByRef, TimestampSchema } from \"../default-schemas\";\nimport { DebugModeSchema, UserDataSchema } from \"../default-schemas.js\";\nimport { GameLobbies } from \"../game-lobbies/game-lobbies\";\nimport { Treatments } from \"../treatments/treatments\";\nimport { Batches } from \"../batches/batches\";\nimport { Players } from \"../players/players\";\nimport { Stages } from \"../stages/stages\";\nimport { Rounds } from \"../rounds/rounds\";\n\nclass GamesCollection extends Mongo.Collection {\n  insert(doc, callback) {\n    doc.index = Counter.inc(\"games\");\n    return super.insert(doc, callback);\n  }\n}\n\nexport const Games = new GamesCollection(\"games\");\n\nGames.schema = new SimpleSchema({\n  // Auto-incremented number assigned to games as they are created\n  index: {\n    type: SimpleSchema.Integer\n  },\n\n  // estFinishedTime is adding up all stages timings when the game is\n  // created/started to estimate when the game should be done at the latests.\n  estFinishedTime: {\n    type: Date,\n    index: 1\n  },\n\n  // Time the game actually finished\n  finishedAt: {\n    type: Date,\n    optional: true,\n    index: 1\n  },\n\n  // Indicates which stage is ongoing\n  currentStageId: {\n    type: String,\n    optional: true,\n    regEx: SimpleSchema.RegEx.Id,\n    index: 1\n  },\n\n  endReason: {\n    label: \"Ended Reason\",\n    type: String,\n    optional: true,\n    regEx: /[a-zA-Z0-9_]+/\n  }\n});\n\nif (Meteor.isDevelopment || Meteor.settings.public.debug_gameDebugMode) {\n  Games.schema.extend(DebugModeSchema);\n}\n\nGames.schema.extend(TimestampSchema);\nGames.schema.extend(UserDataSchema);\nGames.schema.extend(BelongsTo(\"GameLobbies\", false));\nGames.schema.extend(BelongsTo(\"Treatments\"));\nGames.schema.extend(HasManyByRef(\"Rounds\"));\nGames.schema.extend(HasManyByRef(\"Players\"));\nGames.schema.extend(BelongsTo(\"Batches\"));\n// We are denormalizing the parent batch status in order to make clean queries\nGames.schema.extend(statusSchema);\nGames.attachSchema(Games.schema);\n"]},"sourceType":"module","hash":"ac9e259e5e95f44e02fe59c41f8a44b9d6dd590d"}
