{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/Admin.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/ui/components/Admin.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/Admin.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/Admin.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/Admin.jsx"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  \"default\": function () {\n    return Admin;\n  }\n});\nvar Alert, Button, Classes, Divider, Intent, Menu, MenuItem, Navbar, NavbarDivider, NavbarGroup, NavbarHeading, Popover;\nmodule.link(\"@blueprintjs/core\", {\n  Alert: function (v) {\n    Alert = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  Classes: function (v) {\n    Classes = v;\n  },\n  Divider: function (v) {\n    Divider = v;\n  },\n  Intent: function (v) {\n    Intent = v;\n  },\n  Menu: function (v) {\n    Menu = v;\n  },\n  MenuItem: function (v) {\n    MenuItem = v;\n  },\n  Navbar: function (v) {\n    Navbar = v;\n  },\n  NavbarDivider: function (v) {\n    NavbarDivider = v;\n  },\n  NavbarGroup: function (v) {\n    NavbarGroup = v;\n  },\n  NavbarHeading: function (v) {\n    NavbarHeading = v;\n  },\n  Popover: function (v) {\n    Popover = v;\n  }\n}, 0);\nvar IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames: function (v) {\n    IconNames = v;\n  }\n}, 1);\nvar moment;\nmodule.link(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 2);\nvar PropTypes;\nmodule.link(\"prop-types\", {\n  \"default\": function (v) {\n    PropTypes = v;\n  }\n}, 3);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 4);\nvar Helmet;\nmodule.link(\"react-helmet\", {\n  Helmet: function (v) {\n    Helmet = v;\n  }\n}, 5);\nvar NavLink, Route, Switch;\nmodule.link(\"react-router-dom\", {\n  NavLink: function (v) {\n    NavLink = v;\n  },\n  Route: function (v) {\n    Route = v;\n  },\n  Switch: function (v) {\n    Switch = v;\n  }\n}, 6);\nvar AdminBatchesContainer;\nmodule.link(\"../containers/admin/AdminBatchesContainer.jsx\", {\n  \"default\": function (v) {\n    AdminBatchesContainer = v;\n  }\n}, 7);\nvar AdminFactorsContainer;\nmodule.link(\"../containers/admin/AdminFactorsContainer.jsx\", {\n  \"default\": function (v) {\n    AdminFactorsContainer = v;\n  }\n}, 8);\nvar AdminLobbyConfigsContainer;\nmodule.link(\"../containers/admin/AdminLobbyConfigsContainer.jsx\", {\n  \"default\": function (v) {\n    AdminLobbyConfigsContainer = v;\n  }\n}, 9);\nvar AdminPlayersContainer;\nmodule.link(\"../containers/admin/AdminPlayersContainer.jsx\", {\n  \"default\": function (v) {\n    AdminPlayersContainer = v;\n  }\n}, 10);\nvar AdminTreatmentsContainer;\nmodule.link(\"../containers/admin/AdminTreatmentsContainer.jsx\", {\n  \"default\": function (v) {\n    AdminTreatmentsContainer = v;\n  }\n}, 11);\nvar AdminExport;\nmodule.link(\"./admin/AdminExport.jsx\", {\n  \"default\": function (v) {\n    AdminExport = v;\n  }\n}, 12);\nvar AdminGames;\nmodule.link(\"./admin/AdminGames.jsx\", {\n  \"default\": function (v) {\n    AdminGames = v;\n  }\n}, 13);\nvar withStaticProps;\nmodule.link(\"./Helpers.jsx\", {\n  withStaticProps: function (v) {\n    withStaticProps = v;\n  }\n}, 14);\nvar AlertToaster, SuccessToaster;\nmodule.link(\"./Toasters.jsx\", {\n  AlertToaster: function (v) {\n    AlertToaster = v;\n  },\n  SuccessToaster: function (v) {\n    SuccessToaster = v;\n  }\n}, 15);\nvar configurationPaths = [\"/admin/treatments\", \"/admin/treatments/archived\", \"/admin/factors\", \"/admin/factors/archived\", \"/admin/lobby-configurations\", \"/admin/lobby-configurations/archived\"];\n\nvar NavBarLink = function (_ref) {\n  var path = _ref.path,\n      name = _ref.name,\n      _ref$exact = _ref.exact,\n      exact = _ref$exact === void 0 ? false : _ref$exact;\n  return /*#__PURE__*/React.createElement(NavLink, {\n    exact: exact,\n    to: path,\n    activeClassName: Classes.ACTIVE,\n    className: [Classes.BUTTON, Classes.MINIMAL].join(\" \")\n  }, name);\n};\n\nvar Admin = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Admin, _React$Component);\n\n  var _super = _createSuper(Admin);\n\n  function Admin(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this.handleConfigImport = function () {\n      _this.uploadRef.current.click();\n    };\n\n    _this.onImportConfigFileSelected = function (event) {\n      var file = event.currentTarget.files[0];\n      event.currentTarget.value = null;\n\n      if (!file) {\n        AlertToaster.show({\n          message: \"No file selected\"\n        });\n        return;\n      }\n\n      _this.setState({\n        importing: true\n      });\n\n      var r = new FileReader();\n\n      r.onload = function (e) {\n        var text = e.target.result;\n        console.log(\"Got the file: \" + \"name: \" + file.name + \"type: \" + file.type + \"size: \" + file.size + \" bytes:\");\n        Meteor.call(\"adminImportConfiguration\", {\n          text: text\n        }, function (err) {\n          _this.setState({\n            importing: false\n          });\n\n          if (err) {\n            AlertToaster.show({\n              message: \"Failed to import: \" + err\n            });\n            return;\n          } else {\n            SuccessToaster.show({\n              message: \"Import Successful!\"\n            });\n          }\n        });\n      };\n\n      r.readAsText(file);\n    };\n\n    _this.handleConfigExport = function () {\n      _this.setState({\n        exporting: true\n      });\n\n      Meteor.call(\"adminExportConfiguration\", function (err, yaml) {\n        _this.setState({\n          exporting: false\n        });\n\n        if (err) {\n          AlertToaster.show({\n            message: \"Failed to export configuration: \" + err\n          });\n        } else {\n          console.log(yaml);\n          var ts = moment().format(\"YYYY-MM-DD HH-mm-ss\");\n          var filename = \"Empirica Configuration - \" + ts + \".yaml\";\n          var a = document.createElement(\"a\");\n          a.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(yaml));\n          a.setAttribute(\"download\", filename);\n          a.style.display = \"none\";\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        }\n      });\n    };\n\n    _this.setMode = function (mode) {\n      var router = _this.context.router;\n      var path;\n\n      switch (mode) {\n        case \"monitoring\":\n          path = \"/admin\";\n          break;\n\n        case \"configuration\":\n          path = \"/admin/treatments\";\n          break;\n\n        default:\n          console.error(\"unknown mode: \" + mode);\n          return;\n      }\n\n      _this.setState({\n        mode: mode\n      });\n\n      router.history.push(path);\n    };\n\n    _this.setBodyDark = function (mode) {\n      if (mode === \"configuration\") {\n        document.body.classList.add(Classes.DARK);\n      } else {\n        document.body.classList.remove(Classes.DARK);\n      }\n    };\n\n    _this.handleOpenApp = function () {\n      window.open(\"/\", \"_blank\");\n    };\n\n    _this.handleLogout = function () {\n      Meteor.logout();\n    };\n\n    _this.handleResetGames = function () {\n      _this.setState({\n        isOpenResetGames: false\n      });\n\n      if (!_this.resetDatabaseIsActived()) {\n        return;\n      }\n\n      Meteor.call(\"adminResetDB\", true, function (err) {\n        if (err) {\n          AlertToaster.show({\n            message: \"Failed to reset games: \" + err\n          });\n          return;\n        } else {\n          SuccessToaster.show({\n            message: \"Games reset!\"\n          });\n        }\n      });\n    };\n\n    _this.handleResetApp = function () {\n      _this.setState({\n        isOpenResetApp: false\n      });\n\n      if (!_this.resetDatabaseIsActived()) {\n        return;\n      }\n\n      Meteor.call(\"adminResetDB\", function (err) {\n        if (err) {\n          AlertToaster.show({\n            message: \"Failed to reset app: \" + err\n          });\n          return;\n        } else {\n          SuccessToaster.show({\n            message: \"App reset!\"\n          });\n        }\n      });\n    };\n\n    var _mode = configurationPaths.includes(props.location.pathname) ? \"configuration\" : \"monitoring\";\n\n    _this.state = {\n      mode: _mode,\n      isOpenResetGames: false,\n      isOpenResetApp: false\n    };\n\n    _this.setBodyDark(_mode);\n\n    _this.uploadRef = React.createRef();\n    return _this;\n  }\n\n  var _proto = Admin.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      this.redirectLoggedOut(this.props);\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      this.redirectLoggedOut(nextProps);\n\n      if (this.props.location.pathname !== nextProps.location.pathname) {\n        var mode = configurationPaths.includes(nextProps.location.pathname) ? \"configuration\" : \"monitoring\";\n\n        if (mode !== this.state.mode) {\n          this.setState({\n            mode: mode\n          });\n          this.setBodyDark(mode);\n        }\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  _proto.resetDatabaseIsActived = function () {\n    function resetDatabaseIsActived() {\n      return Meteor.isDevelopment || Meteor.settings.public.debug_resetDatabase;\n    }\n\n    return resetDatabaseIsActived;\n  }();\n\n  _proto.redirectLoggedOut = function () {\n    function redirectLoggedOut(props) {\n      var user = props.user,\n          loggingIn = props.loggingIn,\n          loginPath = props.loginPath;\n      var router = this.context.router;\n\n      if (!loggingIn && !user) {\n        router.history.push(loginPath || \"/login\");\n      }\n    }\n\n    return redirectLoggedOut;\n  }();\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          user = _this$props.user,\n          loggingIn = _this$props.loggingIn;\n      var _this$state = this.state,\n          mode = _this$state.mode,\n          importing = _this$state.importing,\n          exporting = _this$state.exporting,\n          isOpenResetGames = _this$state.isOpenResetGames,\n          isOpenResetApp = _this$state.isOpenResetApp;\n\n      if (loggingIn || !user) {\n        return null;\n      }\n\n      var isConfigMode = mode === \"configuration\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"admin\"\n      }, /*#__PURE__*/React.createElement(Helmet, null, /*#__PURE__*/React.createElement(\"title\", null, \"Empirica Admin\")), /*#__PURE__*/React.createElement(Navbar, {\n        className: \"header\"\n      }, /*#__PURE__*/React.createElement(NavbarGroup, {\n        align: \"left\"\n      }, /*#__PURE__*/React.createElement(NavbarHeading, null, /*#__PURE__*/React.createElement(\"strong\", null, \"Empirica\"), /*#__PURE__*/React.createElement(Divider, {\n        tagName: \"span\"\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: Classes.TEXT_MUTED\n      }, isConfigMode ? \"Configuration\" : \"Monitoring\")), isConfigMode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBarLink, {\n        path: \"/admin/treatments\",\n        name: \"Treatments\"\n      }), /*#__PURE__*/React.createElement(NavBarLink, {\n        path: \"/admin/factors\",\n        name: \"Factors\"\n      }), /*#__PURE__*/React.createElement(NavBarLink, {\n        path: \"/admin/lobby-configurations\",\n        name: \"Lobby Configurations\"\n      }), /*#__PURE__*/React.createElement(NavbarDivider, null), /*#__PURE__*/React.createElement(Button, {\n        text: \"Import\",\n        minimal: true,\n        icon: IconNames.IMPORT,\n        onClick: this.handleConfigImport,\n        loading: importing\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        ref: this.uploadRef,\n        onChange: this.onImportConfigFileSelected,\n        type: \"file\"\n      }), /*#__PURE__*/React.createElement(Button, {\n        text: \"Export\",\n        minimal: true,\n        icon: IconNames.EXPORT,\n        onClick: this.handleConfigExport,\n        loading: exporting\n      })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavBarLink, {\n        exact: true,\n        path: \"/admin\",\n        name: \"Batches\"\n      }), /*#__PURE__*/React.createElement(NavBarLink, {\n        path: \"/admin/games\",\n        name: \"Games\"\n      }), /*#__PURE__*/React.createElement(NavBarLink, {\n        path: \"/admin/players\",\n        name: \"Players\"\n      }), /*#__PURE__*/React.createElement(NavBarLink, {\n        path: \"/admin/export\",\n        name: \"Export\"\n      }))), /*#__PURE__*/React.createElement(NavbarGroup, {\n        align: \"right\"\n      }, isConfigMode ? /*#__PURE__*/React.createElement(Button, {\n        icon: IconNames.PLAY,\n        onClick: this.setMode.bind(this, \"monitoring\")\n      }, \"Monitoring\") : /*#__PURE__*/React.createElement(Button, {\n        icon: IconNames.COG,\n        onClick: this.setMode.bind(this, \"configuration\")\n      }, \"Configuration\"), /*#__PURE__*/React.createElement(NavbarDivider, null), this.resetDatabaseIsActived() ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Popover, {\n        content: /*#__PURE__*/React.createElement(Menu, null, /*#__PURE__*/React.createElement(MenuItem, {\n          intent: Intent.WARNING,\n          icon: IconNames.ERASER,\n          text: \"Reset Games\",\n          onClick: function () {\n            return _this2.setState({\n              isOpenResetGames: true\n            });\n          }\n        }), /*#__PURE__*/React.createElement(MenuItem, {\n          intent: Intent.DANGER,\n          icon: IconNames.TRASH,\n          text: \"Reset Entire App\",\n          onClick: function () {\n            return _this2.setState({\n              isOpenResetApp: true\n            });\n          }\n        }))\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: Classes.MINIMAL,\n        icon: IconNames.ERASER,\n        text: \"Reset\"\n      })), /*#__PURE__*/React.createElement(Alert, {\n        className: isConfigMode ? Classes.DARK : \"\",\n        canOutsideClickCancel: true,\n        canEscapeKeyCancel: true,\n        confirmButtonText: \"Reset Games\",\n        cancelButtonText: \"Cancel\",\n        intent: Intent.WARNING,\n        icon: IconNames.ERASER,\n        isOpen: isOpenResetGames,\n        onCancel: function () {\n          return _this2.setState({\n            isOpenResetGames: false\n          });\n        },\n        onConfirm: this.handleResetGames\n      }, /*#__PURE__*/React.createElement(\"p\", null, \"This will remove batches/games/players and keep treatments/factors.\"), /*#__PURE__*/React.createElement(\"p\", null, \"Do you wish to continue?\")), /*#__PURE__*/React.createElement(Alert, {\n        className: isConfigMode ? Classes.DARK : \"\",\n        canOutsideClickCancel: true,\n        canEscapeKeyCancel: true,\n        confirmButtonText: \"Reset Entire App\",\n        cancelButtonText: \"Cancel\",\n        intent: Intent.DANGER,\n        icon: IconNames.TRASH,\n        isOpen: isOpenResetApp,\n        onCancel: function () {\n          return _this2.setState({\n            isOpenResetApp: false\n          });\n        },\n        onConfirm: this.handleResetApp\n      }, /*#__PURE__*/React.createElement(\"p\", null, \"You are about to delete all data in the DB!\"), /*#__PURE__*/React.createElement(\"p\", null, \"Are you sure you want to do that?\"))) : \"\", /*#__PURE__*/React.createElement(NavbarDivider, null), \" \", /*#__PURE__*/React.createElement(Button, {\n        className: Classes.MINIMAL,\n        icon: IconNames.PLAY,\n        text: \"Open App\",\n        onClick: this.handleOpenApp\n      }), /*#__PURE__*/React.createElement(NavbarDivider, null), \" \", /*#__PURE__*/React.createElement(Button, {\n        className: Classes.MINIMAL,\n        icon: IconNames.LOG_OUT,\n        text: \"Logout\",\n        onClick: this.handleLogout\n      }))), /*#__PURE__*/React.createElement(\"main\", null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin\",\n        exact: true,\n        component: AdminBatchesContainer\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/batches/archived\",\n        component: withStaticProps(AdminBatchesContainer, {\n          archived: true\n        })\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/games\",\n        component: AdminGames\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/players/retired\",\n        component: withStaticProps(AdminPlayersContainer, {\n          retired: true\n        })\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/players\",\n        component: AdminPlayersContainer\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/export\",\n        component: AdminExport\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/treatments/archived\",\n        component: withStaticProps(AdminTreatmentsContainer, {\n          archived: true\n        })\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/treatments\",\n        component: withStaticProps(AdminTreatmentsContainer, {\n          archived: false\n        })\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/lobby-configurations/archived\",\n        component: withStaticProps(AdminLobbyConfigsContainer, {\n          archived: true\n        })\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/lobby-configurations\",\n        component: withStaticProps(AdminLobbyConfigsContainer, {\n          archived: false\n        })\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/factors/archived\",\n        component: withStaticProps(AdminFactorsContainer, {\n          archived: true\n        })\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/admin/factors\",\n        component: AdminFactorsContainer\n      }))));\n    }\n\n    return render;\n  }();\n\n  return Admin;\n}(React.Component);\n\nAdmin.propTypes = {\n  user: PropTypes.object,\n  // Current meteor user\n  loggingIn: PropTypes.bool,\n  // Current meteor user logging in\n  loading: PropTypes.bool // Subscription status\n\n};\nAdmin.contextTypes = {\n  router: PropTypes.object\n};","map":{"version":3,"sources":["packages/empirica:core/ui/components/Admin.jsx"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","Admin","Alert","Button","Classes","Divider","Intent","Menu","MenuItem","Navbar","NavbarDivider","NavbarGroup","NavbarHeading","Popover","IconNames","moment","PropTypes","React","Helmet","NavLink","Route","Switch","AdminBatchesContainer","AdminFactorsContainer","AdminLobbyConfigsContainer","AdminPlayersContainer","AdminTreatmentsContainer","AdminExport","AdminGames","withStaticProps","AlertToaster","SuccessToaster","configurationPaths","NavBarLink","path","name","exact","ACTIVE","BUTTON","MINIMAL","join","props","handleConfigImport","uploadRef","current","click","onImportConfigFileSelected","event","file","currentTarget","files","value","show","message","setState","importing","r","FileReader","onload","e","text","target","result","console","log","type","size","Meteor","call","err","readAsText","handleConfigExport","exporting","yaml","ts","format","filename","a","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","removeChild","setMode","mode","router","context","error","history","push","setBodyDark","classList","add","DARK","remove","handleOpenApp","window","open","handleLogout","logout","handleResetGames","isOpenResetGames","resetDatabaseIsActived","handleResetApp","isOpenResetApp","includes","location","pathname","state","createRef","componentDidMount","redirectLoggedOut","componentWillReceiveProps","nextProps","isDevelopment","settings","public","debug_resetDatabase","user","loggingIn","loginPath","render","isConfigMode","TEXT_MUTED","IMPORT","EXPORT","PLAY","bind","COG","WARNING","ERASER","DANGER","TRASH","LOG_OUT","archived","retired","Component","propTypes","object","bool","loading","contextTypes"],"mappings":"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","sourcesContent":["import {\n  Alert,\n  Button,\n  Classes,\n  Divider,\n  Intent,\n  Menu,\n  MenuItem,\n  Navbar,\n  NavbarDivider,\n  NavbarGroup,\n  NavbarHeading,\n  Popover\n} from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { NavLink, Route, Switch } from \"react-router-dom\";\nimport AdminBatchesContainer from \"../containers/admin/AdminBatchesContainer.jsx\";\nimport AdminFactorsContainer from \"../containers/admin/AdminFactorsContainer.jsx\";\nimport AdminLobbyConfigsContainer from \"../containers/admin/AdminLobbyConfigsContainer.jsx\";\nimport AdminPlayersContainer from \"../containers/admin/AdminPlayersContainer.jsx\";\nimport AdminTreatmentsContainer from \"../containers/admin/AdminTreatmentsContainer.jsx\";\nimport AdminExport from \"./admin/AdminExport.jsx\";\nimport AdminGames from \"./admin/AdminGames.jsx\";\nimport { withStaticProps } from \"./Helpers.jsx\";\nimport { AlertToaster, SuccessToaster } from \"./Toasters.jsx\";\n\nconst configurationPaths = [\n  \"/admin/treatments\",\n  \"/admin/treatments/archived\",\n  \"/admin/factors\",\n  \"/admin/factors/archived\",\n  \"/admin/lobby-configurations\",\n  \"/admin/lobby-configurations/archived\"\n];\n\nconst NavBarLink = ({ path, name, exact = false }) => (\n  <NavLink\n    exact={exact}\n    to={path}\n    activeClassName={Classes.ACTIVE}\n    className={[Classes.BUTTON, Classes.MINIMAL].join(\" \")}\n  >\n    {name}\n  </NavLink>\n);\n\nexport default class Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const mode = configurationPaths.includes(props.location.pathname)\n      ? \"configuration\"\n      : \"monitoring\";\n    this.state = { mode, isOpenResetGames: false, isOpenResetApp: false };\n    this.setBodyDark(mode);\n    this.uploadRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.redirectLoggedOut(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.redirectLoggedOut(nextProps);\n\n    if (this.props.location.pathname !== nextProps.location.pathname) {\n      const mode = configurationPaths.includes(nextProps.location.pathname)\n        ? \"configuration\"\n        : \"monitoring\";\n      if (mode !== this.state.mode) {\n        this.setState({ mode });\n        this.setBodyDark(mode);\n      }\n    }\n  }\n\n  handleConfigImport = () => {\n    this.uploadRef.current.click();\n  };\n\n  onImportConfigFileSelected = event => {\n    const file = event.currentTarget.files[0];\n    event.currentTarget.value = null;\n    if (!file) {\n      AlertToaster.show({ message: \"No file selected\" });\n      return;\n    }\n\n    this.setState({ importing: true });\n\n    var r = new FileReader();\n    r.onload = e => {\n      var text = e.target.result;\n      console.log(\n        \"Got the file: \" +\n          \"name: \" +\n          file.name +\n          \"type: \" +\n          file.type +\n          \"size: \" +\n          file.size +\n          \" bytes:\"\n      );\n\n      Meteor.call(\"adminImportConfiguration\", { text }, err => {\n        this.setState({ importing: false });\n        if (err) {\n          AlertToaster.show({ message: `Failed to import: ${err}` });\n          return;\n        } else {\n          SuccessToaster.show({\n            message: \"Import Successful!\"\n          });\n        }\n      });\n    };\n    r.readAsText(file);\n  };\n\n  handleConfigExport = () => {\n    this.setState({ exporting: true });\n    Meteor.call(\"adminExportConfiguration\", (err, yaml) => {\n      this.setState({ exporting: false });\n      if (err) {\n        AlertToaster.show({\n          message: `Failed to export configuration: ${err}`\n        });\n      } else {\n        console.log(yaml);\n        const ts = moment().format(\"YYYY-MM-DD HH-mm-ss\");\n        const filename = `Empirica Configuration - ${ts}.yaml`;\n        const a = document.createElement(\"a\");\n        a.setAttribute(\n          \"href\",\n          \"data:text/plain;charset=utf-8,\" + encodeURIComponent(yaml)\n        );\n        a.setAttribute(\"download\", filename);\n        a.style.display = \"none\";\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      }\n    });\n  };\n\n  setMode = mode => {\n    const { router } = this.context;\n\n    let path;\n    switch (mode) {\n      case \"monitoring\":\n        path = \"/admin\";\n        break;\n      case \"configuration\":\n        path = \"/admin/treatments\";\n        break;\n      default:\n        console.error(`unknown mode: ${mode}`);\n        return;\n    }\n\n    this.setState({ mode });\n    router.history.push(path);\n  };\n\n  setBodyDark = mode => {\n    if (mode === \"configuration\") {\n      document.body.classList.add(Classes.DARK);\n    } else {\n      document.body.classList.remove(Classes.DARK);\n    }\n  };\n\n  resetDatabaseIsActived() {\n    return Meteor.isDevelopment || Meteor.settings.public.debug_resetDatabase;\n  }\n\n  handleOpenApp = () => {\n    window.open(\"/\", \"_blank\");\n  };\n\n  handleLogout = () => {\n    Meteor.logout();\n  };\n\n  handleResetGames = () => {\n    this.setState({ isOpenResetGames: false });\n    if (!this.resetDatabaseIsActived()) {\n      return;\n    }\n    Meteor.call(\"adminResetDB\", true, err => {\n      if (err) {\n        AlertToaster.show({ message: `Failed to reset games: ${err}` });\n        return;\n      } else {\n        SuccessToaster.show({\n          message: \"Games reset!\"\n        });\n      }\n    });\n  };\n\n  handleResetApp = () => {\n    this.setState({ isOpenResetApp: false });\n    if (!this.resetDatabaseIsActived()) {\n      return;\n    }\n    Meteor.call(\"adminResetDB\", err => {\n      if (err) {\n        AlertToaster.show({ message: `Failed to reset app: ${err}` });\n        return;\n      } else {\n        SuccessToaster.show({\n          message: \"App reset!\"\n        });\n      }\n    });\n  };\n\n  redirectLoggedOut(props) {\n    const { user, loggingIn, loginPath } = props;\n    const { router } = this.context;\n\n    if (!loggingIn && !user) {\n      router.history.push(loginPath || `/login`);\n    }\n  }\n\n  render() {\n    const { user, loggingIn } = this.props;\n    const {\n      mode,\n      importing,\n      exporting,\n      isOpenResetGames,\n      isOpenResetApp\n    } = this.state;\n\n    if (loggingIn || !user) {\n      return null;\n    }\n\n    const isConfigMode = mode === \"configuration\";\n\n    return (\n      <div className=\"admin\">\n        <Helmet>\n          <title>Empirica Admin</title>\n        </Helmet>\n        <Navbar className=\"header\">\n          <NavbarGroup align=\"left\">\n            <NavbarHeading>\n              <strong>Empirica</strong>\n              <Divider tagName=\"span\" />\n              <span className={Classes.TEXT_MUTED}>\n                {isConfigMode ? \"Configuration\" : \"Monitoring\"}\n              </span>\n            </NavbarHeading>\n            {isConfigMode ? (\n              <>\n                <NavBarLink path=\"/admin/treatments\" name=\"Treatments\" />\n                <NavBarLink path=\"/admin/factors\" name=\"Factors\" />\n                <NavBarLink\n                  path=\"/admin/lobby-configurations\"\n                  name=\"Lobby Configurations\"\n                />\n                <NavbarDivider />\n                <Button\n                  text=\"Import\"\n                  minimal\n                  icon={IconNames.IMPORT}\n                  onClick={this.handleConfigImport}\n                  loading={importing}\n                />\n                <input\n                  ref={this.uploadRef}\n                  onChange={this.onImportConfigFileSelected}\n                  type=\"file\"\n                />\n                <Button\n                  text=\"Export\"\n                  minimal\n                  icon={IconNames.EXPORT}\n                  onClick={this.handleConfigExport}\n                  loading={exporting}\n                />\n              </>\n            ) : (\n              <>\n                <NavBarLink exact path=\"/admin\" name=\"Batches\" />\n                <NavBarLink path=\"/admin/games\" name=\"Games\" />\n                <NavBarLink path=\"/admin/players\" name=\"Players\" />\n                <NavBarLink path=\"/admin/export\" name=\"Export\" />\n              </>\n            )}\n          </NavbarGroup>\n\n          <NavbarGroup align=\"right\">\n            {isConfigMode ? (\n              <Button\n                icon={IconNames.PLAY}\n                onClick={this.setMode.bind(this, \"monitoring\")}\n              >\n                Monitoring\n              </Button>\n            ) : (\n              <Button\n                icon={IconNames.COG}\n                onClick={this.setMode.bind(this, \"configuration\")}\n              >\n                Configuration\n              </Button>\n            )}\n            <NavbarDivider />\n            {this.resetDatabaseIsActived() ? (\n              <>\n                <Popover\n                  content={\n                    <Menu>\n                      <MenuItem\n                        intent={Intent.WARNING}\n                        icon={IconNames.ERASER}\n                        text=\"Reset Games\"\n                        onClick={() =>\n                          this.setState({ isOpenResetGames: true })\n                        }\n                      />\n\n                      <MenuItem\n                        intent={Intent.DANGER}\n                        icon={IconNames.TRASH}\n                        text=\"Reset Entire App\"\n                        onClick={() => this.setState({ isOpenResetApp: true })}\n                      />\n                    </Menu>\n                  }\n                >\n                  <Button\n                    className={Classes.MINIMAL}\n                    icon={IconNames.ERASER}\n                    text=\"Reset\"\n                  />\n                </Popover>\n\n                <Alert\n                  className={isConfigMode ? Classes.DARK : \"\"}\n                  canOutsideClickCancel\n                  canEscapeKeyCancel\n                  confirmButtonText=\"Reset Games\"\n                  cancelButtonText=\"Cancel\"\n                  intent={Intent.WARNING}\n                  icon={IconNames.ERASER}\n                  isOpen={isOpenResetGames}\n                  onCancel={() => this.setState({ isOpenResetGames: false })}\n                  onConfirm={this.handleResetGames}\n                >\n                  <p>\n                    This will remove batches/games/players and keep\n                    treatments/factors.\n                  </p>\n                  <p>Do you wish to continue?</p>\n                </Alert>\n\n                <Alert\n                  className={isConfigMode ? Classes.DARK : \"\"}\n                  canOutsideClickCancel\n                  canEscapeKeyCancel\n                  confirmButtonText=\"Reset Entire App\"\n                  cancelButtonText=\"Cancel\"\n                  intent={Intent.DANGER}\n                  icon={IconNames.TRASH}\n                  isOpen={isOpenResetApp}\n                  onCancel={() => this.setState({ isOpenResetApp: false })}\n                  onConfirm={this.handleResetApp}\n                >\n                  <p>You are about to delete all data in the DB!</p>\n                  <p>Are you sure you want to do that?</p>\n                </Alert>\n              </>\n            ) : (\n              \"\"\n            )}\n            <NavbarDivider />{\" \"}\n            <Button\n              className={Classes.MINIMAL}\n              icon={IconNames.PLAY}\n              text=\"Open App\"\n              onClick={this.handleOpenApp}\n            />\n            <NavbarDivider />{\" \"}\n            <Button\n              className={Classes.MINIMAL}\n              icon={IconNames.LOG_OUT}\n              text=\"Logout\"\n              onClick={this.handleLogout}\n            />\n          </NavbarGroup>\n        </Navbar>\n\n        <main>\n          <Switch>\n            <Route path=\"/admin\" exact component={AdminBatchesContainer} />\n            <Route\n              path=\"/admin/batches/archived\"\n              component={withStaticProps(AdminBatchesContainer, {\n                archived: true\n              })}\n            />\n            <Route path=\"/admin/games\" component={AdminGames} />\n            <Route\n              path=\"/admin/players/retired\"\n              component={withStaticProps(AdminPlayersContainer, {\n                retired: true\n              })}\n            />\n            <Route path=\"/admin/players\" component={AdminPlayersContainer} />\n            <Route path=\"/admin/export\" component={AdminExport} />\n            <Route\n              path=\"/admin/treatments/archived\"\n              component={withStaticProps(AdminTreatmentsContainer, {\n                archived: true\n              })}\n            />\n            <Route\n              path=\"/admin/treatments\"\n              component={withStaticProps(AdminTreatmentsContainer, {\n                archived: false\n              })}\n            />\n            <Route\n              path=\"/admin/lobby-configurations/archived\"\n              component={withStaticProps(AdminLobbyConfigsContainer, {\n                archived: true\n              })}\n            />\n            <Route\n              path=\"/admin/lobby-configurations\"\n              component={withStaticProps(AdminLobbyConfigsContainer, {\n                archived: false\n              })}\n            />\n            <Route\n              path=\"/admin/factors/archived\"\n              component={withStaticProps(AdminFactorsContainer, {\n                archived: true\n              })}\n            />\n            <Route path=\"/admin/factors\" component={AdminFactorsContainer} />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nAdmin.propTypes = {\n  user: PropTypes.object, // Current meteor user\n  loggingIn: PropTypes.bool, // Current meteor user logging in\n  loading: PropTypes.bool // Subscription status\n};\n\nAdmin.contextTypes = {\n  router: PropTypes.object\n};\n"]},"sourceType":"module","hash":"a07349047865c00537e8924dea561b8a6ec23749"}
