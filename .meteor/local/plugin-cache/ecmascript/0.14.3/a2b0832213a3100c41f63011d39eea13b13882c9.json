{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factors/methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/api/factors/methods.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factors/methods.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/factors/methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/factors/methods.js"}},"code":"module.export({\n  createFactor: () => createFactor,\n  updateFactor: () => updateFactor\n});\nlet ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod(v) {\n    ValidatedMethod = v;\n  }\n\n}, 0);\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 1);\nlet Factors;\nmodule.link(\"./factors.js\", {\n  Factors(v) {\n    Factors = v;\n  }\n\n}, 2);\nlet FactorTypes;\nmodule.link(\"../factor-types/factor-types.js\", {\n  FactorTypes(v) {\n    FactorTypes = v;\n  }\n\n}, 3);\nlet IdSchema;\nmodule.link(\"../default-schemas.js\", {\n  IdSchema(v) {\n    IdSchema = v;\n  }\n\n}, 4);\nlet handleFactorValueErrorMessage;\nmodule.link(\"../../lib/utils.js\", {\n  handleFactorValueErrorMessage(v) {\n    handleFactorValueErrorMessage = v;\n  }\n\n}, 5);\nconst createFactor = new ValidatedMethod({\n  name: \"Factors.methods.create\",\n  validate: Factors.schema.omit(\"createdAt\", \"updatedAt\").validator(),\n\n  run(factor) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const factorType = FactorTypes.findOne(factor.factorTypeId);\n\n    if (!factorType) {\n      throw new Error(\"not found\");\n    }\n\n    const errors = Factors.valueValidation(factorType, factor.value);\n\n    if (errors) {\n      throw new Error(errors.map(e => handleFactorValueErrorMessage(e)).join(\"\\n\"));\n    }\n\n    Factors.insert(factor, {\n      autoConvert: false\n    });\n  }\n\n});\nconst updateFactor = new ValidatedMethod({\n  name: \"Factors.methods.update\",\n  validate: Factors.schema.pick(\"name\").extend(IdSchema).extend(new SimpleSchema({\n    archived: {\n      type: Boolean,\n      optional: true\n    }\n  })).validator(),\n\n  run(_ref) {\n    let {\n      _id,\n      name,\n      archived\n    } = _ref;\n\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const factor = Factors.findOne(_id);\n\n    if (!factor) {\n      throw new Error(\"not found\");\n    }\n\n    const $set = {},\n          $unset = {};\n\n    if (name !== undefined) {\n      $set.name = name;\n    }\n\n    if (archived !== undefined) {\n      if (archived) {\n        if (factor.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $set.archivedAt = new Date();\n        $set.archivedById = this.userId;\n      }\n\n      if (!archived) {\n        if (!factor.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $unset.archivedAt = true;\n        $unset.archivedById = true;\n      }\n    }\n\n    const modifier = {};\n\n    if (Object.keys($set).length > 0) {\n      modifier.$set = $set;\n    }\n\n    if (Object.keys($unset).length > 0) {\n      modifier.$unset = $unset;\n    }\n\n    if (Object.keys(modifier).length === 0) {\n      return;\n    }\n\n    Factors.update(_id, modifier);\n  }\n\n});","map":{"version":3,"sources":["packages/empirica:core/api/factors/methods.js"],"names":["module","export","createFactor","updateFactor","ValidatedMethod","link","v","SimpleSchema","default","Factors","FactorTypes","IdSchema","handleFactorValueErrorMessage","name","validate","schema","omit","validator","run","factor","userId","Error","factorType","findOne","factorTypeId","errors","valueValidation","value","map","e","join","insert","autoConvert","pick","extend","archived","type","Boolean","optional","_id","$set","$unset","undefined","archivedAt","Date","archivedById","modifier","Object","keys","length","update"],"mappings":"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","sourcesContent":["import { ValidatedMethod } from \"meteor/mdg:validated-method\";\nimport SimpleSchema from \"simpl-schema\";\n\nimport { Factors } from \"./factors.js\";\nimport { FactorTypes } from \"../factor-types/factor-types.js\";\nimport { IdSchema } from \"../default-schemas.js\";\nimport { handleFactorValueErrorMessage } from \"../../lib/utils.js\";\n\nexport const createFactor = new ValidatedMethod({\n  name: \"Factors.methods.create\",\n\n  validate: Factors.schema.omit(\"createdAt\", \"updatedAt\").validator(),\n\n  run(factor) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const factorType = FactorTypes.findOne(factor.factorTypeId);\n    if (!factorType) {\n      throw new Error(\"not found\");\n    }\n\n    const errors = Factors.valueValidation(factorType, factor.value);\n    if (errors) {\n      throw new Error(\n        errors.map(e => handleFactorValueErrorMessage(e)).join(\"\\n\")\n      );\n    }\n\n    Factors.insert(factor, { autoConvert: false });\n  }\n});\n\nexport const updateFactor = new ValidatedMethod({\n  name: \"Factors.methods.update\",\n\n  validate: Factors.schema\n    .pick(\"name\")\n    .extend(IdSchema)\n    .extend(\n      new SimpleSchema({\n        archived: {\n          type: Boolean,\n          optional: true\n        }\n      })\n    )\n    .validator(),\n\n  run({ _id, name, archived }) {\n    if (!this.userId) {\n      throw new Error(\"unauthorized\");\n    }\n\n    const factor = Factors.findOne(_id);\n    if (!factor) {\n      throw new Error(\"not found\");\n    }\n\n    const $set = {},\n      $unset = {};\n    if (name !== undefined) {\n      $set.name = name;\n    }\n\n    if (archived !== undefined) {\n      if (archived) {\n        if (factor.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $set.archivedAt = new Date();\n        $set.archivedById = this.userId;\n      }\n\n      if (!archived) {\n        if (!factor.archivedAt) {\n          throw new Error(\"not found\");\n        }\n\n        $unset.archivedAt = true;\n        $unset.archivedById = true;\n      }\n    }\n\n    const modifier = {};\n    if (Object.keys($set).length > 0) {\n      modifier.$set = $set;\n    }\n    if (Object.keys($unset).length > 0) {\n      modifier.$unset = $unset;\n    }\n    if (Object.keys(modifier).length === 0) {\n      return;\n    }\n\n    Factors.update(_id, modifier);\n  }\n});\n"]},"sourceType":"module","hash":"a2b0832213a3100c41f63011d39eea13b13882c9"}
