{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/client/intro/QuizCopy.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/intro/QuizCopy.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/client/intro/QuizCopy.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/client/intro/QuizCopy.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/intro/QuizCopy.jsx"}},"code":"module.export({\n  default: () => QuizCopy\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Centered;\nmodule.link(\"meteor/empirica:core\", {\n  Centered(v) {\n    Centered = v;\n  }\n\n}, 1);\n\nclass QuizCopy extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      both: \"\",\n      falseB: \"\",\n      falseA: \"\",\n      neither: \"\"\n    };\n\n    this.onChangeValue = event => {\n      console.log(event.target.value);\n      console.log(event.target.name);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.both !== \"220 points\" || this.state.falseB !== \"105 points\" || this.state.falseA !== \"205 points\" || this.state.neither !== \"100 points\") {\n        alert(\"Incorrect! Read the instructions, and please try again.\");\n      } else {\n        this.props.onNext();\n      }\n    };\n  }\n\n  render() {\n    const {\n      hasPrev,\n      hasNext,\n      onNext,\n      onPrev\n    } = this.props;\n    const {\n      both,\n      falseA,\n      falseB,\n      neither\n    } = this.state;\n    const answerOptions = [{\n      answerText: \"220 points\",\n      correct: \"both\"\n    }, {\n      answerText: \"105 points\",\n      correct: \"falseB\"\n    }, {\n      answerText: \"205 points\",\n      correct: \"falseA\"\n    }, {\n      answerText: \"100 points\",\n      correct: \"neither\"\n    }];\n    return /*#__PURE__*/React.createElement(Centered, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz\"\n    }, /*#__PURE__*/React.createElement(\"h1\", null, \"Quiz \"), /*#__PURE__*/React.createElement(\"h3\", null, \"Before we start, we would like to introduce the structure of the game and check whether you have truly understood the structure of the game.\"), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h4\", null, \"Imagine the following game:\"), /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null), /*#__PURE__*/React.createElement(\"th\", null, \"Player B contributes\"), /*#__PURE__*/React.createElement(\"th\", null, \"Player B doesn't contribute\")), /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \"You contribute\"), /*#__PURE__*/React.createElement(\"th\", null, \"220 / 220\"), /*#__PURE__*/React.createElement(\"th\", null, \"105 / 205\")), /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", null, \" You don't contribute \"), /*#__PURE__*/React.createElement(\"th\", null, \"205 / 105\"), /*#__PURE__*/React.createElement(\"th\", null, \"100 / 100\")))), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit\n    }, /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sum\"\n    }, \"Imagine that you contributed to the common pool. If Player B contributes, you get:\"), answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.onChangeValue\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"both\",\n      value: answerOption.answerText\n    }), answerOption.answerText))), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"horse\"\n    }, \"Imagine that you contributed to the common pool. If Player B doesn't contribute, you get:\"), answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.onChangeValue\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"falseB\",\n      value: answerOption.answerText\n    }), answerOption.answerText))), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sum\"\n    }, \"Imagine that you didn't contribute to the common pool. If Player B contributes, you get:\"), answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.onChangeValue\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"falseA\",\n      value: answerOption.answerText\n    }), answerOption.answerText))), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sum\"\n    }, \"Imagine that you didn't contribute to the common pool. If Player B doesn't contribute, you get:\"), answerOptions.map(answerOption => /*#__PURE__*/React.createElement(\"div\", {\n      onChange: this.onChangeValue\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"neither\",\n      value: answerOption.answerText\n    }), answerOption.answerText))), /*#__PURE__*/React.createElement(\"p\", null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: onPrev,\n      disabled: !hasPrev\n    }, \"Back to instructions\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\"\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["client/intro/QuizCopy.jsx"],"names":["module","export","default","QuizCopy","React","link","v","Centered","Component","state","both","falseB","falseA","neither","onChangeValue","event","console","log","target","value","name","setState","handleSubmit","preventDefault","alert","props","onNext","render","hasPrev","hasNext","onPrev","answerOptions","answerText","correct","map","answerOption"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Centered } from \"meteor/empirica:core\";\n\nexport default class QuizCopy extends React.Component {\n  state = { both: \"\", falseB: \"\", falseA: \"\", neither: \"\" };\n\n  /*handleAnswerOptionClick = (event) => {\n    const el = event.currentTarget;\n    this.setState({ [el.name]: el.value.trim().toLowerCase() });\n  };\n  */\n\n  onChangeValue = (event) => {\n    console.log(event.target.value);\n    console.log(event.target.name);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (\n      this.state.both !== \"220 points\" ||\n      this.state.falseB !== \"105 points\" ||\n      this.state.falseA !== \"205 points\" ||\n      this.state.neither !== \"100 points\"\n    ) {\n      alert(\"Incorrect! Read the instructions, and please try again.\");\n    } else {\n      this.props.onNext();\n    }\n  };\n\n  render() {\n    const { hasPrev, hasNext, onNext, onPrev } = this.props;\n    const { both, falseA, falseB, neither } = this.state;\n    const answerOptions = [\n      { answerText: \"220 points\", correct: \"both\" },\n      { answerText: \"105 points\", correct: \"falseB\" },\n      { answerText: \"205 points\", correct: \"falseA\" },\n      { answerText: \"100 points\", correct: \"neither\" },\n    ];\n    return (\n      <Centered>\n        <div className=\"quiz\">\n          <h1>Quiz </h1>\n          <h3>\n            Before we start, we would like to introduce the structure of the\n            game and check whether you have truly understood the structure of\n            the game.\n          </h3>\n          <div>\n            <h4>Imagine the following game:</h4>\n            <table>\n              <tr>\n                <th></th>\n                <th>Player B contributes</th>\n                <th>Player B doesn't contribute</th>\n              </tr>\n              <tr>\n                <th>You contribute</th>\n                <th>220 / 220</th>\n                <th>105 / 205</th>\n              </tr>\n              <tr>\n                <th> You don't contribute </th>\n                <th>205 / 105</th>\n                <th>100 / 100</th>\n              </tr>\n            </table>\n          </div>\n          <form onSubmit={this.handleSubmit}>\n            <p>\n              <label htmlFor=\"sum\">\n                Imagine that you contributed to the common pool. If Player B\n                contributes, you get:\n              </label>\n              {answerOptions.map((answerOption) => (\n                <div onChange={this.onChangeValue}>\n                  <input\n                    type=\"radio\"\n                    name=\"both\"\n                    value={answerOption.answerText}\n                  />\n                  {answerOption.answerText}\n                </div>\n              ))}\n            </p>\n            <p>\n              <label htmlFor=\"horse\">\n                Imagine that you contributed to the common pool. If Player B\n                doesn't contribute, you get:\n              </label>\n              {answerOptions.map((answerOption) => (\n                <div onChange={this.onChangeValue}>\n                  <input\n                    type=\"radio\"\n                    name=\"falseB\"\n                    value={answerOption.answerText}\n                  />\n                  {answerOption.answerText}\n                </div>\n              ))}\n            </p>\n            <p>\n              <label htmlFor=\"sum\">\n                Imagine that you didn't contribute to the common pool. If Player\n                B contributes, you get:\n              </label>\n              {answerOptions.map((answerOption) => (\n                <div onChange={this.onChangeValue}>\n                  <input\n                    type=\"radio\"\n                    name=\"falseA\"\n                    value={answerOption.answerText}\n                  />\n                  {answerOption.answerText}\n                </div>\n              ))}\n            </p>\n            <p>\n              <label htmlFor=\"sum\">\n                Imagine that you didn't contribute to the common pool. If Player\n                B doesn't contribute, you get:\n              </label>\n              {answerOptions.map((answerOption) => (\n                <div onChange={this.onChangeValue}>\n                  <input\n                    type=\"radio\"\n                    name=\"neither\"\n                    value={answerOption.answerText}\n                  />\n                  {answerOption.answerText}\n                </div>\n              ))}\n            </p>\n            <p>\n              <button type=\"button\" onClick={onPrev} disabled={!hasPrev}>\n                Back to instructions\n              </button>\n              <button type=\"submit\">Submit</button>\n            </p>\n          </form>\n        </div>\n      </Centered>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"4e005e7aeb541f6f3aa99a9313adc918aeea4e60"}
