{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/stages/stages.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/api/stages/stages.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/stages/stages.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/stages/stages.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/stages/stages.js"}},"code":"module.export({\n  Stages: () => Stages\n});\nlet SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  default(v) {\n    SimpleSchema = v;\n  }\n\n}, 0);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 1);\nlet BelongsTo, TimestampSchema, UserDataSchema, HasManyByRef;\nmodule.link(\"../default-schemas\", {\n  BelongsTo(v) {\n    BelongsTo = v;\n  },\n\n  TimestampSchema(v) {\n    TimestampSchema = v;\n  },\n\n  UserDataSchema(v) {\n    UserDataSchema = v;\n  },\n\n  HasManyByRef(v) {\n    HasManyByRef = v;\n  }\n\n}, 2);\nlet Games;\nmodule.link(\"../games/games\", {\n  Games(v) {\n    Games = v;\n  }\n\n}, 3);\nlet PlayerStages;\nmodule.link(\"../player-stages/player-stages\", {\n  PlayerStages(v) {\n    PlayerStages = v;\n  }\n\n}, 4);\nlet Rounds;\nmodule.link(\"../rounds/rounds\", {\n  Rounds(v) {\n    Rounds = v;\n  }\n\n}, 5);\nconst Stages = new Mongo.Collection(\"stages\");\nStages.helpers({\n  round() {\n    return Rounds.findOne(this.roundId);\n  }\n\n});\nStages.stagePaddingDuration = moment.duration(0.25, \"seconds\");\nStages.schema = new SimpleSchema({\n  // Index represents the 0 based position of the current stage in the ordered\n  // list of a all the game's stages. For display, add 1.\n  index: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 999999 // That's a lot of stages...\n\n  },\n  name: {\n    type: String,\n    max: 64\n  },\n  displayName: {\n    type: String,\n    max: 128 // TODO Add auto value to by default copy the name into the displayName?\n\n  },\n  // This will synchronize the clients timer start time and record start time\n  // for the record\n  startTimeAt: {\n    type: Date,\n    optional: true\n  },\n  durationInSeconds: {\n    type: SimpleSchema.Integer,\n    // One day, that's a lot, but could be \"weird\" experiment, yet no going nuts\n    // into hundreds of years for example.\n    max: 24 * 60 * 60,\n    // It would be difficult to manage a timer that is less than 5s given all\n    // the multi-peer synchronization going on.\n    min: 5\n  }\n});\nStages.schema.extend(TimestampSchema);\nStages.schema.extend(UserDataSchema);\nStages.schema.extend(BelongsTo(\"Rounds\"));\nStages.schema.extend(BelongsTo(\"Games\"));\nStages.schema.extend(HasManyByRef(\"PlayerStages\"));\nStages.attachSchema(Stages.schema);","map":{"version":3,"sources":["packages/empirica:core/api/stages/stages.js"],"names":["module","export","Stages","SimpleSchema","link","default","v","moment","BelongsTo","TimestampSchema","UserDataSchema","HasManyByRef","Games","PlayerStages","Rounds","Mongo","Collection","helpers","round","findOne","roundId","stagePaddingDuration","duration","schema","index","type","Integer","min","max","name","String","displayName","startTimeAt","Date","optional","durationInSeconds","extend","attachSchema"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport moment from \"moment\";\n\nimport {\n  BelongsTo,\n  TimestampSchema,\n  UserDataSchema,\n  HasManyByRef\n} from \"../default-schemas\";\nimport { Games } from \"../games/games\";\nimport { PlayerStages } from \"../player-stages/player-stages\";\nimport { Rounds } from \"../rounds/rounds\";\n\nexport const Stages = new Mongo.Collection(\"stages\");\n\nStages.helpers({\n  round() {\n    return Rounds.findOne(this.roundId);\n  }\n});\n\nStages.stagePaddingDuration = moment.duration(0.25, \"seconds\");\n\nStages.schema = new SimpleSchema({\n  // Index represents the 0 based position of the current stage in the ordered\n  // list of a all the game's stages. For display, add 1.\n  index: {\n    type: SimpleSchema.Integer,\n    min: 0,\n    max: 999999 // That's a lot of stages...\n  },\n  name: {\n    type: String,\n    max: 64\n  },\n  displayName: {\n    type: String,\n    max: 128\n    // TODO Add auto value to by default copy the name into the displayName?\n  },\n  // This will synchronize the clients timer start time and record start time\n  // for the record\n  startTimeAt: {\n    type: Date,\n    optional: true\n  },\n  durationInSeconds: {\n    type: SimpleSchema.Integer,\n    // One day, that's a lot, but could be \"weird\" experiment, yet no going nuts\n    // into hundreds of years for example.\n    max: 24 * 60 * 60,\n    // It would be difficult to manage a timer that is less than 5s given all\n    // the multi-peer synchronization going on.\n    min: 5\n  }\n});\n\nStages.schema.extend(TimestampSchema);\nStages.schema.extend(UserDataSchema);\nStages.schema.extend(BelongsTo(\"Rounds\"));\nStages.schema.extend(BelongsTo(\"Games\"));\nStages.schema.extend(HasManyByRef(\"PlayerStages\"));\nStages.attachSchema(Stages.schema);\n"]},"sourceType":"module","hash":"13fbe9950d16ff96baaa2e473a135dfc96d0c7b7"}
