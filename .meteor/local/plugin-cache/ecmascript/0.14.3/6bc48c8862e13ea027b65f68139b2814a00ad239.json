{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/players/players.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/api/players/players.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/players/players.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/players/players.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/players/players.js"}},"code":"var _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  Players: function () {\n    return Players;\n  },\n  exitStatuses: function () {\n    return exitStatuses;\n  }\n});\nvar SimpleSchema;\nmodule.link(\"simpl-schema\", {\n  \"default\": function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar Counter;\nmodule.link(\"../../lib/counters\", {\n  Counter: function (v) {\n    Counter = v;\n  }\n}, 1);\nvar BelongsTo, TimestampSchema, UserDataSchema;\nmodule.link(\"../default-schemas\", {\n  BelongsTo: function (v) {\n    BelongsTo = v;\n  },\n  TimestampSchema: function (v) {\n    TimestampSchema = v;\n  },\n  UserDataSchema: function (v) {\n    UserDataSchema = v;\n  }\n}, 2);\n\nvar PlayersCollection = /*#__PURE__*/function (_Mongo$Collection) {\n  _inheritsLoose(PlayersCollection, _Mongo$Collection);\n\n  var _super = _createSuper(PlayersCollection);\n\n  function PlayersCollection() {\n    return _Mongo$Collection.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayersCollection.prototype;\n\n  _proto.insert = function () {\n    function insert(doc, callback) {\n      doc.index = Counter.inc(\"players\");\n      return _Mongo$Collection.prototype.insert.call(this, doc, callback);\n    }\n\n    return insert;\n  }();\n\n  return PlayersCollection;\n}(Mongo.Collection);\n\nvar Players = new PlayersCollection(\"players\");\nvar exitStatuses = [\"gameFull\", \"gameCancelled\", \"gameLobbyTimedOut\", \"playerEndedLobbyWait\", \"playerLobbyTimedOut\", \"finished\", \"cancelled\", \"failed\", \"custom\"];\nPlayers.schema = new SimpleSchema({\n  // The Player `id` is used to uniquely identify the player to avoid\n  // having a user play multiple times. It can be any string, for example\n  // an email address, a Mechanical Turk ID, a manually assigned participation\n  // number (saved as string), etc...\n  id: {\n    type: String,\n    max: 256\n  },\n  // True if the player is currently online and idle\n  idle: {\n    label: \"Idle\",\n    type: Boolean,\n    optional: true\n  },\n  // True if the player is currently online\n  online: {\n    label: \"Online\",\n    type: Boolean,\n    optional: true\n  },\n  // Time when the player was last seen online and active\n  lastActivityAt: {\n    label: \"Last Activity At\",\n    type: Date,\n    optional: true\n  },\n  lastLogin: {\n    type: Object,\n    optional: true\n  },\n  \"lastLogin.at\": {\n    type: Date,\n    optional: true\n  },\n  \"lastLogin.ip\": {\n    type: String,\n    optional: true\n  },\n  \"lastLogin.userAgent\": {\n    type: String,\n    optional: true\n  },\n  // Auto-incremented number assigned to players as they are created\n  index: {\n    type: SimpleSchema.Integer\n  },\n  // params contains any URL passed parameters\n  urlParams: {\n    type: Object,\n    blackbox: true,\n    defaultValue: {}\n  },\n  bot: {\n    label: \"Name of bot definition if player is a bot\",\n    type: String,\n    optional: true,\n    index: 1\n  },\n  // Time at witch the player became ready (done with intro)\n  readyAt: {\n    label: \"Ready At\",\n    type: Date,\n    optional: true\n  },\n  timeoutStartedAt: {\n    label: \"Time the first player arrived in the lobby\",\n    type: Date,\n    optional: true\n  },\n  timeoutWaitCount: {\n    label: \"Number of time the player has waited for timeoutStartedAt\",\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 1\n  },\n  exitStepsDone: {\n    type: Array,\n    defaultValue: []\n  },\n  \"exitStepsDone.$\": {\n    type: String\n  },\n  // Failed fields are filled when the player's participation in a game failed\n  exitAt: {\n    label: \"Exited At\",\n    type: Date,\n    optional: true\n  },\n  exitStatus: {\n    label: \"Failed Status\",\n    type: String,\n    optional: true,\n    allowedValues: exitStatuses\n  },\n  exitReason: {\n    label: \"Failed Reason\",\n    type: String,\n    optional: true,\n    regEx: /[a-zA-Z0-9_]+/\n  },\n  // A player can be retired. Retired players should no longer be used in active\n  // game, but NOTHING is done in the code to block that from happening. It's\n  // more of an indicator for debugging down the line.\n  retiredAt: {\n    label: \"Retired At\",\n    type: Date,\n    optional: true\n  },\n  retiredReason: {\n    label: \"Retired Reason\",\n    type: String,\n    optional: true,\n    allowedValues: exitStatuses\n  }\n});\nPlayers.schema.extend(TimestampSchema);\nPlayers.schema.extend(UserDataSchema);\nPlayers.schema.extend(BelongsTo(\"Games\", false));\nPlayers.schema.extend(BelongsTo(\"GameLobbies\", false));\nPlayers.attachSchema(Players.schema);","map":{"version":3,"sources":["packages/empirica:core/api/players/players.js"],"names":["_createSuper","module","link","default","v","_inheritsLoose","export","Players","exitStatuses","SimpleSchema","Counter","BelongsTo","TimestampSchema","UserDataSchema","PlayersCollection","insert","doc","callback","index","inc","Mongo","Collection","schema","id","type","String","max","idle","label","Boolean","optional","online","lastActivityAt","Date","lastLogin","Object","Integer","urlParams","blackbox","defaultValue","bot","readyAt","timeoutStartedAt","timeoutWaitCount","min","exitStepsDone","Array","exitAt","exitStatus","allowedValues","exitReason","regEx","retiredAt","retiredReason","extend","attachSchema"],"mappings":"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","sourcesContent":["import SimpleSchema from \"simpl-schema\";\nimport { Counter } from \"../../lib/counters\";\nimport { BelongsTo, TimestampSchema, UserDataSchema } from \"../default-schemas\";\n\nclass PlayersCollection extends Mongo.Collection {\n  insert(doc, callback) {\n    doc.index = Counter.inc(\"players\");\n    return super.insert(doc, callback);\n  }\n}\n\nexport const Players = new PlayersCollection(\"players\");\n\nexport const exitStatuses = [\n  \"gameFull\",\n  \"gameCancelled\",\n  \"gameLobbyTimedOut\",\n  \"playerEndedLobbyWait\",\n  \"playerLobbyTimedOut\",\n  \"finished\",\n  \"cancelled\",\n  \"failed\",\n  \"custom\"\n];\n\nPlayers.schema = new SimpleSchema({\n  // The Player `id` is used to uniquely identify the player to avoid\n  // having a user play multiple times. It can be any string, for example\n  // an email address, a Mechanical Turk ID, a manually assigned participation\n  // number (saved as string), etc...\n  id: {\n    type: String,\n    max: 256\n  },\n\n  // True if the player is currently online and idle\n  idle: {\n    label: \"Idle\",\n    type: Boolean,\n    optional: true\n  },\n\n  // True if the player is currently online\n  online: {\n    label: \"Online\",\n    type: Boolean,\n    optional: true\n  },\n\n  // Time when the player was last seen online and active\n  lastActivityAt: {\n    label: \"Last Activity At\",\n    type: Date,\n    optional: true\n  },\n\n  lastLogin: { type: Object, optional: true },\n  \"lastLogin.at\": { type: Date, optional: true },\n  \"lastLogin.ip\": { type: String, optional: true },\n  \"lastLogin.userAgent\": { type: String, optional: true },\n\n  // Auto-incremented number assigned to players as they are created\n  index: {\n    type: SimpleSchema.Integer\n  },\n\n  // params contains any URL passed parameters\n  urlParams: {\n    type: Object,\n    blackbox: true,\n    defaultValue: {}\n  },\n\n  bot: {\n    label: \"Name of bot definition if player is a bot\",\n    type: String,\n    optional: true,\n    index: 1\n  },\n\n  // Time at witch the player became ready (done with intro)\n  readyAt: {\n    label: \"Ready At\",\n    type: Date,\n    optional: true\n  },\n\n  timeoutStartedAt: {\n    label: \"Time the first player arrived in the lobby\",\n    type: Date,\n    optional: true\n  },\n  timeoutWaitCount: {\n    label: \"Number of time the player has waited for timeoutStartedAt\",\n    type: SimpleSchema.Integer,\n    optional: true,\n    min: 1\n  },\n\n  exitStepsDone: {\n    type: Array,\n    defaultValue: []\n  },\n  \"exitStepsDone.$\": {\n    type: String\n  },\n\n  // Failed fields are filled when the player's participation in a game failed\n  exitAt: {\n    label: \"Exited At\",\n    type: Date,\n    optional: true\n  },\n  exitStatus: {\n    label: \"Failed Status\",\n    type: String,\n    optional: true,\n    allowedValues: exitStatuses\n  },\n  exitReason: {\n    label: \"Failed Reason\",\n    type: String,\n    optional: true,\n    regEx: /[a-zA-Z0-9_]+/\n  },\n\n  // A player can be retired. Retired players should no longer be used in active\n  // game, but NOTHING is done in the code to block that from happening. It's\n  // more of an indicator for debugging down the line.\n  retiredAt: {\n    label: \"Retired At\",\n    type: Date,\n    optional: true\n  },\n  retiredReason: {\n    label: \"Retired Reason\",\n    type: String,\n    optional: true,\n    allowedValues: exitStatuses\n  }\n});\n\nPlayers.schema.extend(TimestampSchema);\nPlayers.schema.extend(UserDataSchema);\nPlayers.schema.extend(BelongsTo(\"Games\", false));\nPlayers.schema.extend(BelongsTo(\"GameLobbies\", false));\nPlayers.attachSchema(Players.schema);\n"]},"sourceType":"module","hash":"6bc48c8862e13ea027b65f68139b2814a00ad239"}
