{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _createSuper;\n\nmodule.link(\"@babel/runtime/helpers/createSuper\", {\n  default: function (v) {\n    _createSuper = v;\n  }\n}, 1);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 2);\nmodule.export({\n  \"default\": function () {\n    return AdminNewTreatment;\n  }\n});\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Link;\nmodule.link(\"react-router-dom\", {\n  Link: function (v) {\n    Link = v;\n  }\n}, 1);\nvar Callout, Classes, Button, Dialog, FormGroup, Intent, RadioGroup, Radio;\nmodule.link(\"@blueprintjs/core\", {\n  Callout: function (v) {\n    Callout = v;\n  },\n  Classes: function (v) {\n    Classes = v;\n  },\n  Button: function (v) {\n    Button = v;\n  },\n  Dialog: function (v) {\n    Dialog = v;\n  },\n  FormGroup: function (v) {\n    FormGroup = v;\n  },\n  Intent: function (v) {\n    Intent = v;\n  },\n  RadioGroup: function (v) {\n    RadioGroup = v;\n  },\n  Radio: function (v) {\n    Radio = v;\n  }\n}, 2);\nvar IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames: function (v) {\n    IconNames = v;\n  }\n}, 3);\nvar AlertToaster;\nmodule.link(\"../Toasters.jsx\", {\n  AlertToaster: function (v) {\n    AlertToaster = v;\n  }\n}, 4);\nvar createTreatment;\nmodule.link(\"../../../api/treatments/methods.js\", {\n  createTreatment: function (v) {\n    createTreatment = v;\n  }\n}, 5);\n\nvar AdminNewTreatment = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AdminNewTreatment, _React$Component);\n\n  var _super = _createSuper(AdminNewTreatment);\n\n  function AdminNewTreatment() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      selected: {},\n      name: \"\"\n    };\n\n    _this.handleNameChange = function () {\n      var name = _this.nameField.value;\n\n      _this.setState({\n        name: name\n      });\n    };\n\n    _this.handleFactorChange = function (type, event) {\n      var _objectSpread2;\n\n      var factorId = event.currentTarget.value;\n\n      var selected = _objectSpread({}, _this.state.selected, (_objectSpread2 = {}, _objectSpread2[type] = factorId, _objectSpread2));\n\n      _this.setState({\n        selected: selected\n      });\n    };\n\n    _this.handleNewTreatment = function (event) {\n      var onClose = _this.props.onClose;\n      var _this$state = _this.state,\n          name = _this$state.name,\n          selected = _this$state.selected;\n      event.preventDefault();\n\n      var keys = _.compact(_.keys(selected));\n\n      var factorIds = _.compact(_.values(selected));\n\n      if (keys.length !== factorIds.length) {\n        var missing = keys.join(\", \");\n        var msg = \"A value for each factor must be selected. (missing: \" + missing + \")\";\n        AlertToaster.show({\n          message: msg\n        });\n        return;\n      }\n\n      var params = {\n        name: name,\n        factorIds: factorIds\n      };\n      createTreatment.call(params, function (err) {\n        if (err) {\n          if (err.details) {\n            try {\n              var details = JSON.parse(err.details);\n              var out = details[0].details.map(function (er) {\n                switch (er.type) {\n                  case \"required\":\n                    return er.name + \" is required.\";\n\n                  default:\n                    console.error(\"unknown error type\", er);\n                }\n              }).join(\" \");\n              AlertToaster.show({\n                message: out\n              });\n            } catch (e) {\n              console.error(JSON.stringify(err));\n              AlertToaster.show({\n                message: String(err.message)\n              });\n            }\n          } else {\n            AlertToaster.show({\n              message: String(err.message)\n            });\n          }\n\n          return;\n        }\n\n        onClose();\n\n        _this.setState({\n          name: \"\",\n          selected: {}\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = AdminNewTreatment.prototype;\n\n  _proto.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          factors = _this$props.factors,\n          factorTypes = _this$props.factorTypes,\n          onClose = _this$props.onClose;\n      var _this$state2 = this.state,\n          name = _this$state2.name,\n          selected = _this$state2.selected;\n      var types = factorTypes.filter(function (t) {\n        return !t.archivedAt;\n      });\n      return /*#__PURE__*/React.createElement(Dialog, {\n        className: \"admin\",\n        icon: IconNames.PROPERTIES,\n        isOpen: isOpen,\n        onClose: onClose,\n        title: \"New Treatment\"\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"new-treatment\",\n        onSubmit: this.handleNewTreatment\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: Classes.DIALOG_BODY\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        label: \"Name\",\n        labelInfo: \"(optional)\",\n        labelFor: \"name\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: Classes.INPUT,\n        type: \"text\",\n        dir: \"auto\",\n        name: \"name\",\n        id: \"name\",\n        autoComplete: \"off\",\n        value: name,\n        onChange: this.handleNameChange,\n        ref: function (e) {\n          return _this2.nameField = e;\n        } // pattern={/^[a-zA-Z0-9_]+$/.source}\n\n      })), _.map(types, function (type) {\n        var conds = _.filter(factors, function (factor) {\n          return factor.factorTypeId === type._id;\n        });\n\n        var requiredClass = type.required ? \"required\" : \"\";\n\n        if (conds.length === 0) {\n          return /*#__PURE__*/React.createElement(FormGroup, {\n            label: type.name,\n            labelFor: \"name\",\n            className: requiredClass,\n            key: type._id\n          }, /*#__PURE__*/React.createElement(Callout, {\n            icon: type.required ? IconNames.WARNING_SIGN : IconNames.INFO_SIGN,\n            intent: type.required ? Intent.DANGER : null\n          }, \"There are no factor values for the\", type.required ? /*#__PURE__*/React.createElement(\"strong\", null, \" required \") : \" \", type.name, \" factor type yet.\", \" \", /*#__PURE__*/React.createElement(Link, {\n            to: \"/admin/factors\"\n          }, \"Add factor values\"), \".\"));\n        }\n\n        return /*#__PURE__*/React.createElement(RadioGroup, {\n          key: type._id,\n          label: type.name,\n          onChange: _this2.handleFactorChange.bind(_this2, type._id),\n          selectedValue: selected[type._id],\n          inline: true,\n          className: requiredClass\n        }, _.map(conds, function (cond) {\n          return /*#__PURE__*/React.createElement(Radio, {\n            key: cond._id,\n            label: cond.label(),\n            value: cond._id\n          });\n        }));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: Classes.DIALOG_FOOTER\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: Classes.DIALOG_FOOTER_ACTIONS\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        text: \"Create Treatment\",\n        intent: Intent.PRIMARY\n      })))));\n    }\n\n    return render;\n  }();\n\n  return AdminNewTreatment;\n}(React.Component);","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminNewTreatment.jsx"],"names":["_objectSpread","module","link","default","v","_createSuper","_inheritsLoose","export","AdminNewTreatment","React","Link","Callout","Classes","Button","Dialog","FormGroup","Intent","RadioGroup","Radio","IconNames","AlertToaster","createTreatment","state","selected","name","handleNameChange","nameField","value","setState","handleFactorChange","type","event","factorId","currentTarget","handleNewTreatment","onClose","props","preventDefault","keys","_","compact","factorIds","values","length","missing","join","msg","show","message","params","call","err","details","JSON","parse","out","map","er","console","error","e","stringify","String","render","isOpen","factors","factorTypes","types","filter","t","archivedAt","PROPERTIES","DIALOG_BODY","INPUT","conds","factor","factorTypeId","_id","requiredClass","required","WARNING_SIGN","INFO_SIGN","DANGER","bind","cond","label","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","PRIMARY","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Callout,\n  Classes,\n  Button,\n  Dialog,\n  FormGroup,\n  Intent,\n  RadioGroup,\n  Radio\n} from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\nimport { AlertToaster } from \"../Toasters.jsx\";\nimport { createTreatment } from \"../../../api/treatments/methods.js\";\n\nexport default class AdminNewTreatment extends React.Component {\n  state = { selected: {}, name: \"\" };\n\n  handleNameChange = () => {\n    const name = this.nameField.value;\n    this.setState({ name });\n  };\n\n  handleFactorChange = (type, event) => {\n    const factorId = event.currentTarget.value;\n    const selected = {\n      ...this.state.selected,\n      [type]: factorId\n    };\n    this.setState({ selected });\n  };\n\n  handleNewTreatment = event => {\n    const { onClose } = this.props;\n    const { name, selected } = this.state;\n    event.preventDefault();\n\n    const keys = _.compact(_.keys(selected));\n    const factorIds = _.compact(_.values(selected));\n\n    if (keys.length !== factorIds.length) {\n      const missing = keys.join(\", \");\n      const msg = `A value for each factor must be selected. (missing: ${missing})`;\n      AlertToaster.show({ message: msg });\n      return;\n    }\n\n    const params = { name, factorIds };\n    createTreatment.call(params, err => {\n      if (err) {\n        if (err.details) {\n          try {\n            const details = JSON.parse(err.details);\n            const out = details[0].details\n              .map(er => {\n                switch (er.type) {\n                  case \"required\":\n                    return `${er.name} is required.`;\n                  default:\n                    console.error(\"unknown error type\", er);\n                }\n              })\n              .join(\" \");\n            AlertToaster.show({ message: out });\n          } catch (e) {\n            console.error(JSON.stringify(err));\n            AlertToaster.show({ message: String(err.message) });\n          }\n        } else {\n          AlertToaster.show({ message: String(err.message) });\n        }\n        return;\n      }\n      onClose();\n      this.setState({\n        name: \"\",\n        selected: {}\n      });\n    });\n  };\n\n  render() {\n    const { isOpen, factors, factorTypes, onClose } = this.props;\n    const { name, selected } = this.state;\n\n    const types = factorTypes.filter(t => !t.archivedAt);\n\n    return (\n      <Dialog\n        className=\"admin\"\n        icon={IconNames.PROPERTIES}\n        isOpen={isOpen}\n        onClose={onClose}\n        title=\"New Treatment\"\n      >\n        <form className=\"new-treatment\" onSubmit={this.handleNewTreatment}>\n          <div className={Classes.DIALOG_BODY}>\n            <FormGroup label=\"Name\" labelInfo=\"(optional)\" labelFor=\"name\">\n              <input\n                className={Classes.INPUT}\n                type=\"text\"\n                dir=\"auto\"\n                name=\"name\"\n                id=\"name\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={this.handleNameChange}\n                ref={e => (this.nameField = e)}\n                // pattern={/^[a-zA-Z0-9_]+$/.source}\n              />\n            </FormGroup>\n\n            {_.map(types, type => {\n              const conds = _.filter(\n                factors,\n                factor => factor.factorTypeId === type._id\n              );\n              const requiredClass = type.required ? \"required\" : \"\";\n              if (conds.length === 0) {\n                return (\n                  <FormGroup\n                    label={type.name}\n                    labelFor=\"name\"\n                    className={requiredClass}\n                    key={type._id}\n                  >\n                    <Callout\n                      icon={\n                        type.required\n                          ? IconNames.WARNING_SIGN\n                          : IconNames.INFO_SIGN\n                      }\n                      intent={type.required ? Intent.DANGER : null}\n                    >\n                      There are no factor values for the\n                      {type.required ? <strong> required </strong> : \" \"}\n                      {type.name} factor type yet.{\" \"}\n                      <Link to=\"/admin/factors\">Add factor values</Link>.\n                    </Callout>\n                  </FormGroup>\n                );\n              }\n              return (\n                <RadioGroup\n                  key={type._id}\n                  label={type.name}\n                  onChange={this.handleFactorChange.bind(this, type._id)}\n                  selectedValue={selected[type._id]}\n                  inline={true}\n                  className={requiredClass}\n                >\n                  {_.map(conds, cond => (\n                    <Radio\n                      key={cond._id}\n                      label={cond.label()}\n                      value={cond._id}\n                    />\n                  ))}\n                </RadioGroup>\n              );\n            })}\n          </div>\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                type=\"submit\"\n                text=\"Create Treatment\"\n                intent={Intent.PRIMARY}\n              />\n            </div>\n          </div>\n        </form>\n      </Dialog>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"efc825307babaca22cb9cb816f1edcacdcfa5cda"}
