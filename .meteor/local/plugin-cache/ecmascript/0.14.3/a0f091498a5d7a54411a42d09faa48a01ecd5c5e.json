{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-stages/augment.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/empirica:core/api/player-stages/augment.js","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-stages/augment.js","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/api/player-stages/augment.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/api/player-stages/augment.js"}},"code":"module.export({\n  augmentGameLobby: function () {\n    return augmentGameLobby;\n  },\n  augmentPlayerLobby: function () {\n    return augmentPlayerLobby;\n  },\n  augmentPlayer: function () {\n    return augmentPlayer;\n  },\n  augmentPlayerStageRound: function () {\n    return augmentPlayerStageRound;\n  },\n  stubPlayerStageRound: function () {\n    return stubPlayerStageRound;\n  },\n  augmentGameStageRound: function () {\n    return augmentGameStageRound;\n  },\n  stubStageRound: function () {\n    return stubStageRound;\n  }\n});\nvar updateGameData, earlyExitGame;\nmodule.link(\"../games/methods.js\", {\n  updateGameData: function (v) {\n    updateGameData = v;\n  },\n  earlyExitGame: function (v) {\n    earlyExitGame = v;\n  }\n}, 0);\nvar updateGameLobbyData;\nmodule.link(\"../game-lobbies/methods\", {\n  updateGameLobbyData: function (v) {\n    updateGameLobbyData = v;\n  }\n}, 1);\nvar updatePlayerRoundData;\nmodule.link(\"../player-rounds/methods\", {\n  updatePlayerRoundData: function (v) {\n    updatePlayerRoundData = v;\n  }\n}, 2);\nvar PlayerRounds;\nmodule.link(\"../player-rounds/player-rounds\", {\n  PlayerRounds: function (v) {\n    PlayerRounds = v;\n  }\n}, 3);\nvar updatePlayerData, earlyExitPlayer, earlyExitPlayerLobby;\nmodule.link(\"../players/methods.js\", {\n  updatePlayerData: function (v) {\n    updatePlayerData = v;\n  },\n  earlyExitPlayer: function (v) {\n    earlyExitPlayer = v;\n  },\n  earlyExitPlayerLobby: function (v) {\n    earlyExitPlayerLobby = v;\n  }\n}, 4);\nvar playerLog;\nmodule.link(\"../player-logs/methods.js\", {\n  playerLog: function (v) {\n    playerLog = v;\n  }\n}, 5);\nvar updateRoundData;\nmodule.link(\"../rounds/methods.js\", {\n  updateRoundData: function (v) {\n    updateRoundData = v;\n  }\n}, 6);\nvar updateStageData;\nmodule.link(\"../stages/methods.js\", {\n  updateStageData: function (v) {\n    updateStageData = v;\n  }\n}, 7);\nvar submitPlayerStage, updatePlayerStageData;\nmodule.link(\"./methods\", {\n  submitPlayerStage: function (v) {\n    submitPlayerStage = v;\n  },\n  updatePlayerStageData: function (v) {\n    updatePlayerStageData = v;\n  }\n}, 8);\nvar PlayerStages;\nmodule.link(\"./player-stages\", {\n  PlayerStages: function (v) {\n    PlayerStages = v;\n  }\n}, 9);\n\nvar gameSet = function (gameId) {\n  var append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (key, value) {\n    updateGameData.call({\n      gameId: gameId,\n      key: key,\n      value: JSON.stringify(value),\n      append: append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nvar gameLobbySet = function (gameLobbyId) {\n  var append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (key, value) {\n    updateGameLobbyData.call({\n      gameLobbyId: gameLobbyId,\n      key: key,\n      value: JSON.stringify(value),\n      append: append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nvar playerSet = function (playerId) {\n  var append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (key, value) {\n    updatePlayerData.call({\n      playerId: playerId,\n      key: key,\n      value: JSON.stringify(value),\n      append: append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nvar stageSet = function (playerStageId) {\n  var append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (key, value) {\n    updatePlayerStageData.call({\n      playerStageId: playerStageId,\n      key: key,\n      value: JSON.stringify(value),\n      append: append,\n      noCallback: Meteor.isServer\n    });\n  };\n};\n\nvar stageSubmit = function (playerStageId) {\n  return function (cb) {\n    submitPlayerStage.call({\n      playerStageId: playerStageId,\n      noCallback: Meteor.isServer\n    }, cb);\n  };\n};\n\nvar roundSet = function (playerRoundId) {\n  var append = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (key, value) {\n    updatePlayerRoundData.call({\n      playerRoundId: playerRoundId,\n      key: key,\n      value: JSON.stringify(value),\n      append: append,\n      noCallback: Meteor.isServer\n    });\n  };\n}; // Once the operation has succeeded (no throw), set the value\n// undefined is not supported, null is, replace undefineds by nulls.\n\n\nvar set = function (obj, func) {\n  return function (k, v) {\n    var val = v === undefined ? null : v;\n    func(k, val);\n    obj[k] = val;\n  };\n};\n\nvar append = function (obj, func) {\n  return function (k, v) {\n    var val = v === undefined ? null : v;\n    func(k, val);\n\n    if (!obj[k]) {\n      obj[k] = [];\n    }\n\n    obj[k].push(val);\n  };\n};\n\nvar nullFunc = function () {\n  throw \"You called .get(...) or .set(...) but there is no data for the player yet. Did the game run for this player?\";\n};\n\nvar augmentGameLobby = function (gameLobby) {\n  gameLobby.get = function (key) {\n    return gameLobby.data[key];\n  };\n\n  gameLobby.set = set(gameLobby.data, gameLobbySet(gameLobby._id));\n  gameLobby.append = append(gameLobby.data, gameLobbySet(gameLobby._id, true));\n};\n\nvar augmentPlayerLobby = function (player) {\n  var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var stage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var gameLobby = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var playerId = player._id;\n\n  player.exit = function (reason) {\n    return earlyExitPlayerLobby.call({\n      playerId: playerId,\n      exitReason: reason,\n      gameLobbyId: gameLobby._id\n    });\n  };\n\n  player.get = function (key) {\n    return player.data[key];\n  };\n\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n\n  player.log = function (name, data) {\n    playerLog.call({\n      playerId: playerId,\n      name: name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameLobbyId: gameLobby._id\n    });\n  };\n};\n\nvar augmentPlayer = function (player) {\n  var stage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var round = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var game = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var playerId = player._id;\n\n  player.exit = function (reason) {\n    return earlyExitPlayer.call({\n      playerId: playerId,\n      exitReason: reason,\n      gameId: game._id\n    });\n  };\n\n  player.get = function (key) {\n    return player.data[key];\n  };\n\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n\n  player.log = function (name, data) {\n    playerLog.call({\n      playerId: playerId,\n      name: name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameId: game._id\n    });\n  };\n};\n\nvar augmentPlayerStageRound = function (player) {\n  var stage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var round = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var game = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var playerId = player._id;\n  augmentPlayer(player, stage, round, game);\n\n  if (stage) {\n    var playerStage = PlayerStages.findOne({\n      stageId: stage._id,\n      playerId: playerId\n    });\n\n    stage.get = function (key) {\n      return playerStage.data[key];\n    };\n\n    stage.set = set(playerStage.data, stageSet(playerStage._id));\n    stage.append = append(playerStage.data, stageSet(playerStage._id, true));\n    stage.submit = stageSubmit(playerStage._id, function (err) {\n      if (!err) {\n        stage.submitted = true;\n      }\n    });\n    stage.submitted = Boolean(playerStage.submittedAt);\n    stage.submittedAt = playerStage.submittedAt;\n  }\n\n  if (round) {\n    var playerRound = PlayerRounds.findOne({\n      roundId: round._id,\n      playerId: playerId\n    });\n\n    round.get = function (key) {\n      return playerRound.data[key];\n    };\n\n    round.set = set(playerRound.data, roundSet(playerRound._id));\n    round.append = append(playerRound.data, roundSet(playerRound._id, true));\n  }\n};\n\nvar stubPlayerStageRound = function (player, stage, round) {\n  player.get = nullFunc;\n  player.set = nullFunc;\n  player.append = nullFunc;\n\n  if (stage) {\n    stage.get = nullFunc;\n    stage.set = nullFunc;\n    stage.append = nullFunc;\n    stage.submit = nullFunc;\n    stage.submitted = false;\n  }\n\n  if (round) {\n    round.get = nullFunc;\n    round.set = nullFunc;\n    round.append = nullFunc;\n  }\n};\n\nvar augmentGameStageRound = function (game, stage, round) {\n  if (game) {\n    game.get = function (key) {\n      return game.data[key];\n    };\n\n    game.set = set(game.data, gameSet(game._id));\n    game.append = append(game.data, gameSet(game._id, true));\n\n    game.end = function (endReason) {\n      return earlyExitGame.call({\n        gameId: game._id,\n        endReason: endReason,\n        status: \"custom\"\n      });\n    };\n  }\n\n  if (stage) {\n    stage.get = function (key) {\n      return stage.data[key];\n    };\n\n    stage.set = set(stage.data, function (key, value) {\n      updateStageData.call({\n        stageId: stage._id,\n        key: key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    stage.append = append(stage.data, function (key, value) {\n      updateStageData.call({\n        stageId: stage._id,\n        key: key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n\n    stage.submit = function () {\n      throw \"You cannot submit the entire stage at the moment\";\n    };\n  }\n\n  if (round) {\n    round.get = function (key) {\n      return round.data[key];\n    };\n\n    round.set = set(round.data, function (key, value) {\n      updateRoundData.call({\n        roundId: round._id,\n        key: key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    round.append = append(round.data, function (key, value) {\n      updateRoundData.call({\n        roundId: round._id,\n        key: key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n  }\n};\n\nvar stubStageRound = function (stage, round) {\n  stage.get = nullFunc;\n  stage.set = nullFunc;\n  stage.append = nullFunc;\n  stage.submit = nullFunc;\n  round.get = nullFunc;\n  round.set = nullFunc;\n  round.append = nullFunc;\n};","map":{"version":3,"sources":["packages/empirica:core/api/player-stages/augment.js"],"names":["module","export","augmentGameLobby","augmentPlayerLobby","augmentPlayer","augmentPlayerStageRound","stubPlayerStageRound","augmentGameStageRound","stubStageRound","updateGameData","earlyExitGame","link","v","updateGameLobbyData","updatePlayerRoundData","PlayerRounds","updatePlayerData","earlyExitPlayer","earlyExitPlayerLobby","playerLog","updateRoundData","updateStageData","submitPlayerStage","updatePlayerStageData","PlayerStages","gameSet","gameId","append","key","value","call","JSON","stringify","noCallback","Meteor","isServer","gameLobbySet","gameLobbyId","playerSet","playerId","stageSet","playerStageId","stageSubmit","cb","roundSet","playerRoundId","set","obj","func","k","val","undefined","push","nullFunc","gameLobby","get","data","_id","player","round","stage","exit","reason","exitReason","log","name","jsonData","stageId","roundId","game","playerStage","findOne","submit","err","submitted","Boolean","submittedAt","playerRound","end","endReason","status"],"mappings":"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","sourcesContent":["// augment.js\nimport { updateGameData, earlyExitGame } from \"../games/methods.js\";\nimport { updateGameLobbyData } from \"../game-lobbies/methods\";\nimport { updatePlayerRoundData } from \"../player-rounds/methods\";\nimport { PlayerRounds } from \"../player-rounds/player-rounds\";\nimport {\n  updatePlayerData,\n  earlyExitPlayer,\n  earlyExitPlayerLobby\n} from \"../players/methods.js\";\nimport { playerLog } from \"../player-logs/methods.js\";\nimport { updateRoundData } from \"../rounds/methods.js\";\nimport { updateStageData } from \"../stages/methods.js\";\nimport { submitPlayerStage, updatePlayerStageData } from \"./methods\";\nimport { PlayerStages } from \"./player-stages\";\n\nconst gameSet = (gameId, append = false) => (key, value) => {\n  updateGameData.call({\n    gameId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\n\nconst gameLobbySet = (gameLobbyId, append = false) => (key, value) => {\n  updateGameLobbyData.call({\n    gameLobbyId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\n\nconst playerSet = (playerId, append = false) => (key, value) => {\n  updatePlayerData.call({\n    playerId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\nconst stageSet = (playerStageId, append = false) => (key, value) => {\n  updatePlayerStageData.call({\n    playerStageId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\nconst stageSubmit = playerStageId => cb => {\n  submitPlayerStage.call(\n    {\n      playerStageId,\n      noCallback: Meteor.isServer\n    },\n    cb\n  );\n};\nconst roundSet = (playerRoundId, append = false) => (key, value) => {\n  updatePlayerRoundData.call({\n    playerRoundId,\n    key,\n    value: JSON.stringify(value),\n    append,\n    noCallback: Meteor.isServer\n  });\n};\n\n// Once the operation has succeeded (no throw), set the value\n// undefined is not supported, null is, replace undefineds by nulls.\nconst set = (obj, func) => (k, v) => {\n  const val = v === undefined ? null : v;\n  func(k, val);\n  obj[k] = val;\n};\n\nconst append = (obj, func) => (k, v) => {\n  const val = v === undefined ? null : v;\n  func(k, val);\n  if (!obj[k]) {\n    obj[k] = [];\n  }\n  obj[k].push(val);\n};\n\nconst nullFunc = () => {\n  throw \"You called .get(...) or .set(...) but there is no data for the player yet. Did the game run for this player?\";\n};\n\nexport const augmentGameLobby = gameLobby => {\n  gameLobby.get = key => gameLobby.data[key];\n  gameLobby.set = set(gameLobby.data, gameLobbySet(gameLobby._id));\n  gameLobby.append = append(gameLobby.data, gameLobbySet(gameLobby._id, true));\n};\n\nexport const augmentPlayerLobby = (\n  player,\n  round = {},\n  stage = {},\n  gameLobby = {}\n) => {\n  const { _id: playerId } = player;\n\n  player.exit = reason =>\n    earlyExitPlayerLobby.call({\n      playerId,\n      exitReason: reason,\n      gameLobbyId: gameLobby._id\n    });\n  player.get = key => player.data[key];\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n  player.log = (name, data) => {\n    playerLog.call({\n      playerId,\n      name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameLobbyId: gameLobby._id\n    });\n  };\n};\n\nexport const augmentPlayer = (player, stage = {}, round = {}, game = {}) => {\n  const { _id: playerId } = player;\n\n  player.exit = reason =>\n    earlyExitPlayer.call({\n      playerId,\n      exitReason: reason,\n      gameId: game._id\n    });\n  player.get = key => player.data[key];\n  player.set = set(player.data, playerSet(playerId));\n  player.append = append(player.data, playerSet(playerId, true));\n  player.log = (name, data) => {\n    playerLog.call({\n      playerId,\n      name,\n      jsonData: JSON.stringify(data),\n      stageId: stage._id,\n      roundId: round._id,\n      gameId: game._id\n    });\n  };\n};\n\nexport const augmentPlayerStageRound = (\n  player,\n  stage = {},\n  round = {},\n  game = {}\n) => {\n  const { _id: playerId } = player;\n\n  augmentPlayer(player, stage, round, game);\n\n  if (stage) {\n    const playerStage = PlayerStages.findOne({\n      stageId: stage._id,\n      playerId\n    });\n    stage.get = key => playerStage.data[key];\n    stage.set = set(playerStage.data, stageSet(playerStage._id));\n    stage.append = append(playerStage.data, stageSet(playerStage._id, true));\n    stage.submit = stageSubmit(playerStage._id, err => {\n      if (!err) {\n        stage.submitted = true;\n      }\n    });\n    stage.submitted = Boolean(playerStage.submittedAt);\n    stage.submittedAt = playerStage.submittedAt;\n  }\n\n  if (round) {\n    const playerRound = PlayerRounds.findOne({\n      roundId: round._id,\n      playerId\n    });\n    round.get = key => playerRound.data[key];\n    round.set = set(playerRound.data, roundSet(playerRound._id));\n    round.append = append(playerRound.data, roundSet(playerRound._id, true));\n  }\n};\n\nexport const stubPlayerStageRound = (player, stage, round) => {\n  player.get = nullFunc;\n  player.set = nullFunc;\n  player.append = nullFunc;\n\n  if (stage) {\n    stage.get = nullFunc;\n    stage.set = nullFunc;\n    stage.append = nullFunc;\n    stage.submit = nullFunc;\n    stage.submitted = false;\n  }\n\n  if (round) {\n    round.get = nullFunc;\n    round.set = nullFunc;\n    round.append = nullFunc;\n  }\n};\n\nexport const augmentGameStageRound = (game, stage, round) => {\n  if (game) {\n    game.get = key => game.data[key];\n    game.set = set(game.data, gameSet(game._id));\n    game.append = append(game.data, gameSet(game._id, true));\n    game.end = endReason =>\n      earlyExitGame.call({\n        gameId: game._id,\n        endReason,\n        status: \"custom\"\n      });\n  }\n\n  if (stage) {\n    stage.get = key => {\n      return stage.data[key];\n    };\n    stage.set = set(stage.data, (key, value) => {\n      updateStageData.call({\n        stageId: stage._id,\n        key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    stage.append = append(stage.data, (key, value) => {\n      updateStageData.call({\n        stageId: stage._id,\n        key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n    stage.submit = () => {\n      throw \"You cannot submit the entire stage at the moment\";\n    };\n  }\n\n  if (round) {\n    round.get = key => {\n      return round.data[key];\n    };\n    round.set = set(round.data, (key, value) => {\n      updateRoundData.call({\n        roundId: round._id,\n        key,\n        value: JSON.stringify(value),\n        append: false,\n        noCallback: Meteor.isServer\n      });\n    });\n    round.append = append(round.data, (key, value) => {\n      updateRoundData.call({\n        roundId: round._id,\n        key,\n        value: JSON.stringify(value),\n        append: true,\n        noCallback: Meteor.isServer\n      });\n    });\n  }\n};\n\nexport const stubStageRound = (stage, round) => {\n  stage.get = nullFunc;\n  stage.set = nullFunc;\n  stage.append = nullFunc;\n  stage.submit = nullFunc;\n  round.get = nullFunc;\n  round.set = nullFunc;\n  round.append = nullFunc;\n};\n"]},"sourceType":"module","hash":"a0f091498a5d7a54411a42d09faa48a01ecd5c5e"}
