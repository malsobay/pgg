{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/server/main.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"server/main.js","filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/server/main.js","passPerPreset":false,"envName":"development","cwd":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","root":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/mosobay/Dropbox (MIT)/research/pgg/pgg_empirica/server/main.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/main.js"}},"code":"let Empirica;\nmodule.link(\"meteor/empirica:core\", {\n  default(v) {\n    Empirica = v;\n  }\n\n}, 0);\nmodule.link(\"./bots.js\");\nmodule.link(\"./callbacks.js\");\n// gameInit is where the structure of a game is defined.\n// Just before every game starts, once all the players needed are ready, this\n// function is called with the treatment and the list of players.\n// You must then add rounds and stages to the game, depending on the treatment\n// and the players. You can also get/set initial values on your game, players,\n// rounds and stages (with get/set methods), that will be able to use later in\n// the game.\n\n/*Empirica.gameInit(game => {\n  const {\n    treatment: {\n      playerCount,\n      networkStructure,\n      numTaskRounds,\n      numSurveyRounds,\n      setSizeBasedOnPlayerCount,\n      userInactivityDuration,\n      taskDuration,\n      defaultSetSize,\n      surveyDuration,\n      resultsDuration,\n      maxNumOverlap,\n    },\n  } = game;\n\n*/\nEmpirica.gameInit(game => {\n  _.times(game.treatment.numRounds, i => {\n    const round = game.addRound();\n    round.addStage({\n      name: \"contribution\",\n      displayName: \"Contribution\",\n      durationInSeconds: game.treatment.contributionDuration\n    });\n    round.addStage({\n      name: \"outcome\",\n      displayName: game.treatment.punishment > 0 ? \"Outcome/Punishment\" : \"Outcome\",\n      durationInSeconds: game.treatment.punishmentDuration\n    });\n    round.addStage({\n      name: \"summary\",\n      displayName: \"Summary\",\n      durationInSeconds: game.treatment.outcomeDuration\n    });\n  });\n});","map":{"version":3,"sources":["server/main.js"],"names":["Empirica","module","link","default","v","gameInit","game","_","times","treatment","numRounds","i","round","addRound","addStage","name","displayName","durationInSeconds","contributionDuration","punishment","punishmentDuration","outcomeDuration"],"mappings":"AAAA,IAAIA,QAAJ;AAAaC,MAAM,CAACC,IAAP,CAAY,sBAAZ,EAAmC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,QAAQ,GAACI,CAAT;AAAW;;AAAvB,CAAnC,EAA4D,CAA5D;AAA+DH,MAAM,CAACC,IAAP,CAAY,WAAZ;AAAyBD,MAAM,CAACC,IAAP,CAAY,gBAAZ;AAIrG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AAkBAF,QAAQ,CAACK,QAAT,CAAmBC,IAAD,IAAU;AAC1BC,EAAAA,CAAC,CAACC,KAAF,CAAQF,IAAI,CAACG,SAAL,CAAeC,SAAvB,EAAmCC,CAAD,IAAO;AACvC,UAAMC,KAAK,GAAGN,IAAI,CAACO,QAAL,EAAd;AAEAD,IAAAA,KAAK,CAACE,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,cADO;AAEbC,MAAAA,WAAW,EAAE,cAFA;AAGbC,MAAAA,iBAAiB,EAAEX,IAAI,CAACG,SAAL,CAAeS;AAHrB,KAAf;AAMAN,IAAAA,KAAK,CAACE,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,SADO;AAEbC,MAAAA,WAAW,EAAEV,IAAI,CAACG,SAAL,CAAeU,UAAf,GAA4B,CAA5B,GAAgC,oBAAhC,GAAuD,SAFvD;AAGbF,MAAAA,iBAAiB,EAAEX,IAAI,CAACG,SAAL,CAAeW;AAHrB,KAAf;AAMAR,IAAAA,KAAK,CAACE,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,SADO;AAEbC,MAAAA,WAAW,EAAE,SAFA;AAGbC,MAAAA,iBAAiB,EAAEX,IAAI,CAACG,SAAL,CAAeY;AAHrB,KAAf;AAKD,GApBD;AAqBD,CAtBD","sourcesContent":["import Empirica from \"meteor/empirica:core\";\nimport \"./bots.js\";\nimport \"./callbacks.js\";\n\n// gameInit is where the structure of a game is defined.\n// Just before every game starts, once all the players needed are ready, this\n// function is called with the treatment and the list of players.\n// You must then add rounds and stages to the game, depending on the treatment\n// and the players. You can also get/set initial values on your game, players,\n// rounds and stages (with get/set methods), that will be able to use later in\n// the game.\n\n/*Empirica.gameInit(game => {\n  const {\n    treatment: {\n      playerCount,\n      networkStructure,\n      numTaskRounds,\n      numSurveyRounds,\n      setSizeBasedOnPlayerCount,\n      userInactivityDuration,\n      taskDuration,\n      defaultSetSize,\n      surveyDuration,\n      resultsDuration,\n      maxNumOverlap,\n    },\n  } = game;\n\n*/\nEmpirica.gameInit((game) => {\n  _.times(game.treatment.numRounds, (i) => {\n    const round = game.addRound();\n\n    round.addStage({\n      name: \"contribution\",\n      displayName: \"Contribution\",\n      durationInSeconds: game.treatment.contributionDuration,\n    });\n\n    round.addStage({\n      name: \"outcome\",\n      displayName: game.treatment.punishment > 0 ? \"Outcome/Punishment\" : \"Outcome\",\n      durationInSeconds: game.treatment.punishmentDuration,\n    })\n\n    round.addStage({\n      name: \"summary\",\n      displayName: \"Summary\",\n      durationInSeconds: game.treatment.outcomeDuration,\n    });\n  });\n});\n"]},"sourceType":"module","hash":"704dad2e57d560e75cef2c816de59eeca245710e"}
