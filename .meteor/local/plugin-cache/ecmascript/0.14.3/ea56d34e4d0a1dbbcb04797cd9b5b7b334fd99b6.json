{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminBatchGame.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminBatchGame.jsx"}},"code":"module.export({\n  default: () => AdminBatchGame\n});\nlet Icon, Intent, Tag, Button;\nmodule.link(\"@blueprintjs/core\", {\n  Icon(v) {\n    Icon = v;\n  },\n\n  Intent(v) {\n    Intent = v;\n  },\n\n  Tag(v) {\n    Tag = v;\n  },\n\n  Button(v) {\n    Button = v;\n  }\n\n}, 0);\nlet IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames(v) {\n    IconNames = v;\n  }\n\n}, 1);\nlet moment;\nmodule.link(\"moment\", {\n  default(v) {\n    moment = v;\n  }\n\n}, 2);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 3);\nlet earlyExitGameLobby;\nmodule.link(\"../../../api/game-lobbies/methods\", {\n  earlyExitGameLobby(v) {\n    earlyExitGameLobby = v;\n  }\n\n}, 4);\nlet earlyExitGame;\nmodule.link(\"../../../api/games/methods\", {\n  earlyExitGame(v) {\n    earlyExitGame = v;\n  }\n\n}, 5);\n\nclass AdminBatchGame extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleStatusChange = (status, event) => {\n      event.preventDefault();\n      const {\n        game,\n        lobby\n      } = this.props;\n      const endReason = \"adminCancelled\";\n\n      if (game !== undefined && game._id) {\n        earlyExitGame.call({\n          gameId: game._id,\n          endReason,\n          status: status\n        });\n        return;\n      }\n\n      earlyExitGameLobby.call({\n        exitReason: endReason,\n        gameLobbyId: lobby._id,\n        status: status\n      });\n    };\n  }\n\n  render() {\n    const {\n      batch,\n      lobby,\n      game,\n      rounds,\n      stages,\n      treatment\n    } = this.props;\n    let currentRound;\n    let currentStage;\n\n    if (game) {\n      currentStage = stages.find(s => s._id === game.currentStageId);\n\n      if (currentStage) {\n        currentRound = rounds.find(r => r._id === currentStage.roundId);\n      }\n    }\n\n    let notReadyPlayers = [];\n    let players = (game ? game : lobby).playerIds;\n    let bots = [];\n\n    if (!game) {\n      notReadyPlayers = lobby.queuedPlayerIds.filter(p => players.indexOf(p) < 0);\n    }\n\n    const playerCountFactor = treatment.factor(\"playerCount\");\n    const playerCount = playerCountFactor ? playerCountFactor.value : 0;\n    const botsFactor = treatment.factor(\"botsCount\");\n    const botsCount = botsFactor && botsFactor.value;\n\n    if (botsCount) {\n      players = players.slice(0, players.length - botsCount);\n\n      for (let i = 0; i < botsCount; i++) {\n        bots.push(Random.id());\n      }\n    } // _.times(23, () => bots.push(Random.id()));\n\n\n    let statusMsg;\n    let statusIntent;\n    let statusMinimal = false;\n    let showCancelButton = false;\n\n    if (game && game.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"game cancelled\";\n    } else if (game && game.finishedAt) {\n      statusIntent = Intent.SUCCESS;\n      statusMinimal = true;\n      statusMsg = \"finished\";\n    } else if (lobby.timedOutAt) {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"lobby timeout\";\n    } else if (lobby.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"lobby cancelled\";\n    } else if (batch.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"batch cancelled\";\n    } else if (batch.status === \"failed\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"failed\";\n    } else if (batch.status === \"stopped\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"batch stopped\";\n    } else if (game) {\n      statusIntent = Intent.SUCCESS;\n      statusMsg = \"running\";\n      showCancelButton = true;\n    } else {\n      if (players.length === 0) {\n        showCancelButton = true;\n\n        if (notReadyPlayers.length === 0) {\n          statusMsg = \"empty\";\n          statusMinimal = true;\n        } else {\n          statusMsg = \"pre-lobby\";\n          statusIntent = Intent.WARNING;\n          statusMinimal = true;\n        }\n      } else {\n        showCancelButton = true;\n        statusIntent = Intent.WARNING;\n        statusMsg = \"lobby\";\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"td\", null, lobby.index + 1), /*#__PURE__*/React.createElement(\"td\", null, /*#__PURE__*/React.createElement(Tag, {\n      intent: statusIntent,\n      minimal: statusMinimal\n    }, statusMsg)), /*#__PURE__*/React.createElement(\"td\", null, treatment.displayName()), game && game.createdAt ? /*#__PURE__*/React.createElement(\"td\", {\n      title: moment(game.createdAt).format()\n    }, moment(game.createdAt).fromNow()) : /*#__PURE__*/React.createElement(\"td\", null), game && game.finishedAt ? /*#__PURE__*/React.createElement(\"td\", {\n      title: moment(game.finishedAt).format()\n    }, moment(game.finishedAt).fromNow()) : /*#__PURE__*/React.createElement(\"td\", null), game && game.finishedAt ? /*#__PURE__*/React.createElement(\"td\", {\n      title: moment(game.finishedAt).format()\n    }, \"-\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"td\", null, currentRound ? \"Round: \".concat(currentRound.index + 1, \" / \").concat(rounds.length) : \"\", currentStage ? \" > Stage: \".concat(currentStage.displayName) : \"\")), /*#__PURE__*/React.createElement(\"td\", null, playerCount), /*#__PURE__*/React.createElement(\"td\", null, bots.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"player-group\"\n    }, bots.length > 10 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      title: \"\".concat(bots.length, \" Bots\"),\n      key: \"bots\"\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: IconNames.PERSON,\n      iconSize: 16,\n      style: {\n        color: \"#D99E0B\"\n      }\n    }), \" \", \"\\xD7 \", bots.length)) : bots.map(p => /*#__PURE__*/React.createElement(\"span\", {\n      title: \"Bot\",\n      key: p\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: IconNames.PERSON,\n      iconSize: 16,\n      style: {\n        color: \"#D99E0B\"\n      }\n    })))) : \"\", notReadyPlayers.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"player-group\"\n    }, notReadyPlayers.length > 10 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      title: \"\".concat(notReadyPlayers.length, \" Players in Intro Steps\"),\n      key: \"notReadyPlayers\"\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: IconNames.PERSON,\n      iconSize: 16,\n      style: {\n        color: \"#A7B6C2\"\n      }\n    })), \" \", \"\\xD7 \", notReadyPlayers.length) : notReadyPlayers.map(p => /*#__PURE__*/React.createElement(\"span\", {\n      title: \"Player in Intro Steps\",\n      key: p\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: IconNames.PERSON,\n      iconSize: 16,\n      style: {\n        color: \"#A7B6C2\"\n      }\n    })))) : \"\", players.length > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"player-group\"\n    }, players.length > 10 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      title: \"\".concat(players.length, \" Players\"),\n      key: \"players\"\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: IconNames.PERSON,\n      iconSize: 16\n    })), \" \", \"\\xD7 \", players.length) : players.map(p => /*#__PURE__*/React.createElement(\"span\", {\n      title: \"Player\",\n      key: p\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: IconNames.PERSON,\n      iconSize: 16\n    })))) : \"\"), /*#__PURE__*/React.createElement(\"td\", null, showCancelButton && /*#__PURE__*/React.createElement(Button, {\n      text: \"Cancel\",\n      icon: IconNames.STOP,\n      key: \"cancel\",\n      onClick: this.handleStatusChange.bind(this, \"cancelled\")\n    })));\n  }\n\n}","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminBatchGame.jsx"],"names":["module","export","default","AdminBatchGame","Icon","Intent","Tag","Button","link","v","IconNames","moment","React","earlyExitGameLobby","earlyExitGame","Component","handleStatusChange","status","event","preventDefault","game","lobby","props","endReason","undefined","_id","call","gameId","exitReason","gameLobbyId","render","batch","rounds","stages","treatment","currentRound","currentStage","find","s","currentStageId","r","roundId","notReadyPlayers","players","playerIds","bots","queuedPlayerIds","filter","p","indexOf","playerCountFactor","factor","playerCount","value","botsFactor","botsCount","slice","length","i","push","Random","id","statusMsg","statusIntent","statusMinimal","showCancelButton","DANGER","finishedAt","SUCCESS","timedOutAt","WARNING","index","displayName","createdAt","format","fromNow","PERSON","color","map","STOP","bind"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAA4C,IAAIC,IAAJ,EAASC,MAAT,EAAgBC,GAAhB,EAAoBC,MAApB;AAA2BP,MAAM,CAACQ,IAAP,CAAY,mBAAZ,EAAgC;AAACJ,EAAAA,IAAI,CAACK,CAAD,EAAG;AAACL,IAAAA,IAAI,GAACK,CAAL;AAAO,GAAhB;;AAAiBJ,EAAAA,MAAM,CAACI,CAAD,EAAG;AAACJ,IAAAA,MAAM,GAACI,CAAP;AAAS,GAApC;;AAAqCH,EAAAA,GAAG,CAACG,CAAD,EAAG;AAACH,IAAAA,GAAG,GAACG,CAAJ;AAAM,GAAlD;;AAAmDF,EAAAA,MAAM,CAACE,CAAD,EAAG;AAACF,IAAAA,MAAM,GAACE,CAAP;AAAS;;AAAtE,CAAhC,EAAwG,CAAxG;AAA2G,IAAIC,SAAJ;AAAcV,MAAM,CAACQ,IAAP,CAAY,oBAAZ,EAAiC;AAACE,EAAAA,SAAS,CAACD,CAAD,EAAG;AAACC,IAAAA,SAAS,GAACD,CAAV;AAAY;;AAA1B,CAAjC,EAA6D,CAA7D;AAAgE,IAAIE,MAAJ;AAAWX,MAAM,CAACQ,IAAP,CAAY,QAAZ,EAAqB;AAACN,EAAAA,OAAO,CAACO,CAAD,EAAG;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;;AAArB,CAArB,EAA4C,CAA5C;AAA+C,IAAIG,KAAJ;AAAUZ,MAAM,CAACQ,IAAP,CAAY,OAAZ,EAAoB;AAACN,EAAAA,OAAO,CAACO,CAAD,EAAG;AAACG,IAAAA,KAAK,GAACH,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAII,kBAAJ;AAAuBb,MAAM,CAACQ,IAAP,CAAY,mCAAZ,EAAgD;AAACK,EAAAA,kBAAkB,CAACJ,CAAD,EAAG;AAACI,IAAAA,kBAAkB,GAACJ,CAAnB;AAAqB;;AAA5C,CAAhD,EAA8F,CAA9F;AAAiG,IAAIK,aAAJ;AAAkBd,MAAM,CAACQ,IAAP,CAAY,4BAAZ,EAAyC;AAACM,EAAAA,aAAa,CAACL,CAAD,EAAG;AAACK,IAAAA,aAAa,GAACL,CAAd;AAAgB;;AAAlC,CAAzC,EAA6E,CAA7E;;AAO5e,MAAMN,cAAN,SAA6BS,KAAK,CAACG,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAC1DC,kBAD0D,GACrC,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtCA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,KAAKC,KAA7B;AACA,YAAMC,SAAS,GAAG,gBAAlB;;AAEA,UAAIH,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,CAACK,GAA/B,EAAoC;AAClCX,QAAAA,aAAa,CAACY,IAAd,CAAmB;AACjBC,UAAAA,MAAM,EAAEP,IAAI,CAACK,GADI;AAEjBF,UAAAA,SAFiB;AAGjBN,UAAAA,MAAM,EAAEA;AAHS,SAAnB;AAKA;AACD;;AAEDJ,MAAAA,kBAAkB,CAACa,IAAnB,CAAwB;AACtBE,QAAAA,UAAU,EAAEL,SADU;AAEtBM,QAAAA,WAAW,EAAER,KAAK,CAACI,GAFG;AAGtBR,QAAAA,MAAM,EAAEA;AAHc,OAAxB;AAKD,KApByD;AAAA;;AAsB1Da,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASV,MAAAA,KAAT;AAAgBD,MAAAA,IAAhB;AAAsBY,MAAAA,MAAtB;AAA8BC,MAAAA,MAA9B;AAAsCC,MAAAA;AAAtC,QAAoD,KAAKZ,KAA/D;AAEA,QAAIa,YAAJ;AACA,QAAIC,YAAJ;;AACA,QAAIhB,IAAJ,EAAU;AACRgB,MAAAA,YAAY,GAAGH,MAAM,CAACI,IAAP,CAAYC,CAAC,IAAIA,CAAC,CAACb,GAAF,KAAUL,IAAI,CAACmB,cAAhC,CAAf;;AACA,UAAIH,YAAJ,EAAkB;AAChBD,QAAAA,YAAY,GAAGH,MAAM,CAACK,IAAP,CAAYG,CAAC,IAAIA,CAAC,CAACf,GAAF,KAAUW,YAAY,CAACK,OAAxC,CAAf;AACD;AACF;;AAED,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,OAAO,GAAG,CAACvB,IAAI,GAAGA,IAAH,GAAUC,KAAf,EAAsBuB,SAApC;AACA,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAI,CAACzB,IAAL,EAAW;AACTsB,MAAAA,eAAe,GAAGrB,KAAK,CAACyB,eAAN,CAAsBC,MAAtB,CAChBC,CAAC,IAAIL,OAAO,CAACM,OAAR,CAAgBD,CAAhB,IAAqB,CADV,CAAlB;AAGD;;AAED,UAAME,iBAAiB,GAAGhB,SAAS,CAACiB,MAAV,CAAiB,aAAjB,CAA1B;AACA,UAAMC,WAAW,GAAGF,iBAAiB,GAAGA,iBAAiB,CAACG,KAArB,GAA6B,CAAlE;AACA,UAAMC,UAAU,GAAGpB,SAAS,CAACiB,MAAV,CAAiB,WAAjB,CAAnB;AACA,UAAMI,SAAS,GAAGD,UAAU,IAAIA,UAAU,CAACD,KAA3C;;AACA,QAAIE,SAAJ,EAAe;AACbZ,MAAAA,OAAO,GAAGA,OAAO,CAACa,KAAR,CAAc,CAAd,EAAiBb,OAAO,CAACc,MAAR,GAAiBF,SAAlC,CAAV;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC;AAClCb,QAAAA,IAAI,CAACc,IAAL,CAAUC,MAAM,CAACC,EAAP,EAAV;AACD;AACF,KA/BM,CAiCP;;;AAEA,QAAIC,SAAJ;AACA,QAAIC,YAAJ;AACA,QAAIC,aAAa,GAAG,KAApB;AACA,QAAIC,gBAAgB,GAAG,KAAvB;;AACA,QAAI7C,IAAI,IAAIA,IAAI,CAACH,MAAL,KAAgB,WAA5B,EAAyC;AACvC8C,MAAAA,YAAY,GAAG1D,MAAM,CAAC6D,MAAtB;AACAF,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,gBAAZ;AACD,KAJD,MAIO,IAAI1C,IAAI,IAAIA,IAAI,CAAC+C,UAAjB,EAA6B;AAClCJ,MAAAA,YAAY,GAAG1D,MAAM,CAAC+D,OAAtB;AACAJ,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,UAAZ;AACD,KAJM,MAIA,IAAIzC,KAAK,CAACgD,UAAV,EAAsB;AAC3BN,MAAAA,YAAY,GAAG1D,MAAM,CAAC6D,MAAtB;AACAF,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,eAAZ;AACD,KAJM,MAIA,IAAIzC,KAAK,CAACJ,MAAN,KAAiB,WAArB,EAAkC;AACvC8C,MAAAA,YAAY,GAAG1D,MAAM,CAAC6D,MAAtB;AACAF,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,iBAAZ;AACD,KAJM,MAIA,IAAI/B,KAAK,CAACd,MAAN,KAAiB,WAArB,EAAkC;AACvC8C,MAAAA,YAAY,GAAG1D,MAAM,CAAC6D,MAAtB;AACAF,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,iBAAZ;AACD,KAJM,MAIA,IAAI/B,KAAK,CAACd,MAAN,KAAiB,QAArB,EAA+B;AACpC8C,MAAAA,YAAY,GAAG1D,MAAM,CAAC6D,MAAtB;AACAF,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,QAAZ;AACD,KAJM,MAIA,IAAI/B,KAAK,CAACd,MAAN,KAAiB,SAArB,EAAgC;AACrC8C,MAAAA,YAAY,GAAG1D,MAAM,CAAC6D,MAAtB;AACAF,MAAAA,aAAa,GAAG,IAAhB;AACAF,MAAAA,SAAS,GAAG,eAAZ;AACD,KAJM,MAIA,IAAI1C,IAAJ,EAAU;AACf2C,MAAAA,YAAY,GAAG1D,MAAM,CAAC+D,OAAtB;AACAN,MAAAA,SAAS,GAAG,SAAZ;AACAG,MAAAA,gBAAgB,GAAG,IAAnB;AACD,KAJM,MAIA;AACL,UAAItB,OAAO,CAACc,MAAR,KAAmB,CAAvB,EAA0B;AACxBQ,QAAAA,gBAAgB,GAAG,IAAnB;;AACA,YAAIvB,eAAe,CAACe,MAAhB,KAA2B,CAA/B,EAAkC;AAChCK,UAAAA,SAAS,GAAG,OAAZ;AACAE,UAAAA,aAAa,GAAG,IAAhB;AACD,SAHD,MAGO;AACLF,UAAAA,SAAS,GAAG,WAAZ;AACAC,UAAAA,YAAY,GAAG1D,MAAM,CAACiE,OAAtB;AACAN,UAAAA,aAAa,GAAG,IAAhB;AACD;AACF,OAVD,MAUO;AACLC,QAAAA,gBAAgB,GAAG,IAAnB;AACAF,QAAAA,YAAY,GAAG1D,MAAM,CAACiE,OAAtB;AACAR,QAAAA,SAAS,GAAG,OAAZ;AACD;AACF;;AAED,wBACE,6CACE,gCAAKzC,KAAK,CAACkD,KAAN,GAAc,CAAnB,CADF,eAEE,6CACE,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAER,YAAb;AAA2B,MAAA,OAAO,EAAEC;AAApC,OACGF,SADH,CADF,CAFF,eAOE,gCAAK5B,SAAS,CAACsC,WAAV,EAAL,CAPF,EASGpD,IAAI,IAAIA,IAAI,CAACqD,SAAb,gBACC;AAAI,MAAA,KAAK,EAAE9D,MAAM,CAACS,IAAI,CAACqD,SAAN,CAAN,CAAuBC,MAAvB;AAAX,OACG/D,MAAM,CAACS,IAAI,CAACqD,SAAN,CAAN,CAAuBE,OAAvB,EADH,CADD,gBAKC,+BAdJ,EAiBGvD,IAAI,IAAIA,IAAI,CAAC+C,UAAb,gBACC;AAAI,MAAA,KAAK,EAAExD,MAAM,CAACS,IAAI,CAAC+C,UAAN,CAAN,CAAwBO,MAAxB;AAAX,OACG/D,MAAM,CAACS,IAAI,CAAC+C,UAAN,CAAN,CAAwBQ,OAAxB,EADH,CADD,gBAKC,+BAtBJ,EAyBGvD,IAAI,IAAIA,IAAI,CAAC+C,UAAb,gBACC;AAAI,MAAA,KAAK,EAAExD,MAAM,CAACS,IAAI,CAAC+C,UAAN,CAAN,CAAwBO,MAAxB;AAAX,WADD,gBAGC,uDACE,gCACGvC,YAAY,oBACCA,YAAY,CAACoC,KAAb,GAAqB,CADtB,gBAC6BvC,MAAM,CAACyB,MADpC,IAET,EAHN,EAIGrB,YAAY,uBAAgBA,YAAY,CAACoC,WAA7B,IAA6C,EAJ5D,CADF,CA5BJ,eAqCE,gCAAKpB,WAAL,CArCF,eAsCE,gCACGP,IAAI,CAACY,MAAL,GAAc,CAAd,gBACC;AAAM,MAAA,SAAS,EAAC;AAAhB,OACGZ,IAAI,CAACY,MAAL,GAAc,EAAd,gBACC,uDACE;AAAM,MAAA,KAAK,YAAKZ,IAAI,CAACY,MAAV,UAAX;AAAoC,MAAA,GAAG,EAAC;AAAxC,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE/C,SAAS,CAACkE,MADlB;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHT,MADF,EAKK,GALL,WAMKhC,IAAI,CAACY,MANV,CADF,CADD,GAYCZ,IAAI,CAACiC,GAAL,CAAS9B,CAAC,iBACR;AAAM,MAAA,KAAK,EAAC,KAAZ;AAAkB,MAAA,GAAG,EAAEA;AAAvB,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEtC,SAAS,CAACkE,MADlB;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHT,MADF,CADF,CAbJ,CADD,GA0BC,EA3BJ,EA8BGnC,eAAe,CAACe,MAAhB,GAAyB,CAAzB,gBACC;AAAM,MAAA,SAAS,EAAC;AAAhB,OACGf,eAAe,CAACe,MAAhB,GAAyB,EAAzB,gBACC,uDACE;AACE,MAAA,KAAK,YAAKf,eAAe,CAACe,MAArB,4BADP;AAEE,MAAA,GAAG,EAAC;AAFN,oBAIE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE/C,SAAS,CAACkE,MADlB;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHT,MAJF,CADF,EAUU,GAVV,WAWKnC,eAAe,CAACe,MAXrB,CADD,GAeCf,eAAe,CAACoC,GAAhB,CAAoB9B,CAAC,iBACnB;AAAM,MAAA,KAAK,EAAC,uBAAZ;AAAoC,MAAA,GAAG,EAAEA;AAAzC,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEtC,SAAS,CAACkE,MADlB;AAEE,MAAA,QAAQ,EAAE,EAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHT,MADF,CADF,CAhBJ,CADD,GA6BC,EA3DJ,EA8DGlC,OAAO,CAACc,MAAR,GAAiB,CAAjB,gBACC;AAAM,MAAA,SAAS,EAAC;AAAhB,OACGd,OAAO,CAACc,MAAR,GAAiB,EAAjB,gBACC,uDACE;AAAM,MAAA,KAAK,YAAKd,OAAO,CAACc,MAAb,aAAX;AAA0C,MAAA,GAAG,EAAC;AAA9C,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE/C,SAAS,CAACkE,MAAtB;AAA8B,MAAA,QAAQ,EAAE;AAAxC,MADF,CADF,EAGU,GAHV,WAIKjC,OAAO,CAACc,MAJb,CADD,GAQCd,OAAO,CAACmC,GAAR,CAAY9B,CAAC,iBACX;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAEA;AAA1B,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEtC,SAAS,CAACkE,MAAtB;AAA8B,MAAA,QAAQ,EAAE;AAAxC,MADF,CADF,CATJ,CADD,GAkBC,EAhFJ,CAtCF,eAyHE,gCACGX,gBAAgB,iBACf,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAEvD,SAAS,CAACqE,IAFlB;AAGE,MAAA,GAAG,EAAC,QAHN;AAIE,MAAA,OAAO,EAAE,KAAK/D,kBAAL,CAAwBgE,IAAxB,CAA6B,IAA7B,EAAmC,WAAnC;AAJX,MAFJ,CAzHF,CADF;AAsID;;AArPyD","sourcesContent":["import { Icon, Intent, Tag, Button } from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { earlyExitGameLobby } from \"../../../api/game-lobbies/methods\";\nimport { earlyExitGame } from \"../../../api/games/methods\";\n\nexport default class AdminBatchGame extends React.Component {\n  handleStatusChange = (status, event) => {\n    event.preventDefault();\n    const { game, lobby } = this.props;\n    const endReason = \"adminCancelled\";\n\n    if (game !== undefined && game._id) {\n      earlyExitGame.call({\n        gameId: game._id,\n        endReason,\n        status: status\n      });\n      return;\n    }\n\n    earlyExitGameLobby.call({\n      exitReason: endReason,\n      gameLobbyId: lobby._id,\n      status: status\n    });\n  };\n\n  render() {\n    const { batch, lobby, game, rounds, stages, treatment } = this.props;\n\n    let currentRound;\n    let currentStage;\n    if (game) {\n      currentStage = stages.find(s => s._id === game.currentStageId);\n      if (currentStage) {\n        currentRound = rounds.find(r => r._id === currentStage.roundId);\n      }\n    }\n\n    let notReadyPlayers = [];\n    let players = (game ? game : lobby).playerIds;\n    let bots = [];\n\n    if (!game) {\n      notReadyPlayers = lobby.queuedPlayerIds.filter(\n        p => players.indexOf(p) < 0\n      );\n    }\n\n    const playerCountFactor = treatment.factor(\"playerCount\");\n    const playerCount = playerCountFactor ? playerCountFactor.value : 0;\n    const botsFactor = treatment.factor(\"botsCount\");\n    const botsCount = botsFactor && botsFactor.value;\n    if (botsCount) {\n      players = players.slice(0, players.length - botsCount);\n      for (let i = 0; i < botsCount; i++) {\n        bots.push(Random.id());\n      }\n    }\n\n    // _.times(23, () => bots.push(Random.id()));\n\n    let statusMsg;\n    let statusIntent;\n    let statusMinimal = false;\n    let showCancelButton = false;\n    if (game && game.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"game cancelled\";\n    } else if (game && game.finishedAt) {\n      statusIntent = Intent.SUCCESS;\n      statusMinimal = true;\n      statusMsg = \"finished\";\n    } else if (lobby.timedOutAt) {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"lobby timeout\";\n    } else if (lobby.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"lobby cancelled\";\n    } else if (batch.status === \"cancelled\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"batch cancelled\";\n    } else if (batch.status === \"failed\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"failed\";\n    } else if (batch.status === \"stopped\") {\n      statusIntent = Intent.DANGER;\n      statusMinimal = true;\n      statusMsg = \"batch stopped\";\n    } else if (game) {\n      statusIntent = Intent.SUCCESS;\n      statusMsg = \"running\";\n      showCancelButton = true;\n    } else {\n      if (players.length === 0) {\n        showCancelButton = true;\n        if (notReadyPlayers.length === 0) {\n          statusMsg = \"empty\";\n          statusMinimal = true;\n        } else {\n          statusMsg = \"pre-lobby\";\n          statusIntent = Intent.WARNING;\n          statusMinimal = true;\n        }\n      } else {\n        showCancelButton = true;\n        statusIntent = Intent.WARNING;\n        statusMsg = \"lobby\";\n      }\n    }\n\n    return (\n      <tr>\n        <td>{lobby.index + 1}</td>\n        <td>\n          <Tag intent={statusIntent} minimal={statusMinimal}>\n            {statusMsg}\n          </Tag>\n        </td>\n        <td>{treatment.displayName()}</td>\n\n        {game && game.createdAt ? (\n          <td title={moment(game.createdAt).format()}>\n            {moment(game.createdAt).fromNow()}\n          </td>\n        ) : (\n          <td />\n        )}\n\n        {game && game.finishedAt ? (\n          <td title={moment(game.finishedAt).format()}>\n            {moment(game.finishedAt).fromNow()}\n          </td>\n        ) : (\n          <td />\n        )}\n\n        {game && game.finishedAt ? (\n          <td title={moment(game.finishedAt).format()}>-</td>\n        ) : (\n          <>\n            <td>\n              {currentRound\n                ? `Round: ${currentRound.index + 1} / ${rounds.length}`\n                : \"\"}\n              {currentStage ? ` > Stage: ${currentStage.displayName}` : \"\"}\n            </td>\n          </>\n        )}\n        <td>{playerCount}</td>\n        <td>\n          {bots.length > 0 ? (\n            <span className=\"player-group\">\n              {bots.length > 10 ? (\n                <>\n                  <span title={`${bots.length} Bots`} key=\"bots\">\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#D99E0B\" }}\n                    />{\" \"}\n                    × {bots.length}\n                  </span>\n                </>\n              ) : (\n                bots.map(p => (\n                  <span title=\"Bot\" key={p}>\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#D99E0B\" }}\n                    />\n                  </span>\n                ))\n              )}\n            </span>\n          ) : (\n            \"\"\n          )}\n\n          {notReadyPlayers.length > 0 ? (\n            <span className=\"player-group\">\n              {notReadyPlayers.length > 10 ? (\n                <>\n                  <span\n                    title={`${notReadyPlayers.length} Players in Intro Steps`}\n                    key=\"notReadyPlayers\"\n                  >\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#A7B6C2\" }}\n                    />\n                  </span>{\" \"}\n                  × {notReadyPlayers.length}\n                </>\n              ) : (\n                notReadyPlayers.map(p => (\n                  <span title=\"Player in Intro Steps\" key={p}>\n                    <Icon\n                      icon={IconNames.PERSON}\n                      iconSize={16}\n                      style={{ color: \"#A7B6C2\" }}\n                    />\n                  </span>\n                ))\n              )}\n            </span>\n          ) : (\n            \"\"\n          )}\n\n          {players.length > 0 ? (\n            <span className=\"player-group\">\n              {players.length > 10 ? (\n                <>\n                  <span title={`${players.length} Players`} key=\"players\">\n                    <Icon icon={IconNames.PERSON} iconSize={16} />\n                  </span>{\" \"}\n                  × {players.length}\n                </>\n              ) : (\n                players.map(p => (\n                  <span title=\"Player\" key={p}>\n                    <Icon icon={IconNames.PERSON} iconSize={16} />\n                  </span>\n                ))\n              )}\n            </span>\n          ) : (\n            \"\"\n          )}\n        </td>\n        <td>\n          {showCancelButton && (\n            <Button\n              text=\"Cancel\"\n              icon={IconNames.STOP}\n              key=\"cancel\"\n              onClick={this.handleStatusChange.bind(this, \"cancelled\")}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"ea56d34e4d0a1dbbcb04797cd9b5b7b334fd99b6"}
