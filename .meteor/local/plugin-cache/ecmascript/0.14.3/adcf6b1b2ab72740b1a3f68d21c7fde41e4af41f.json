{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminExport.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/empirica:core/ui/components/admin/AdminExport.jsx","filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminExport.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/tilenbabnik/Desktop/pgg","root":"/Users/tilenbabnik/Desktop/pgg","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/tilenbabnik/Desktop/pgg/packages/empirica:core/ui/components/admin/AdminExport.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/empirica:core/ui/components/admin/AdminExport.jsx"}},"code":"module.export({\n  default: () => AdminExport\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Button, FormGroup, HTMLSelect, Intent, Checkbox;\nmodule.link(\"@blueprintjs/core\", {\n  Button(v) {\n    Button = v;\n  },\n\n  FormGroup(v) {\n    FormGroup = v;\n  },\n\n  HTMLSelect(v) {\n    HTMLSelect = v;\n  },\n\n  Intent(v) {\n    Intent = v;\n  },\n\n  Checkbox(v) {\n    Checkbox = v;\n  }\n\n}, 1);\nlet IconNames;\nmodule.link(\"@blueprintjs/icons\", {\n  IconNames(v) {\n    IconNames = v;\n  }\n\n}, 2);\nlet AdminPageHeader;\nmodule.link(\"./AdminHeading.jsx\", {\n  AdminPageHeader(v) {\n    AdminPageHeader = v;\n  }\n\n}, 3);\n\nclass AdminExport extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      format: \"CSV\",\n      exporting: false,\n      includePii: false\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value,\n        type\n      } = event.currentTarget;\n\n      if (type === \"checkbox\") {\n        this.setState({\n          [name]: event.currentTarget.checked\n        });\n        return;\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleExport = () => {\n      const {\n        includePii\n      } = this.state;\n      document.location = \"/admin/export.\".concat(this.state.format.toLowerCase(), \"?include_pii=\").concat(includePii);\n    };\n  }\n\n  render() {\n    const {\n      format,\n      exporting,\n      includePii\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"export\"\n    }, /*#__PURE__*/React.createElement(AdminPageHeader, {\n      icon: IconNames.EXPORT\n    }, \"Export\"), /*#__PURE__*/React.createElement(\"p\", null, \"The export function dumps all the app data as multiple CSV / JSON / JSON Line files zipped, one for each data type. You can reassociate the data pieces through IDs.\"), /*#__PURE__*/React.createElement(FormGroup, null, /*#__PURE__*/React.createElement(HTMLSelect, {\n      id: \"format\",\n      name: \"format\",\n      value: format,\n      options: [\"CSV\", \"JSON\", \"JSONL\"],\n      onChange: this.handleChange\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      checked: includePii,\n      label: \"Add Personal Identity Information (includes the player ID, URL parameters, and IP address)\",\n      onChange: this.handleChange,\n      name: \"includePii\"\n    })), /*#__PURE__*/React.createElement(FormGroup, null, /*#__PURE__*/React.createElement(Button, {\n      text: \"Export All\",\n      loading: exporting,\n      intent: Intent.PRIMARY,\n      onClick: this.handleExport\n    })), format === \"CSV\" && /*#__PURE__*/React.createElement(\"p\", null, \"Each file is a CSV file\"), format === \"JSON\" && /*#__PURE__*/React.createElement(\"p\", null, \"Each file is a single large JSON object\"), format === \"JSONL\" && /*#__PURE__*/React.createElement(\"p\", null, \"Each file contains\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n      target: \"blank\",\n      href: \"http://jsonlines.org\"\n    }, \"JSON Lines\"), \", where each line is a object.\"));\n  }\n\n}","map":{"version":3,"sources":["packages/empirica:core/ui/components/admin/AdminExport.jsx"],"names":["module","export","default","AdminExport","React","link","v","Button","FormGroup","HTMLSelect","Intent","Checkbox","IconNames","AdminPageHeader","Component","state","format","exporting","includePii","handleChange","event","name","value","type","currentTarget","setState","checked","handleExport","document","location","toLowerCase","render","EXPORT","PRIMARY"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Button,\n  FormGroup,\n  HTMLSelect,\n  Intent,\n  Checkbox\n} from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\nimport { AdminPageHeader } from \"./AdminHeading.jsx\";\n\nexport default class AdminExport extends React.Component {\n  state = { format: \"CSV\", exporting: false, includePii: false };\n\n  handleChange = event => {\n    const { name, value, type } = event.currentTarget;\n    if (type === \"checkbox\") {\n      this.setState({ [name]: event.currentTarget.checked });\n      return;\n    }\n\n    this.setState({ [name]: value });\n  };\n\n  handleExport = () => {\n    const { includePii } = this.state;\n    document.location = `/admin/export.${this.state.format.toLowerCase()}?include_pii=${includePii}`;\n  };\n\n  render() {\n    const { format, exporting, includePii } = this.state;\n\n    return (\n      <div className=\"export\">\n        <AdminPageHeader icon={IconNames.EXPORT}>Export</AdminPageHeader>\n\n        <p>\n          The export function dumps all the app data as multiple CSV / JSON /\n          JSON Line files zipped, one for each data type. You can reassociate\n          the data pieces through IDs.\n        </p>\n\n        <FormGroup>\n          <HTMLSelect\n            id=\"format\"\n            name=\"format\"\n            value={format}\n            options={[\"CSV\", \"JSON\", \"JSONL\"]}\n            onChange={this.handleChange}\n          />\n          <Checkbox\n            checked={includePii}\n            label=\"Add Personal Identity Information (includes the player ID, URL parameters, and IP address)\"\n            onChange={this.handleChange}\n            name=\"includePii\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Button\n            text=\"Export All\"\n            loading={exporting}\n            intent={Intent.PRIMARY}\n            onClick={this.handleExport}\n          />\n        </FormGroup>\n        {format === \"CSV\" && <p>Each file is a CSV file</p>}\n        {format === \"JSON\" && <p>Each file is a single large JSON object</p>}\n        {format === \"JSONL\" && (\n          <p>\n            Each file contains{\" \"}\n            <a target=\"blank\" href=\"http://jsonlines.org\">\n              JSON Lines\n            </a>\n            , where each line is a object.\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n"]},"sourceType":"module","hash":"adcf6b1b2ab72740b1a3f68d21c7fde41e4af41f"}
